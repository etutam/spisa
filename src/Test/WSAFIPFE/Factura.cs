namespace WSAFIPFE
{
    using Google.GData.Client;
    using Google.GData.Spreadsheets;
    using Microsoft.VisualBasic;
    using Microsoft.VisualBasic.CompilerServices;
    using System;
    using System.Collections.Generic;
    using System.Diagnostics;
    using System.IO;
    using System.Net;
    using System.Reflection;
    using System.Runtime.InteropServices;
    using System.Security.Cryptography;
    using System.Text;
    using System.Web.Script.Serialization;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using WSAFIPFE.afip;
    using WSAFIPFE.afipTest;
    using WSAFIPFE.bAFIP;
    using WSAFIPFE.bAFIPTest;
    using WSAFIPFE.dAFIPTest;
    using WSAFIPFE.f1AFIP;
    using WSAFIPFE.f1AFIPTest;
    using WSAFIPFE.fxAFIP;
    using WSAFIPFE.fxAFIPTest;
    using WSAFIPFE.gAFIPTest;
    using WSAFIPFE.sAFIP;
    using WSAFIPFE.sAFIPTest;
    using WSAFIPFE.xAFIP;
    using WSAFIPFE.xAFIPTest;

    [ComVisible(true), Guid("e0427e75-8757-422f-a419-12b10c49adcb")]
    public interface _Factura
    {
        [DispId(1)]
        string revision { [DispId(1)] get; }
        [DispId(2)]
        bool LicenciaArchivoValido { [DispId(2)] get; }
        [DispId(3)]
        string LicenciaCodigo { [DispId(3)] get; }
        [DispId(4)]
        string LicenciaDatos { [DispId(4)] get; }
        [DispId(5)]
        bool LicenciaDatosValida { [DispId(5)] get; }
        [DispId(6)]
        DateTime LicenciaFecha { [DispId(6)] get; }
        [DispId(7)]
        bool this[DateTime dFecha] { [DispId(7)] get; }
        [DispId(8)]
        DateTime LicenciaHasta { [DispId(8)] get; }
        [DispId(9)]
        int LicenciaValor { [DispId(9)] get; }
        [DispId(10)]
        int LicenciaLimite { [DispId(10)] get; }
        [DispId(11)]
        int LicenciaUsado { [DispId(11)] get; }
        [DispId(12)]
        string ProxyUserName { [DispId(12)] get; [DispId(12)] set; }
        [DispId(13)]
        string ProxyDomain { [DispId(13)] get; [DispId(13)] set; }
        [DispId(14)]
        string ProxyHost { [DispId(14)] get; [DispId(14)] set; }
        [DispId(15)]
        int ProxyPort { [DispId(15)] get; [DispId(15)] set; }
        [DispId(0x10)]
        string ProxyUserPassword { [DispId(0x10)] get; [DispId(0x10)] set; }
        [DispId(0x11)]
        int dRespuestaCodError { [DispId(0x11)] get; }
        [DispId(0x12)]
        string dRespuestaDescError { [DispId(0x12)] get; }
        [DispId(0x13)]
        double xRespuestaMonedaCtz { [DispId(0x13)] get; }
        [DispId(20)]
        string xRespuestaMonedaCtzFecha { [DispId(20)] get; }
        [DispId(0x15)]
        string ArchivoXMLError { [DispId(0x15)] get; }
        [DispId(0x16)]
        string ArchivoXMLRecibido { [DispId(0x16)] get; [DispId(0x16)] set; }
        [DispId(0x17)]
        string ArchivoXMLEnviado { [DispId(0x17)] get; [DispId(0x17)] set; }
        [DispId(0x18)]
        int paso { [DispId(0x18)] get; [DispId(0x18)] set; }
        [DispId(0x19)]
        int bMonedaItemCantidad { [DispId(0x19)] get; }
        [DispId(0x1a)]
        int xMonedaItemCantidad { [DispId(0x1a)] get; }
        [DispId(0x1b)]
        int xPtoVentaItemCantidad { [DispId(0x1b)] get; }
        [DispId(0x1c)]
        int xIdiomaItemCantidad { [DispId(0x1c)] get; }
        [DispId(0x1d)]
        int xTipo_expoItemCantidad { [DispId(0x1d)] get; }
        [DispId(30)]
        int xIncoTermsItemCantidad { [DispId(30)] get; }
        [DispId(0x1f)]
        int xPaisItemCantidad { [DispId(0x1f)] get; }
        [DispId(0x20)]
        int xCuitItemCantidad { [DispId(0x20)] get; }
        [DispId(0x21)]
        int sMonedaItemCantidad { [DispId(0x21)] get; }
        [DispId(0x22)]
        int bTipo_CbteItemCantidad { [DispId(0x22)] get; }
        [DispId(0x23)]
        int xTipo_CbteItemCantidad { [DispId(0x23)] get; }
        [DispId(0x24)]
        int f1TiposCbteItemCantidad { [DispId(0x24)] get; }
        [DispId(0x25)]
        int fxListaItemCantidad { [DispId(0x25)] get; }
        [DispId(0x26)]
        int f1TiposTributoItemCantidad { [DispId(0x26)] get; }
        [DispId(0x27)]
        int f1TiposOpcionalItemCantidad { [DispId(0x27)] get; }
        [DispId(40)]
        int f1TiposMonedaItemCantidad { [DispId(40)] get; }
        [DispId(0x29)]
        int f1TiposIvaItemCantidad { [DispId(0x29)] get; }
        [DispId(0x2a)]
        int f1TiposDocItemCantidad { [DispId(0x2a)] get; }
        [DispId(0x2b)]
        int f1PtosVentaItemCantidad { [DispId(0x2b)] get; }
        [DispId(0x2c)]
        int f1TiposConceptoItemCantidad { [DispId(0x2c)] get; }
        [DispId(0x2d)]
        int f1ErrorItemCantidad { [DispId(0x2d)] get; }
        [DispId(0x2e)]
        int f1EventItemCantidad { [DispId(0x2e)] get; }
        [DispId(0x2f)]
        int fxErrorItemCantidad { [DispId(0x2f)] get; }
        [DispId(0x30)]
        int fxObervacionItemCantidad { [DispId(0x30)] get; }
        [DispId(0x31)]
        int fxEventItemCantidad { [DispId(0x31)] get; }
        [DispId(50)]
        int sTipo_CbteItemCantidad { [DispId(50)] get; }
        [DispId(0x33)]
        int bProductoItemCantidad { [DispId(0x33)] get; }
        [DispId(0x34)]
        int bTipoIvaItemCantidad { [DispId(0x34)] get; }
        [DispId(0x35)]
        int sTipoIvaItemCantidad { [DispId(0x35)] get; }
        [DispId(0x36)]
        int bUMedItemCantidad { [DispId(0x36)] get; }
        [DispId(0x37)]
        int xUMedItemCantidad { [DispId(0x37)] get; }
        [DispId(0x38)]
        int bTipoDocItemCantidad { [DispId(0x38)] get; }
        [DispId(0x39)]
        int sTipoDocItemCantidad { [DispId(0x39)] get; }
        [DispId(0x3a)]
        int bZonaItemCantidad { [DispId(0x3a)] get; }
        [DispId(0x3b)]
        int bEventCode { [DispId(0x3b)] get; }
        [DispId(60)]
        int xEventCode { [DispId(60)] get; }
        [DispId(0x3d)]
        int sEventCode { [DispId(0x3d)] get; }
        [DispId(0x3e)]
        string bRespuestasCUIT { [DispId(0x3e)] get; }
        [DispId(0x3f)]
        string bRespuestaFch_venc_cae { [DispId(0x3f)] get; }
        [DispId(0x40)]
        string sRespuestaFch_venc_cae { [DispId(0x40)] get; }
        [DispId(0x41)]
        string bEventMsg { [DispId(0x41)] get; }
        [DispId(0x42)]
        string xEventMsg { [DispId(0x42)] get; }
        [DispId(0x43)]
        string sEventMsg { [DispId(0x43)] get; }
        [DispId(0x44)]
        string bRespuestaId { [DispId(0x44)] get; }
        [DispId(0x45)]
        int bRespuestaCbte_numero { [DispId(0x45)] get; }
        [DispId(70)]
        string bRespuestaCAE { [DispId(70)] get; }
        [DispId(0x47)]
        string bRespuestaFch_cbte { [DispId(0x47)] get; }
        [DispId(0x48)]
        string bRespuestaResultado { [DispId(0x48)] get; }
        [DispId(0x49)]
        string bRespuestaReproceso { [DispId(0x49)] get; }
        [DispId(0x4a)]
        string bRespuestaOBS { [DispId(0x4a)] get; }
        [DispId(0x4b)]
        string sRespuestaId { [DispId(0x4b)] get; }
        [DispId(0x4c)]
        int sRespuestaCbte_numero { [DispId(0x4c)] get; }
        [DispId(0x4d)]
        string sRespuestaCAE { [DispId(0x4d)] get; }
        [DispId(0x4e)]
        string sRespuestaFch_cbte { [DispId(0x4e)] get; }
        [DispId(0x4f)]
        string sRespuestaResultado { [DispId(0x4f)] get; }
        [DispId(80)]
        string sRespuestaReproceso { [DispId(80)] get; }
        [DispId(0x51)]
        string sRespuestaOBS { [DispId(0x51)] get; }
        [DispId(0x52)]
        string sRespuestasCUIT { [DispId(0x52)] get; }
        [DispId(0x53)]
        long xRespuestaId { [DispId(0x53)] get; }
        [DispId(0x54)]
        string xRespuestaIdS { [DispId(0x54)] get; }
        [DispId(0x55)]
        string xRespuestaCUIT { [DispId(0x55)] get; }
        [DispId(0x56)]
        string xRespuestaCAE { [DispId(0x56)] get; }
        [DispId(0x57)]
        string xRespuestaFch_vence_cae { [DispId(0x57)] get; }
        [DispId(0x58)]
        string xRespuestaFch_venc_cae { [DispId(0x58)] get; }
        [DispId(0x59)]
        string xRespuestaFch_cbte { [DispId(0x59)] get; }
        [DispId(90)]
        string xRespuestaFch_cbte_cae { [DispId(90)] get; }
        [DispId(0x5b)]
        string xRespuestaResultado { [DispId(0x5b)] get; }
        [DispId(0x5c)]
        string xRespuestaReproceso { [DispId(0x5c)] get; }
        [DispId(0x5d)]
        string xRespuestaMotivos_obs { [DispId(0x5d)] get; }
        [DispId(0x5e)]
        int xRespuestatipo_cbte { [DispId(0x5e)] get; }
        [DispId(0x5f)]
        int xRespuestapunto_vta { [DispId(0x5f)] get; }
        [DispId(0x60)]
        long xRespuestacbte_numero { [DispId(0x60)] get; }
        [DispId(0x61)]
        string xRespuestacbte_numeroS { [DispId(0x61)] get; }
        [DispId(0x62)]
        string XMLRequest { [DispId(0x62)] get; }
        [DispId(0x63)]
        string XMLRequestFirmado { [DispId(0x63)] get; }
        [DispId(100)]
        string XMLResponse { [DispId(100)] get; }
        [DispId(0x65)]
        bool TicketEsValido { [DispId(0x65)] get; }
        [DispId(0x66)]
        bool bTicketEsValido { [DispId(0x66)] get; }
        [DispId(0x67)]
        bool xTicketEsValido { [DispId(0x67)] get; }
        [DispId(0x68)]
        bool f1TicketEsValido { [DispId(0x68)] get; }
        [DispId(0x69)]
        bool fxTicketEsValido { [DispId(0x69)] get; }
        [DispId(0x6a)]
        bool mTicketEsValido { [DispId(0x6a)] get; }
        [DispId(0x6b)]
        string gErrorMensaje { [DispId(0x6b)] get; }
        [DispId(0x6c)]
        string gErrorCodigo { [DispId(0x6c)] get; }
        [DispId(0x6d)]
        bool gTicketEsValido { [DispId(0x6d)] get; }
        [DispId(110)]
        bool sTicketEsValido { [DispId(110)] get; }
        [DispId(0x6f)]
        int TimeOut { [DispId(0x6f)] get; [DispId(0x6f)] set; }
        [DispId(0x70)]
        bool LicenciaValida { [DispId(0x70)] get; }
        [DispId(0x71)]
        bool f1LicenciaValidaCae { [DispId(0x71)] get; }
        [DispId(0x72)]
        bool f1LicenciaValidaCaea { [DispId(0x72)] get; }
        [DispId(0x73)]
        bool fxLicenciaValidaCAE { [DispId(0x73)] get; }
        [DispId(0x74)]
        bool fxLicenciaValidaCAEA { [DispId(0x74)] get; }
        [DispId(0x75)]
        bool BLicenciaValida { [DispId(0x75)] get; }
        [DispId(0x76)]
        bool xLicenciaValida { [DispId(0x76)] get; }
        [DispId(0x77)]
        bool dLicenciaValida { [DispId(0x77)] get; }
        [DispId(120)]
        bool gLicenciaValida { [DispId(120)] get; }
        [DispId(0x79)]
        bool OLicenciaValida { [DispId(0x79)] get; }
        [DispId(0x7a)]
        bool sLicenciaValida { [DispId(0x7a)] get; }
        [DispId(0x7b)]
        bool LicenciaLote { [DispId(0x7b)] get; }
        [DispId(0x7c)]
        string Permsg { [DispId(0x7c)] get; }
        [DispId(0x7d)]
        string berrmsg { [DispId(0x7d)] get; }
        [DispId(0x7e)]
        string xerrmsg { [DispId(0x7e)] get; }
        [DispId(0x7f)]
        string serrmsg { [DispId(0x7f)] get; }
        [DispId(0x80)]
        int PerCode { [DispId(0x80)] get; }
        [DispId(0x81)]
        string PerCodeSt { [DispId(0x81)] get; }
        [DispId(130)]
        int berrcode { [DispId(130)] get; }
        [DispId(0x83)]
        int xerrcode { [DispId(0x83)] get; }
        [DispId(0x84)]
        string berrcodeST { [DispId(0x84)] get; }
        [DispId(0x85)]
        string xerrcodeST { [DispId(0x85)] get; }
        [DispId(0x86)]
        int serrcode { [DispId(0x86)] get; }
        [DispId(0x87)]
        string serrcodeST { [DispId(0x87)] get; }
        [DispId(0x88)]
        string FERespuestaDetalleFecha_venc_pago { [DispId(0x88)] get; }
        [DispId(0x89)]
        string FERespuestaDetalleFecha_serv_hasta { [DispId(0x89)] get; }
        [DispId(0x8a)]
        string FERespuestaDetalleFecha_serv_desde { [DispId(0x8a)] get; }
        [DispId(0x8b)]
        string FERespuestaDetalleMotivo { [DispId(0x8b)] get; }
        [DispId(140)]
        string FERespuestaDetalleFecha_vto { [DispId(140)] get; }
        [DispId(0x8d)]
        string FERespuestaDetalleCae { [DispId(0x8d)] get; }
        [DispId(0x8e)]
        string FERespuestaDetalleResultado { [DispId(0x8e)] get; }
        [DispId(0x8f)]
        string FERespuestaDetalleFecha_cbte { [DispId(0x8f)] get; }
        [DispId(0x90)]
        double FERespuestaDetalleImp_op_ex { [DispId(0x90)] get; }
        [DispId(0x91)]
        double FERespuestaDetalleImpt_liq_rni { [DispId(0x91)] get; }
        [DispId(0x92)]
        double FERespuestaDetalleImpto_liq { [DispId(0x92)] get; }
        [DispId(0x93)]
        double FERespuestaDetalleImp_neto { [DispId(0x93)] get; }
        [DispId(0x94)]
        double FERespuestaDetalleImp_tot_conc { [DispId(0x94)] get; }
        [DispId(0x95)]
        double FERespuestaDetalleImp_total { [DispId(0x95)] get; }
        [DispId(150)]
        int FERespuestaDetalleCbt_hasta { [DispId(150)] get; }
        [DispId(0x97)]
        int FERespuestaDetalleCbt_desde { [DispId(0x97)] get; }
        [DispId(0x98)]
        int FERespuestaDetallePunto_vta { [DispId(0x98)] get; }
        [DispId(0x99)]
        Factura.TipoComprobante FERespuestaDetalleTipo_cbte { [DispId(0x99)] get; }
        [DispId(0x9a)]
        int IndiceItem { [DispId(0x9a)] get; [DispId(0x9a)] set; }
        [DispId(0x9b)]
        int bIndiceItem { [DispId(0x9b)] get; [DispId(0x9b)] set; }
        [DispId(0x9c)]
        int xIndiceItem { [DispId(0x9c)] get; [DispId(0x9c)] set; }
        [DispId(0x9d)]
        int f1IndiceItem { [DispId(0x9d)] get; [DispId(0x9d)] set; }
        [DispId(0x9e)]
        int fxIndiceItem { [DispId(0x9e)] get; [DispId(0x9e)] set; }
        [DispId(0x9f)]
        int dIndiceItem { [DispId(0x9f)] get; [DispId(0x9f)] set; }
        [DispId(160)]
        int gIndiceItem { [DispId(160)] get; [DispId(160)] set; }
        [DispId(0xa1)]
        int sIndiceItem { [DispId(0xa1)] get; [DispId(0xa1)] set; }
        [DispId(0xa2)]
        int bItemCantidad { [DispId(0xa2)] get; [DispId(0xa2)] set; }
        [DispId(0xa3)]
        int xItemCantidad { [DispId(0xa3)] get; [DispId(0xa3)] set; }
        [DispId(0xa4)]
        int dFamiliaItemCantidad { [DispId(0xa4)] get; [DispId(0xa4)] set; }
        [DispId(0xa5)]
        int gEspecieItemCantidad { [DispId(0xa5)] get; [DispId(0xa5)] set; }
        [DispId(0xa6)]
        int gProvinciaItemCantidad { [DispId(0xa6)] get; [DispId(0xa6)] set; }
        [DispId(0xa7)]
        int gLocalidadItemCantidad { [DispId(0xa7)] get; [DispId(0xa7)] set; }
        [DispId(0xa8)]
        int gLocalidadTodasItemCantidad { [DispId(0xa8)] get; [DispId(0xa8)] set; }
        [DispId(0xa9)]
        int gCosechaItemCantidad { [DispId(0xa9)] get; [DispId(0xa9)] set; }
        [DispId(170)]
        int xPermisoCantidad { [DispId(170)] get; [DispId(170)] set; }
        [DispId(0xab)]
        int xPermisoNoInformar { [DispId(0xab)] get; [DispId(0xab)] set; }
        [DispId(0xac)]
        int xCmps_asocCantidad { [DispId(0xac)] get; [DispId(0xac)] set; }
        [DispId(0xad)]
        int sItemCantidad { [DispId(0xad)] get; [DispId(0xad)] set; }
        [DispId(0xae)]
        string dFamiliaCodigo { [DispId(0xae)] get; [DispId(0xae)] set; }
        [DispId(0xaf)]
        int dFamiliaCantidad { [DispId(0xaf)] get; [DispId(0xaf)] set; }
        [DispId(0xb0)]
        string xITEMPro_codigo { [DispId(0xb0)] get; [DispId(0xb0)] set; }
        [DispId(0xb1)]
        string xITEMPro_ds { [DispId(0xb1)] get; [DispId(0xb1)] set; }
        [DispId(0xb2)]
        double xITEMPro_qty { [DispId(0xb2)] get; [DispId(0xb2)] set; }
        [DispId(0xb3)]
        int xITEMPro_umed { [DispId(0xb3)] get; [DispId(0xb3)] set; }
        [DispId(180)]
        double xITEMPro_precio_uni { [DispId(180)] get; [DispId(180)] set; }
        [DispId(0xb5)]
        double xITEMPro_precio_item { [DispId(0xb5)] get; [DispId(0xb5)] set; }
        [DispId(0xb6)]
        int xCMPS_ASOC_cbte_tipo { [DispId(0xb6)] get; [DispId(0xb6)] set; }
        [DispId(0xb7)]
        int xCMPS_ASOC_cbte_punto_venta { [DispId(0xb7)] get; [DispId(0xb7)] set; }
        [DispId(0xb8)]
        int xCMPS_ASOC_cbte_nro { [DispId(0xb8)] get; [DispId(0xb8)] set; }
        [DispId(0xb9)]
        string xCMPS_ASOC_cbte_nroS { [DispId(0xb9)] get; [DispId(0xb9)] set; }
        [DispId(0xba)]
        string xPERMISO_id_permiso { [DispId(0xba)] get; [DispId(0xba)] set; }
        [DispId(0xbb)]
        int xPERMISO_dst_merc { [DispId(0xbb)] get; [DispId(0xbb)] set; }
        [DispId(0xbc)]
        string bITEMpro_codigo_ncm { [DispId(0xbc)] get; [DispId(0xbc)] set; }
        [DispId(0xbd)]
        string bITEMpro_codigo_sec { [DispId(0xbd)] get; [DispId(0xbd)] set; }
        [DispId(190)]
        string bITEMpro_ds { [DispId(190)] get; [DispId(190)] set; }
        [DispId(0xbf)]
        double bITEMpro_qty { [DispId(0xbf)] get; [DispId(0xbf)] set; }
        [DispId(0xc0)]
        int bITEMpro_umed { [DispId(0xc0)] get; [DispId(0xc0)] set; }
        [DispId(0xc1)]
        double bITEMpro_precio_uni { [DispId(0xc1)] get; [DispId(0xc1)] set; }
        [DispId(0xc2)]
        double bITEMimp_bonif { [DispId(0xc2)] get; [DispId(0xc2)] set; }
        [DispId(0xc3)]
        double bITEMimp_total { [DispId(0xc3)] get; [DispId(0xc3)] set; }
        [DispId(0xc4)]
        string sItemPoliza { [DispId(0xc4)] get; [DispId(0xc4)] set; }
        [DispId(0xc5)]
        string sItemEndoso { [DispId(0xc5)] get; [DispId(0xc5)] set; }
        [DispId(0xc6)]
        string sItemds { [DispId(0xc6)] get; [DispId(0xc6)] set; }
        [DispId(0xc7)]
        double sItemqty { [DispId(0xc7)] get; [DispId(0xc7)] set; }
        [DispId(200)]
        double sItemprecio_uni { [DispId(200)] get; [DispId(200)] set; }
        [DispId(0xc9)]
        double sItemimp_bonif { [DispId(0xc9)] get; [DispId(0xc9)] set; }
        [DispId(0xca)]
        double sItemimp_total { [DispId(0xca)] get; [DispId(0xca)] set; }
        [DispId(0xcb)]
        string sItemimp_moneda_vaseg { [DispId(0xcb)] get; [DispId(0xcb)] set; }
        [DispId(0xcc)]
        double sItemimp_valor_aseg { [DispId(0xcc)] get; [DispId(0xcc)] set; }
        [DispId(0xcd)]
        int sItemIva_id { [DispId(0xcd)] get; [DispId(0xcd)] set; }
        [DispId(0xce)]
        int bITEMIva_id { [DispId(0xce)] get; [DispId(0xce)] set; }
        [DispId(0xcf)]
        int bTipo_Doc { [DispId(0xcf)] get; [DispId(0xcf)] set; }
        [DispId(0xd0)]
        string bNro_doc { [DispId(0xd0)] get; [DispId(0xd0)] set; }
        [DispId(0xd1)]
        int bZona { [DispId(0xd1)] get; [DispId(0xd1)] set; }
        [DispId(210)]
        int bTipo_cbte { [DispId(210)] get; [DispId(210)] set; }
        [DispId(0xd3)]
        int bPunto_vta { [DispId(0xd3)] get; [DispId(0xd3)] set; }
        [DispId(0xd4)]
        int bcbte_nro { [DispId(0xd4)] get; [DispId(0xd4)] set; }
        [DispId(0xd5)]
        double bImp_total { [DispId(0xd5)] get; [DispId(0xd5)] set; }
        [DispId(0xd6)]
        double bImp_total_conc { [DispId(0xd6)] get; [DispId(0xd6)] set; }
        [DispId(0xd7)]
        double bImp_neto { [DispId(0xd7)] get; [DispId(0xd7)] set; }
        [DispId(0xd8)]
        double bimpto_liq { [DispId(0xd8)] get; [DispId(0xd8)] set; }
        [DispId(0xd9)]
        double bimpto_liq_rni { [DispId(0xd9)] get; [DispId(0xd9)] set; }
        [DispId(0xda)]
        double bimp_op_ex { [DispId(0xda)] get; [DispId(0xda)] set; }
        [DispId(0xdb)]
        double bImp_perc { [DispId(0xdb)] get; [DispId(0xdb)] set; }
        [DispId(220)]
        double bImp_perc_mun { [DispId(220)] get; [DispId(220)] set; }
        [DispId(0xdd)]
        double bImp_iibb { [DispId(0xdd)] get; [DispId(0xdd)] set; }
        [DispId(0xde)]
        double bImp_internos { [DispId(0xde)] get; [DispId(0xde)] set; }
        [DispId(0xdf)]
        string bImp_moneda_id { [DispId(0xdf)] get; [DispId(0xdf)] set; }
        [DispId(0xe0)]
        double bImp_moneda_ctz { [DispId(0xe0)] get; [DispId(0xe0)] set; }
        [DispId(0xe1)]
        string bFecha_cbte { [DispId(0xe1)] get; [DispId(0xe1)] set; }
        [DispId(0xe2)]
        string bFecha_cbte_orig { [DispId(0xe2)] get; [DispId(0xe2)] set; }
        [DispId(0xe3)]
        string bFecha_cbte_cae { [DispId(0xe3)] get; [DispId(0xe3)] set; }
        [DispId(0xe4)]
        string bFecha_cae { [DispId(0xe4)] get; [DispId(0xe4)] set; }
        [DispId(0xe5)]
        int sTipo_Doc { [DispId(0xe5)] get; [DispId(0xe5)] set; }
        [DispId(230)]
        string sNro_doc { [DispId(230)] get; [DispId(230)] set; }
        [DispId(0xe7)]
        int sTipo_cbte { [DispId(0xe7)] get; [DispId(0xe7)] set; }
        [DispId(0xe8)]
        int sPunto_vta { [DispId(0xe8)] get; [DispId(0xe8)] set; }
        [DispId(0xe9)]
        int scbte_nro { [DispId(0xe9)] get; [DispId(0xe9)] set; }
        [DispId(0xea)]
        double sImp_total { [DispId(0xea)] get; [DispId(0xea)] set; }
        [DispId(0xeb)]
        double sImp_total_conc { [DispId(0xeb)] get; [DispId(0xeb)] set; }
        [DispId(0xec)]
        double sImp_neto { [DispId(0xec)] get; [DispId(0xec)] set; }
        [DispId(0xed)]
        double simpto_liq { [DispId(0xed)] get; [DispId(0xed)] set; }
        [DispId(0xee)]
        double simpto_liq_rni { [DispId(0xee)] get; [DispId(0xee)] set; }
        [DispId(0xef)]
        double simp_op_ex { [DispId(0xef)] get; [DispId(0xef)] set; }
        [DispId(240)]
        double sImp_perc { [DispId(240)] get; [DispId(240)] set; }
        [DispId(0xf1)]
        double sImp_perc_mun { [DispId(0xf1)] get; [DispId(0xf1)] set; }
        [DispId(0xf2)]
        double sImp_iibb { [DispId(0xf2)] get; [DispId(0xf2)] set; }
        [DispId(0xf3)]
        double sImp_internos { [DispId(0xf3)] get; [DispId(0xf3)] set; }
        [DispId(0xf4)]
        string sImp_moneda_id { [DispId(0xf4)] get; [DispId(0xf4)] set; }
        [DispId(0xf5)]
        double sImp_moneda_ctz { [DispId(0xf5)] get; [DispId(0xf5)] set; }
        [DispId(0xf6)]
        double sImp_otrib_prov { [DispId(0xf6)] get; [DispId(0xf6)] set; }
        [DispId(0xf7)]
        string sFecha_cbte { [DispId(0xf7)] get; [DispId(0xf7)] set; }
        [DispId(0xf8)]
        string sFecha_cbte_orig { [DispId(0xf8)] get; [DispId(0xf8)] set; }
        [DispId(0xf9)]
        string sFecha_cbte_cae { [DispId(0xf9)] get; [DispId(0xf9)] set; }
        [DispId(250)]
        string sFecha_cae { [DispId(250)] get; [DispId(250)] set; }
        [DispId(0xfb)]
        string dRol { [DispId(0xfb)] get; [DispId(0xfb)] set; }
        [DispId(0xfc)]
        string dTipoAgente { [DispId(0xfc)] get; [DispId(0xfc)] set; }
        [DispId(0xfd)]
        string dNroLegajo { [DispId(0xfd)] get; [DispId(0xfd)] set; }
        [DispId(0xfe)]
        DateTime dFechaHoraAcept { [DispId(0xfe)] get; [DispId(0xfe)] set; }
        [DispId(0xff)]
        string dFechaHoraAceptS { [DispId(0xff)] get; [DispId(0xff)] set; }
        [DispId(0x100)]
        string dCuitDeclarante { [DispId(0x100)] get; [DispId(0x100)] set; }
        [DispId(0x101)]
        string dCuitPSad { [DispId(0x101)] get; [DispId(0x101)] set; }
        [DispId(0x102)]
        string dCuitIE { [DispId(0x102)] get; [DispId(0x102)] set; }
        [DispId(0x103)]
        string dCuitATA { [DispId(0x103)] get; [DispId(0x103)] set; }
        [DispId(260)]
        string dCodigo { [DispId(260)] get; [DispId(260)] set; }
        [DispId(0x105)]
        string dURL { [DispId(0x105)] get; [DispId(0x105)] set; }
        [DispId(0x106)]
        string dTicket { [DispId(0x106)] get; [DispId(0x106)] set; }
        [DispId(0x107)]
        string dHashing { [DispId(0x107)] get; [DispId(0x107)] set; }
        [DispId(0x108)]
        int dCantidadTotal { [DispId(0x108)] get; [DispId(0x108)] set; }
        [DispId(0x109)]
        string xFecha_cbte { [DispId(0x109)] get; [DispId(0x109)] set; }
        [DispId(0x10a)]
        int xPunto_vta { [DispId(0x10a)] get; [DispId(0x10a)] set; }
        [DispId(0x10b)]
        int xtipo_cbte { [DispId(0x10b)] get; [DispId(0x10b)] set; }
        [DispId(0x10c)]
        long xCbte_nro { [DispId(0x10c)] get; [DispId(0x10c)] set; }
        [DispId(0x10d)]
        string xCbte_nroS { [DispId(0x10d)] get; [DispId(0x10d)] set; }
        [DispId(270)]
        int xtipo_expo { [DispId(270)] get; [DispId(270)] set; }
        [DispId(0x10f)]
        string xPermiso_existente { [DispId(0x10f)] get; [DispId(0x10f)] set; }
        [DispId(0x110)]
        string xPermiso_existenteS { [DispId(0x110)] get; [DispId(0x110)] set; }
        [DispId(0x111)]
        int xDst_cmp { [DispId(0x111)] get; [DispId(0x111)] set; }
        [DispId(0x112)]
        string xCliente { [DispId(0x112)] get; [DispId(0x112)] set; }
        [DispId(0x113)]
        long xCuit_pais_cliente { [DispId(0x113)] get; [DispId(0x113)] set; }
        [DispId(0x114)]
        string xCuit_pais_clienteS { [DispId(0x114)] get; [DispId(0x114)] set; }
        [DispId(0x115)]
        string xDomicilio_cliente { [DispId(0x115)] get; [DispId(0x115)] set; }
        [DispId(0x116)]
        string xId_impositivo { [DispId(0x116)] get; [DispId(0x116)] set; }
        [DispId(0x117)]
        string xMoneda_id { [DispId(0x117)] get; [DispId(0x117)] set; }
        [DispId(280)]
        string xMoneda_idS { [DispId(280)] get; [DispId(280)] set; }
        [DispId(0x119)]
        double xMoneda_ctz { [DispId(0x119)] get; [DispId(0x119)] set; }
        [DispId(0x11a)]
        string xMoneda_ctzS { [DispId(0x11a)] get; [DispId(0x11a)] set; }
        [DispId(0x11b)]
        string xObs_comerciales { [DispId(0x11b)] get; [DispId(0x11b)] set; }
        [DispId(0x11c)]
        double xImp_total { [DispId(0x11c)] get; [DispId(0x11c)] set; }
        [DispId(0x11d)]
        string xObs { [DispId(0x11d)] get; [DispId(0x11d)] set; }
        [DispId(0x11e)]
        string xForma_pago { [DispId(0x11e)] get; [DispId(0x11e)] set; }
        [DispId(0x11f)]
        string xIncoTerms { [DispId(0x11f)] get; [DispId(0x11f)] set; }
        [DispId(0x120)]
        string xIncoTerms_ds { [DispId(0x120)] get; [DispId(0x120)] set; }
        [DispId(0x121)]
        string xIdioma_cbte { [DispId(0x121)] get; [DispId(0x121)] set; }
        [DispId(290)]
        string FERespuestaDetalleNor_doc { [DispId(290)] get; }
        [DispId(0x123)]
        Factura.TipoDocumento FERespuestaDetalleTipo_doc { [DispId(0x123)] get; }
        [DispId(0x124)]
        string FERespuestaId { [DispId(0x124)] get; }
        [DispId(0x125)]
        string FERespuestaCuit { [DispId(0x125)] get; }
        [DispId(0x126)]
        string FERespuestaFecha_cae { [DispId(0x126)] get; }
        [DispId(0x127)]
        int FERespuestaCantidadReg { [DispId(0x127)] get; }
        [DispId(0x128)]
        string FERespuestaResultado { [DispId(0x128)] get; }
        [DispId(0x129)]
        string FERespuestaMotivo { [DispId(0x129)] get; }
        [DispId(0x12a)]
        string FERespuestaReproceso { [DispId(0x12a)] get; }
        [DispId(0x12b)]
        int FERespuestaPresta_serv { [DispId(0x12b)] get; }
        [DispId(300)]
        string FEDetalleNro_doc { [DispId(300)] get; [DispId(300)] set; }
        [DispId(0x12d)]
        Factura.TipoDocumento FEDetalleTipo_doc { [DispId(0x12d)] get; [DispId(0x12d)] set; }
        [DispId(0x12e)]
        Factura.TipoComprobante FEDetalleTipo_cbte { [DispId(0x12e)] get; [DispId(0x12e)] set; }
        [DispId(0x12f)]
        int FEDetallePunto_vta { [DispId(0x12f)] get; [DispId(0x12f)] set; }
        [DispId(0x130)]
        int FEDetalleCbt_desde { [DispId(0x130)] get; [DispId(0x130)] set; }
        [DispId(0x131)]
        int FEDetalleCbt_hasta { [DispId(0x131)] get; [DispId(0x131)] set; }
        [DispId(0x132)]
        double FEDetalleImp_total { [DispId(0x132)] get; [DispId(0x132)] set; }
        [DispId(0x133)]
        double FEDetalleImp_tot_conc { [DispId(0x133)] get; [DispId(0x133)] set; }
        [DispId(0x134)]
        double FEDetalleImp_neto { [DispId(0x134)] get; [DispId(0x134)] set; }
        [DispId(0x135)]
        double FEDetalleImpto_liq { [DispId(0x135)] get; [DispId(0x135)] set; }
        [DispId(310)]
        double FEdetalleImto_liq_rni { [DispId(310)] get; [DispId(310)] set; }
        [DispId(0x137)]
        double FEDetalleImp_op_ex { [DispId(0x137)] get; [DispId(0x137)] set; }
        [DispId(0x138)]
        string FEDetalleFecha_serv_desde { [DispId(0x138)] get; [DispId(0x138)] set; }
        [DispId(0x139)]
        string FEDetalleFecha_serv_hasta { [DispId(0x139)] get; [DispId(0x139)] set; }
        [DispId(0x13a)]
        string FEDetalleFecha_vence_pago { [DispId(0x13a)] get; [DispId(0x13a)] set; }
        [DispId(0x13b)]
        string FEDetalleFecha_cbte { [DispId(0x13b)] get; [DispId(0x13b)] set; }
        [DispId(0x13c)]
        int FECabeceraCantReg { [DispId(0x13c)] get; [DispId(0x13c)] set; }
        [DispId(0x13d)]
        int FECabeceraPresta_serv { [DispId(0x13d)] get; [DispId(0x13d)] set; }
        [DispId(0x13e)]
        DateTime TicketHora { [DispId(0x13e)] get; }
        [DispId(0x13f)]
        DateTime bTicketHora { [DispId(0x13f)] get; }
        [DispId(320)]
        DateTime xTicketHora { [DispId(320)] get; }
        [DispId(0x141)]
        DateTime f1TicketHora { [DispId(0x141)] get; }
        [DispId(0x142)]
        DateTime fxTicketHora { [DispId(0x142)] get; }
        [DispId(0x143)]
        DateTime mTicketHora { [DispId(0x143)] get; }
        [DispId(0x144)]
        DateTime dTicketHora { [DispId(0x144)] get; }
        [DispId(0x145)]
        DateTime gTicketHora { [DispId(0x145)] get; }
        [DispId(0x146)]
        DateTime oTicketHora { [DispId(0x146)] get; }
        [DispId(0x147)]
        DateTime sTicketHora { [DispId(0x147)] get; }
        [DispId(0x148)]
        DateTime TicketHoraVencimiento { [DispId(0x148)] get; }
        [DispId(0x149)]
        DateTime bTicketHoraVencimiento { [DispId(0x149)] get; }
        [DispId(330)]
        DateTime xTicketHoraVencimiento { [DispId(330)] get; }
        [DispId(0x14b)]
        DateTime f1TicketHoraVencimiento { [DispId(0x14b)] get; }
        [DispId(0x14c)]
        DateTime fxTicketHoraVencimiento { [DispId(0x14c)] get; }
        [DispId(0x14d)]
        DateTime mTicketHoraVencimiento { [DispId(0x14d)] get; }
        [DispId(0x14e)]
        DateTime dTicketHoraVencimiento { [DispId(0x14e)] get; }
        [DispId(0x14f)]
        DateTime gTicketHoraVencimiento { [DispId(0x14f)] get; }
        [DispId(0x150)]
        DateTime oTicketHoraVencimiento { [DispId(0x150)] get; }
        [DispId(0x151)]
        DateTime sTicketHoraVencimiento { [DispId(0x151)] get; }
        [DispId(0x152)]
        bool TicketValido { [DispId(0x152)] get; }
        [DispId(0x153)]
        bool BTicketValido { [DispId(0x153)] get; }
        [DispId(340)]
        bool xTicketValido { [DispId(340)] get; }
        [DispId(0x155)]
        bool f1TicketValido { [DispId(0x155)] get; }
        [DispId(0x156)]
        bool fxTicketValido { [DispId(0x156)] get; }
        [DispId(0x157)]
        bool mTicketValido { [DispId(0x157)] get; }
        [DispId(0x158)]
        bool dTicketValido { [DispId(0x158)] get; }
        [DispId(0x159)]
        bool gTicketValido { [DispId(0x159)] get; }
        [DispId(0x15a)]
        bool oTicketValido { [DispId(0x15a)] get; }
        [DispId(0x15b)]
        bool sTicketValido { [DispId(0x15b)] get; }
        [DispId(0x15c)]
        string cuit { [DispId(0x15c)] get; }
        [DispId(0x15d)]
        string token { [DispId(0x15d)] get; [DispId(0x15d)] set; }
        [DispId(350)]
        string btoken { [DispId(350)] get; [DispId(350)] set; }
        [DispId(0x15f)]
        string xtoken { [DispId(0x15f)] get; [DispId(0x15f)] set; }
        [DispId(0x160)]
        string f1token { [DispId(0x160)] get; [DispId(0x160)] set; }
        [DispId(0x161)]
        string fxtoken { [DispId(0x161)] get; [DispId(0x161)] set; }
        [DispId(0x162)]
        string mtoken { [DispId(0x162)] get; [DispId(0x162)] set; }
        [DispId(0x163)]
        string dtoken { [DispId(0x163)] get; [DispId(0x163)] set; }
        [DispId(0x164)]
        string gtoken { [DispId(0x164)] get; [DispId(0x164)] set; }
        [DispId(0x165)]
        string otoken { [DispId(0x165)] get; [DispId(0x165)] set; }
        [DispId(0x166)]
        string stoken { [DispId(0x166)] get; [DispId(0x166)] set; }
        [DispId(0x167)]
        string sign { [DispId(0x167)] get; [DispId(0x167)] set; }
        [DispId(360)]
        string bsign { [DispId(360)] get; [DispId(360)] set; }
        [DispId(0x169)]
        string xsign { [DispId(0x169)] get; [DispId(0x169)] set; }
        [DispId(0x16a)]
        string f1sign { [DispId(0x16a)] get; [DispId(0x16a)] set; }
        [DispId(0x16b)]
        string fxsign { [DispId(0x16b)] get; [DispId(0x16b)] set; }
        [DispId(0x16c)]
        string msign { [DispId(0x16c)] get; [DispId(0x16c)] set; }
        [DispId(0x16d)]
        string dsign { [DispId(0x16d)] get; [DispId(0x16d)] set; }
        [DispId(0x16e)]
        string gsign { [DispId(0x16e)] get; [DispId(0x16e)] set; }
        [DispId(0x16f)]
        string osign { [DispId(0x16f)] get; [DispId(0x16f)] set; }
        [DispId(0x170)]
        string ssign { [DispId(0x170)] get; [DispId(0x170)] set; }
        [DispId(0x171)]
        string Identificador { [DispId(0x171)] get; [DispId(0x171)] set; }
        [DispId(370)]
        string UltimoMensajeError { [DispId(370)] get; }
        [DispId(0x173)]
        int UltimoNumeroError { [DispId(0x173)] get; }
        [DispId(0x174)]
        Factura.modoFiscal Modo { [DispId(0x174)] get; [DispId(0x174)] set; }
        [DispId(0x175)]
        string RutaArchivoCertificado { [DispId(0x175)] get; [DispId(0x175)] set; }
        [DispId(0x176)]
        string RespuetaDummyAppServer { [DispId(0x176)] get; }
        [DispId(0x177)]
        string RespuestaDummyAuthServer { [DispId(0x177)] get; }
        [DispId(0x178)]
        string RespuestaDummyDbServer { [DispId(0x178)] get; }
        [DispId(0x179)]
        string BRespuetaDummyAppServer { [DispId(0x179)] get; }
        [DispId(0x17a)]
        string BRespuestaDummyAuthServer { [DispId(0x17a)] get; }
        [DispId(0x17b)]
        string BRespuestaDummyDbServer { [DispId(0x17b)] get; }
        [DispId(380)]
        string xRespuetaDummyAppServer { [DispId(380)] get; }
        [DispId(0x17d)]
        string xRespuestaDummyAuthServer { [DispId(0x17d)] get; }
        [DispId(0x17e)]
        string xRespuestaDummyDbServer { [DispId(0x17e)] get; }
        [DispId(0x17f)]
        string f1RespuetaDummyAppServer { [DispId(0x17f)] get; }
        [DispId(0x180)]
        string f1RespuestaDummyAuthServer { [DispId(0x180)] get; }
        [DispId(0x181)]
        string fxRespuetaDummyAppServer { [DispId(0x181)] get; }
        [DispId(0x182)]
        string fxRespuestaDummyAuthServer { [DispId(0x182)] get; }
        [DispId(0x183)]
        int F1RespuestaCantidadReg { [DispId(0x183)] get; }
        [DispId(0x184)]
        int F1RespuestaCAEAItemCantidad { [DispId(0x184)] get; }
        [DispId(0x185)]
        int FxRespuestaCAEAItemCantidad { [DispId(0x185)] get; }
        [DispId(390)]
        string F1RespuestaFchProceso { [DispId(390)] get; }
        [DispId(0x187)]
        string F1RespuestaResultado { [DispId(0x187)] get; }
        [DispId(0x188)]
        string fxRespuestaResultado { [DispId(0x188)] get; }
        [DispId(0x189)]
        string fxRespuestaCAE { [DispId(0x189)] get; }
        [DispId(0x18a)]
        string fxRespuestaCUIT { [DispId(0x18a)] get; }
        [DispId(0x18b)]
        int fxRespuestaNumeroComprobante { [DispId(0x18b)] get; }
        [DispId(0x18c)]
        int fxRespuestaCodigoTipoComprobante { [DispId(0x18c)] get; }
        [DispId(0x18d)]
        int fxRespuestaNumeroPuntoVenta { [DispId(0x18d)] get; }
        [DispId(0x18e)]
        string fxRespuestaFechaEmision { [DispId(0x18e)] get; }
        [DispId(0x18f)]
        string fxRespuestaFechaVencimientoCAE { [DispId(0x18f)] get; }
        [DispId(400)]
        string F1RespuestaReProceso { [DispId(400)] get; }
        [DispId(0x191)]
        string f1RespuestaDummyDbServer { [DispId(0x191)] get; }
        [DispId(0x192)]
        string mRespuetaDummyAppServer { [DispId(0x192)] get; }
        [DispId(0x193)]
        string mRespuestaDummyAuthServer { [DispId(0x193)] get; }
        [DispId(0x194)]
        string mRespuestaDummyDbServer { [DispId(0x194)] get; }
        [DispId(0x195)]
        string dRespuetaDummyAppServer { [DispId(0x195)] get; }
        [DispId(0x196)]
        string dRespuestaDummyAuthServer { [DispId(0x196)] get; }
        [DispId(0x197)]
        string dRespuestaDummyDbServer { [DispId(0x197)] get; }
        [DispId(0x198)]
        string gRespuetaDummyAppServer { [DispId(0x198)] get; }
        [DispId(0x199)]
        string gRespuestaDummyAuthServer { [DispId(0x199)] get; }
        [DispId(410)]
        string gRespuestaDummyDbServer { [DispId(410)] get; }
        [DispId(0x19b)]
        string oRespuetaDummyAppServer { [DispId(0x19b)] get; }
        [DispId(0x19c)]
        string oRespuestaDummyAuthServer { [DispId(0x19c)] get; }
        [DispId(0x19d)]
        string oRespuestaDummyDbServer { [DispId(0x19d)] get; }
        [DispId(0x19e)]
        string sRespuetaDummyAppServer { [DispId(0x19e)] get; }
        [DispId(0x19f)]
        string sRespuestaDummyAuthServer { [DispId(0x19f)] get; }
        [DispId(0x1a0)]
        string sRespuestaDummyDbServer { [DispId(0x1a0)] get; }
        [DispId(0x1a1)]
        int F1RespuestaDetalleConcepto { [DispId(0x1a1)] get; }
        [DispId(0x1a2)]
        int F1RespuestaDetalleDocTipo { [DispId(0x1a2)] get; }
        [DispId(0x1a3)]
        int F1RespuestaDetalleCbteDesde { [DispId(0x1a3)] get; }
        [DispId(420)]
        string F1RespuestaDetalleCbteDesdeS { [DispId(420)] get; }
        [DispId(0x1a5)]
        int F1RespuestaDetalleCbteHasta { [DispId(0x1a5)] get; }
        [DispId(0x1a6)]
        string F1RespuestaDetalleCbteHastaS { [DispId(0x1a6)] get; }
        [DispId(0x1a7)]
        string F1RespuestaDetalleResultado { [DispId(0x1a7)] get; }
        [DispId(0x1a8)]
        string F1RespuestaDetalleCAEA { [DispId(0x1a8)] get; }
        [DispId(0x1a9)]
        string F1RespuestaDetalleCodAutorizacion { [DispId(0x1a9)] get; }
        [DispId(0x1aa)]
        string F1RespuestaDetalleEmisionTipo { [DispId(0x1aa)] get; }
        [DispId(0x1ab)]
        string F1RespuestaDetalleCae { [DispId(0x1ab)] get; }
        [DispId(0x1ac)]
        string F1RespuestaDetalleCbteFch { [DispId(0x1ac)] get; }
        [DispId(0x1ad)]
        string F1RespuestaDetalleCAEFchVto { [DispId(0x1ad)] get; }
        [DispId(430)]
        string F1RespuestaDetalleDocNro { [DispId(430)] get; }
        [DispId(0x1af)]
        int F1RespuestaDetalleObservacionItemCantidad { [DispId(0x1af)] get; }
        [DispId(0x1b0)]
        int FxRespuestaObservacionItemCantidad { [DispId(0x1b0)] get; }
        [DispId(0x1b1)]
        int F1RespuestaDetalleObservacionCode { [DispId(0x1b1)] get; }
        [DispId(0x1b2)]
        string F1RespuestaDetalleObservacionMsg { [DispId(0x1b2)] get; }
        [DispId(0x1b3)]
        string F1RespuestaDetalleObservacionMsg1 { [DispId(0x1b3)] get; }
        [DispId(0x1b4)]
        string FxRespuestaObservacionDescripcion1 { [DispId(0x1b4)] get; }
        [DispId(0x1b5)]
        int FxRespuestaObservacionCodigo1 { [DispId(0x1b5)] get; }
        [DispId(0x1b6)]
        int fxListaCodigo { [DispId(0x1b6)] get; }
        [DispId(0x1b7)]
        string fxListaDescripcion { [DispId(0x1b7)] get; }
        [DispId(440)]
        string fxListaCodigo2 { [DispId(440)] get; }
        [DispId(0x1b9)]
        string fxListaDesde { [DispId(0x1b9)] get; }
        [DispId(0x1ba)]
        string fxListaHasta { [DispId(0x1ba)] get; }
        [DispId(0x1bb)]
        int F1RespuestaDetalleObservacionCode1 { [DispId(0x1bb)] get; }
        [DispId(0x1bc)]
        string f1RespuestaMonedaId { [DispId(0x1bc)] get; }
        [DispId(0x1bd)]
        string f1RespuestaMonedaFchCotiz { [DispId(0x1bd)] get; }
        [DispId(0x1be)]
        double f1RespuestaMonedaCotiz { [DispId(0x1be)] get; }
        [DispId(0x1bf)]
        string f1RespuestaCAEA { [DispId(0x1bf)] get; }
        [DispId(0x1c0)]
        int f1RespuestaCAEAPeriodo { [DispId(0x1c0)] get; }
        [DispId(0x1c1)]
        string f1RespuestaCAEAPeriodoS { [DispId(0x1c1)] get; }
        [DispId(450)]
        int f1RespuestaCAEAOrden { [DispId(450)] get; }
        [DispId(0x1c3)]
        string f1RespuestaCAEAOrdenS { [DispId(0x1c3)] get; }
        [DispId(0x1c4)]
        string f1RespuestaCAEAFchVigDesde { [DispId(0x1c4)] get; }
        [DispId(0x1c5)]
        string f1RespuestaCAEAFchVigHasta { [DispId(0x1c5)] get; }
        [DispId(0x1c6)]
        string f1RespuestaCAEAFchTopeInf { [DispId(0x1c6)] get; }
        [DispId(0x1c7)]
        string f1RespuestaCAEAFchProceso { [DispId(0x1c7)] get; }
        [DispId(0x1c8)]
        string fxRespuestaCAEA { [DispId(0x1c8)] get; }
        [DispId(0x1c9)]
        int fxRespuestaCAEAPeriodo { [DispId(0x1c9)] get; }
        [DispId(0x1ca)]
        string fxRespuestaCAEAPeriodoS { [DispId(0x1ca)] get; }
        [DispId(0x1cb)]
        int fxRespuestaCAEAOrden { [DispId(0x1cb)] get; }
        [DispId(460)]
        string fxRespuestaCAEAOrdenS { [DispId(460)] get; }
        [DispId(0x1cd)]
        string fxRespuestaCAEAFechaDesde { [DispId(0x1cd)] get; }
        [DispId(0x1ce)]
        string fxRespuestaCAEAFechaHasta { [DispId(0x1ce)] get; }
        [DispId(0x1cf)]
        string fxRespuestaCAEAFechaTopeInforme { [DispId(0x1cf)] get; }
        [DispId(0x1d0)]
        string fxRespuestaCAEAFechaProceso { [DispId(0x1d0)] get; }
        [DispId(0x1d1)]
        int indice { [DispId(0x1d1)] get; [DispId(0x1d1)] set; }
        [DispId(0x1d2)]
        int f1Indice { [DispId(0x1d2)] get; [DispId(0x1d2)] set; }
        [DispId(0x1d3)]
        string Autenticidad { [DispId(0x1d3)] get; [DispId(0x1d3)] set; }
        [DispId(0x1d4)]
        string NombreServicio { [DispId(0x1d4)] get; [DispId(0x1d4)] set; }
        [DispId(0x1d5)]
        string DireccionServicio { [DispId(0x1d5)] get; [DispId(0x1d5)] set; }
        [DispId(470)]
        string DireccionServicioURL { [DispId(470)] get; [DispId(470)] set; }
        [DispId(0x1d7)]
        string fxDireccionServicioURL { [DispId(0x1d7)] get; [DispId(0x1d7)] set; }
        [DispId(0x1d8)]
        string f1DireccionServicioURL { [DispId(0x1d8)] get; [DispId(0x1d8)] set; }
        [DispId(0x1d9)]
        string bDireccionServicio { [DispId(0x1d9)] get; [DispId(0x1d9)] set; }
        [DispId(0x1da)]
        string bDireccionServicioURL { [DispId(0x1da)] get; [DispId(0x1da)] set; }
        [DispId(0x1db)]
        string xDireccionServicioURL { [DispId(0x1db)] get; [DispId(0x1db)] set; }
        [DispId(0x1dc)]
        string bMonedaId { [DispId(0x1dc)] get; }
        [DispId(0x1dd)]
        string bMonedaDS { [DispId(0x1dd)] get; }
        [DispId(0x1de)]
        string bMonedaVig_desde { [DispId(0x1de)] get; }
        [DispId(0x1df)]
        string bMonedaVig_hasta { [DispId(0x1df)] get; }
        [DispId(480)]
        string xMonedaId { [DispId(480)] get; }
        [DispId(0x1e1)]
        string xMonedaDS { [DispId(0x1e1)] get; }
        [DispId(0x1e2)]
        string xMonedaVig_desde { [DispId(0x1e2)] get; }
        [DispId(0x1e3)]
        string xMonedaVig_HASTA { [DispId(0x1e3)] get; }
        [DispId(0x1e4)]
        int xPtoVenta_pve_nro { [DispId(0x1e4)] get; }
        [DispId(0x1e5)]
        string xPtoVenta_pvo_bloqueado { [DispId(0x1e5)] get; }
        [DispId(0x1e6)]
        string xPtoVenta_pvo_fchbaja { [DispId(0x1e6)] get; }
        [DispId(0x1e7)]
        string xPais_dst_codigo { [DispId(0x1e7)] get; }
        [DispId(0x1e8)]
        string xPais_dst_ds { [DispId(0x1e8)] get; }
        [DispId(0x1e9)]
        string xCuit_dst_cuit { [DispId(0x1e9)] get; }
        [DispId(490)]
        string xCuit_dst_ds { [DispId(490)] get; }
        [DispId(0x1eb)]
        string xIdioma_idi_Id { [DispId(0x1eb)] get; }
        [DispId(0x1ec)]
        string xIdioma_idi_ds { [DispId(0x1ec)] get; }
        [DispId(0x1ed)]
        string xIdioma_idi_Vig_desde { [DispId(0x1ed)] get; }
        [DispId(0x1ee)]
        string xIdioma_idi_Vig_hasta { [DispId(0x1ee)] get; }
        [DispId(0x1ef)]
        string xIncoTErms_inc_Id { [DispId(0x1ef)] get; }
        [DispId(0x1f0)]
        string xIncoTErms_inc_ds { [DispId(0x1f0)] get; }
        [DispId(0x1f1)]
        string xIncoTErms_inc_Vig_desde { [DispId(0x1f1)] get; }
        [DispId(0x1f2)]
        string xIncoTErms_inc_Vig_hasta { [DispId(0x1f2)] get; }
        [DispId(0x1f3)]
        string xTipo_expo_tex_Id { [DispId(0x1f3)] get; }
        [DispId(500)]
        string xTipo_expo_tex_ds { [DispId(500)] get; }
        [DispId(0x1f5)]
        string xTipo_expo_tex_Vig_desde { [DispId(0x1f5)] get; }
        [DispId(0x1f6)]
        string xTipo_expo_tex_Vig_hasta { [DispId(0x1f6)] get; }
        [DispId(0x1f7)]
        string bNombreServicio { [DispId(0x1f7)] get; [DispId(0x1f7)] set; }
        [DispId(0x1f8)]
        string sMonedaId { [DispId(0x1f8)] get; }
        [DispId(0x1f9)]
        string sMonedaDS { [DispId(0x1f9)] get; }
        [DispId(0x1fa)]
        string sMonedaVig_desde { [DispId(0x1fa)] get; }
        [DispId(0x1fb)]
        string sMonedaVig_hasta { [DispId(0x1fb)] get; }
        [DispId(0x1fc)]
        int bZonaId { [DispId(0x1fc)] get; }
        [DispId(0x1fd)]
        string bZonaDS { [DispId(0x1fd)] get; }
        [DispId(510)]
        string bZonaVig_desde { [DispId(510)] get; }
        [DispId(0x1ff)]
        string bZonaVig_hasta { [DispId(0x1ff)] get; }
        [DispId(0x200)]
        int bUMedId { [DispId(0x200)] get; }
        [DispId(0x201)]
        string bUMedDS { [DispId(0x201)] get; }
        [DispId(0x202)]
        string bUMedVig_desde { [DispId(0x202)] get; }
        [DispId(0x203)]
        string bUMedVig_hasta { [DispId(0x203)] get; }
        [DispId(0x204)]
        int xUMed_Id { [DispId(0x204)] get; }
        [DispId(0x205)]
        string xUMed_DS { [DispId(0x205)] get; }
        [DispId(0x206)]
        string xUMed_Vig_desde { [DispId(0x206)] get; }
        [DispId(0x207)]
        string xUMed_Vig_hasta { [DispId(0x207)] get; }
        [DispId(520)]
        int bTipoDocID { [DispId(520)] get; }
        [DispId(0x209)]
        string bTipoDocDS { [DispId(0x209)] get; }
        [DispId(0x20a)]
        string bTipoDocVig_desde { [DispId(0x20a)] get; }
        [DispId(0x20b)]
        string bTipoDocVig_hasta { [DispId(0x20b)] get; }
        [DispId(0x20c)]
        int sTipoDocID { [DispId(0x20c)] get; }
        [DispId(0x20d)]
        string sTipoDocDS { [DispId(0x20d)] get; }
        [DispId(0x20e)]
        string sTipoDocVig_desde { [DispId(0x20e)] get; }
        [DispId(0x20f)]
        string sTipoDocVig_hasta { [DispId(0x20f)] get; }
        [DispId(0x210)]
        int bTipoIvaId { [DispId(0x210)] get; }
        [DispId(0x211)]
        string bTipoIvaDS { [DispId(0x211)] get; }
        [DispId(530)]
        string bTipoIvaVig_desde { [DispId(530)] get; }
        [DispId(0x213)]
        string bTipoIvaVig_hasta { [DispId(0x213)] get; }
        [DispId(0x214)]
        int sTipoIvaId { [DispId(0x214)] get; }
        [DispId(0x215)]
        string sTipoIvaDS { [DispId(0x215)] get; }
        [DispId(0x216)]
        string sTipoIvaVig_desde { [DispId(0x216)] get; }
        [DispId(0x217)]
        string sTipoIvaVig_hasta { [DispId(0x217)] get; }
        [DispId(0x218)]
        int bTipo_cpteId { [DispId(0x218)] get; }
        [DispId(0x219)]
        string bTipo_cpteDS { [DispId(0x219)] get; }
        [DispId(0x21a)]
        string bTipo_cpteVig_desde { [DispId(0x21a)] get; }
        [DispId(0x21b)]
        string bTipo_cpteVig_hasta { [DispId(0x21b)] get; }
        [DispId(540)]
        int bTipo_cbteId { [DispId(540)] get; }
        [DispId(0x21d)]
        string bTipo_cbteDS { [DispId(0x21d)] get; }
        [DispId(0x21e)]
        string bTipo_cbteVig_desde { [DispId(0x21e)] get; }
        [DispId(0x21f)]
        string bTipo_cbteVig_hasta { [DispId(0x21f)] get; }
        [DispId(0x220)]
        int xTipo_cbte_Id { [DispId(0x220)] get; }
        [DispId(0x221)]
        string xTipo_cbte_DS { [DispId(0x221)] get; }
        [DispId(0x222)]
        string xTipo_cbte_Vig_desde { [DispId(0x222)] get; }
        [DispId(0x223)]
        string xTipo_cbte_Vig_hasta { [DispId(0x223)] get; }
        [DispId(0x224)]
        int f1TiposCbte_Id { [DispId(0x224)] get; }
        [DispId(0x225)]
        string f1TiposCbte_Desc { [DispId(0x225)] get; }
        [DispId(550)]
        string f1TiposCbte_fchDesde { [DispId(550)] get; }
        [DispId(0x227)]
        string f1TiposCbte_fchHasta { [DispId(0x227)] get; }
        [DispId(0x228)]
        int f1TiposTributo_Id { [DispId(0x228)] get; }
        [DispId(0x229)]
        string f1TiposTributo_Desc { [DispId(0x229)] get; }
        [DispId(0x22a)]
        string f1TiposTributo_fchDesde { [DispId(0x22a)] get; }
        [DispId(0x22b)]
        string f1TiposTributo_fchHasta { [DispId(0x22b)] get; }
        [DispId(0x22c)]
        int f1TiposOpcional_Id { [DispId(0x22c)] get; }
        [DispId(0x22d)]
        string f1TiposOpcional_Desc { [DispId(0x22d)] get; }
        [DispId(0x22e)]
        string f1TiposOpcional_fchDesde { [DispId(0x22e)] get; }
        [DispId(0x22f)]
        string f1TiposOpcional_fchHasta { [DispId(0x22f)] get; }
        [DispId(560)]
        string f1TiposMoneda_Id { [DispId(560)] get; }
        [DispId(0x231)]
        string f1TiposMoneda_Desc { [DispId(0x231)] get; }
        [DispId(0x232)]
        string f1TiposMoneda_fchDesde { [DispId(0x232)] get; }
        [DispId(0x233)]
        string f1TiposMoneda_fchHasta { [DispId(0x233)] get; }
        [DispId(0x234)]
        int f1TiposIva_Id { [DispId(0x234)] get; }
        [DispId(0x235)]
        string f1TiposIva_Desc { [DispId(0x235)] get; }
        [DispId(0x236)]
        string f1TiposIva_fchDesde { [DispId(0x236)] get; }
        [DispId(0x237)]
        string f1TiposIva_fchHasta { [DispId(0x237)] get; }
        [DispId(0x238)]
        int f1TiposDoc_Id { [DispId(0x238)] get; }
        [DispId(0x239)]
        string f1TiposDoc_Desc { [DispId(0x239)] get; }
        [DispId(570)]
        string f1TiposDoc_fchDesde { [DispId(570)] get; }
        [DispId(0x23b)]
        string f1TiposDoc_fchHasta { [DispId(0x23b)] get; }
        [DispId(0x23c)]
        int f1PtosVenta_nro { [DispId(0x23c)] get; }
        [DispId(0x23d)]
        string f1PtosVenta_EmisisionTipo { [DispId(0x23d)] get; }
        [DispId(0x23e)]
        string f1PtosVenta_Bloqueado { [DispId(0x23e)] get; }
        [DispId(0x23f)]
        string f1PtosVenta_fchBaja { [DispId(0x23f)] get; }
        [DispId(0x240)]
        int f1TiposConcepto_Id { [DispId(0x240)] get; }
        [DispId(0x241)]
        string f1TiposConcepto_Desc { [DispId(0x241)] get; }
        [DispId(0x242)]
        string f1TiposConcepto_fchDesde { [DispId(0x242)] get; }
        [DispId(0x243)]
        string f1TiposConcepto_fchHasta { [DispId(0x243)] get; }
        [DispId(580)]
        int f1ErrorCode { [DispId(580)] get; }
        [DispId(0x245)]
        int fxErrorCode { [DispId(0x245)] get; }
        [DispId(0x246)]
        int fxObervacionCodigo { [DispId(0x246)] get; }
        [DispId(0x247)]
        string f1ErrorMsg { [DispId(0x247)] get; }
        [DispId(0x248)]
        string fxErrorMsg { [DispId(0x248)] get; }
        [DispId(0x249)]
        string fxObervacionDescripcion { [DispId(0x249)] get; }
        [DispId(0x24a)]
        int f1EventCode { [DispId(0x24a)] get; }
        [DispId(0x24b)]
        int fxEventCode { [DispId(0x24b)] get; }
        [DispId(0x24c)]
        string f1EventMsg { [DispId(0x24c)] get; }
        [DispId(0x24d)]
        string fxEventMsg { [DispId(0x24d)] get; }
        [DispId(590)]
        string f1ErrorMsg1 { [DispId(590)] get; }
        [DispId(0x24f)]
        string fxObervacionDescripcion1 { [DispId(0x24f)] get; }
        [DispId(0x250)]
        int fxObervacionCodigo1 { [DispId(0x250)] get; }
        [DispId(0x251)]
        string fxErrorMsg1 { [DispId(0x251)] get; }
        [DispId(0x252)]
        string f1ErrorMsg2 { [DispId(0x252)] get; }
        [DispId(0x253)]
        string fxErrorMsg2 { [DispId(0x253)] get; }
        [DispId(0x254)]
        int f1ErrorCode1 { [DispId(0x254)] get; }
        [DispId(0x255)]
        int fxErrorCode1 { [DispId(0x255)] get; }
        [DispId(0x256)]
        int f1ErrorCode2 { [DispId(0x256)] get; }
        [DispId(0x257)]
        int fxErrorCode2 { [DispId(0x257)] get; }
        [DispId(600)]
        string f1EventMsg1 { [DispId(600)] get; }
        [DispId(0x259)]
        string fxEventMsg1 { [DispId(0x259)] get; }
        [DispId(0x25a)]
        string f1EventMsg2 { [DispId(0x25a)] get; }
        [DispId(0x25b)]
        string fxEventMsg2 { [DispId(0x25b)] get; }
        [DispId(0x25c)]
        int f1EventCode1 { [DispId(0x25c)] get; }
        [DispId(0x25d)]
        int fxEventCode1 { [DispId(0x25d)] get; }
        [DispId(0x25e)]
        int f1EventCode2 { [DispId(0x25e)] get; }
        [DispId(0x25f)]
        int fxEventCode2 { [DispId(0x25f)] get; }
        [DispId(0x260)]
        int sTipo_cbteId { [DispId(0x260)] get; }
        [DispId(0x261)]
        string sTipo_cbteDS { [DispId(0x261)] get; }
        [DispId(610)]
        string sTipo_cbteVig_desde { [DispId(610)] get; }
        [DispId(0x263)]
        string sTipo_cbteVig_hasta { [DispId(0x263)] get; }
        [DispId(0x264)]
        int sTipo_cpteId { [DispId(0x264)] get; }
        [DispId(0x265)]
        string sTipo_cpteDS { [DispId(0x265)] get; }
        [DispId(0x266)]
        string sTipo_cpteVig_desde { [DispId(0x266)] get; }
        [DispId(0x267)]
        string sTipo_cpteVig_hasta { [DispId(0x267)] get; }
        [DispId(0x268)]
        string bProductoNCM_codigo { [DispId(0x268)] get; }
        [DispId(0x269)]
        string bProductoNCM_ds { [DispId(0x269)] get; }
        [DispId(0x26a)]
        string bProductoNCM_nota { [DispId(0x26a)] get; }
        [DispId(0x26b)]
        string bProductoNCM_Vig_desde { [DispId(0x26b)] get; }
        [DispId(620)]
        string bProductoNCM_Vig_Hasta { [DispId(620)] get; }
        [DispId(0x26d)]
        int gEspecieCodigo { [DispId(0x26d)] get; }
        [DispId(0x26e)]
        string gEspecieDescripcion { [DispId(0x26e)] get; }
        [DispId(0x26f)]
        int gProvinciaCodigo { [DispId(0x26f)] get; }
        [DispId(0x270)]
        string gProvinciaDescripcion { [DispId(0x270)] get; }
        [DispId(0x271)]
        int gLocalidadCodigo { [DispId(0x271)] get; }
        [DispId(0x272)]
        string gLocalidadDescripcion { [DispId(0x272)] get; }
        [DispId(0x273)]
        int gLocalidadTodasCodigo { [DispId(0x273)] get; }
        [DispId(0x274)]
        string gLocalidadTodasDescripcion { [DispId(0x274)] get; }
        [DispId(0x275)]
        int gLocalidadTodasCodigoProvincia { [DispId(0x275)] get; }
        [DispId(630)]
        string gLocalidadTodasDescripcionProvincia { [DispId(630)] get; }
        [DispId(0x277)]
        string gCosechaCodigo { [DispId(0x277)] get; }
        [DispId(0x278)]
        string gCosechaDescripcion { [DispId(0x278)] get; }
        [DispId(0x279)]
        int gCTGCantHoras { [DispId(0x279)] get; [DispId(0x279)] set; }
        [DispId(0x27a)]
        string gCTGCodigoEspecie { [DispId(0x27a)] get; [DispId(0x27a)] set; }
        [DispId(0x27b)]
        string gCTGCodigoCosecha { [DispId(0x27b)] get; [DispId(0x27b)] set; }
        [DispId(0x27c)]
        int gCTGCodigoLocalidadDestino { [DispId(0x27c)] get; [DispId(0x27c)] set; }
        [DispId(0x27d)]
        int gCTGCodigoLocalidadOrigen { [DispId(0x27d)] get; [DispId(0x27d)] set; }
        [DispId(0x27e)]
        string gCTGCuitDestinatario { [DispId(0x27e)] get; [DispId(0x27e)] set; }
        [DispId(0x27f)]
        string gCTGCuitDestino { [DispId(0x27f)] get; [DispId(0x27f)] set; }
        [DispId(640)]
        string gCTGCuitRemitenteComercial { [DispId(640)] get; [DispId(640)] set; }
        [DispId(0x281)]
        string gCTGCuitTrasnportista { [DispId(0x281)] get; [DispId(0x281)] set; }
        [DispId(0x282)]
        string gCTGCuitRepresentado { [DispId(0x282)] get; [DispId(0x282)] set; }
        [DispId(0x283)]
        string gCTGNumeroCartaPorte { [DispId(0x283)] get; [DispId(0x283)] set; }
        [DispId(0x284)]
        string gCTGPatenteVehiculo { [DispId(0x284)] get; [DispId(0x284)] set; }
        [DispId(0x285)]
        string gCTGPatenteVehiculoS { [DispId(0x285)] get; [DispId(0x285)] set; }
        [DispId(0x286)]
        string gCTGPesoNetoCarga { [DispId(0x286)] get; [DispId(0x286)] set; }
        [DispId(0x287)]
        string gCTGRespuestaNumeroCartaPorte { [DispId(0x287)] get; }
        [DispId(0x288)]
        string gCTGRespuestaNumeroCTG { [DispId(0x288)] get; }
        [DispId(0x289)]
        string gCTGRespuestaCodigoTransaccion { [DispId(0x289)] get; }
        [DispId(650)]
        string gCTGRespuestaObervaciones { [DispId(650)] get; }
        [DispId(0x28b)]
        string F1RespuestaDetalleCAEAFchProceso { [DispId(0x28b)] get; }
        [DispId(0x28c)]
        string F1RespuestaDetalleCAEACAEA { [DispId(0x28c)] get; }
        [DispId(0x28d)]
        int F1RespuestaDetalleCAEAPtoVta { [DispId(0x28d)] get; }
        [DispId(0x28e)]
        int FxRespuestaDetalleCAEANumeroPuntoventa { [DispId(0x28e)] get; }
        [DispId(0x28f)]
        string FxRespuestaDetalleCAEABloqueado { [DispId(0x28f)] get; }
        [DispId(0x290)]
        string FxRespuestaDetalleCAEAFechaBaja { [DispId(0x290)] get; }
        [DispId(0x291)]
        int F1DetalleConcepto { [DispId(0x291)] get; [DispId(0x291)] set; }
        [DispId(0x292)]
        int F1DetalleDocTipo { [DispId(0x292)] get; [DispId(0x292)] set; }
        [DispId(0x293)]
        string F1DetalleDocNro { [DispId(0x293)] get; [DispId(0x293)] set; }
        [DispId(660)]
        int F1DetalleCbteDesde { [DispId(660)] get; [DispId(660)] set; }
        [DispId(0x295)]
        string F1DetalleCbteDesdeS { [DispId(0x295)] get; [DispId(0x295)] set; }
        [DispId(0x296)]
        int F1DetalleCbteHasta { [DispId(0x296)] get; [DispId(0x296)] set; }
        [DispId(0x297)]
        string F1DetalleCbteHastaS { [DispId(0x297)] get; [DispId(0x297)] set; }
        [DispId(0x298)]
        string F1DetalleCAEA { [DispId(0x298)] get; [DispId(0x298)] set; }
        [DispId(0x299)]
        string F1DetalleCbteFch { [DispId(0x299)] get; [DispId(0x299)] set; }
        [DispId(0x29a)]
        double F1DetalleImpTotal { [DispId(0x29a)] get; [DispId(0x29a)] set; }
        [DispId(0x29b)]
        double F1DetalleImpTotalConc { [DispId(0x29b)] get; [DispId(0x29b)] set; }
        [DispId(0x29c)]
        double F1DetalleImpNeto { [DispId(0x29c)] get; [DispId(0x29c)] set; }
        [DispId(0x29d)]
        double F1DetalleImpOpEx { [DispId(0x29d)] get; [DispId(0x29d)] set; }
        [DispId(670)]
        double F1DetalleImpTrib { [DispId(670)] get; [DispId(670)] set; }
        [DispId(0x29f)]
        double F1DetalleImpIva { [DispId(0x29f)] get; [DispId(0x29f)] set; }
        [DispId(0x2a0)]
        string F1DetalleFchServDesde { [DispId(0x2a0)] get; [DispId(0x2a0)] set; }
        [DispId(0x2a1)]
        string F1DetalleFchServHasta { [DispId(0x2a1)] get; [DispId(0x2a1)] set; }
        [DispId(0x2a2)]
        string F1DetalleFchVtoPago { [DispId(0x2a2)] get; [DispId(0x2a2)] set; }
        [DispId(0x2a3)]
        string F1DetalleMonId { [DispId(0x2a3)] get; [DispId(0x2a3)] set; }
        [DispId(0x2a4)]
        double F1DetalleMonCotiz { [DispId(0x2a4)] get; [DispId(0x2a4)] set; }
        [DispId(0x2a5)]
        int F1DetalleCbtesAsocNro { [DispId(0x2a5)] get; [DispId(0x2a5)] set; }
        [DispId(0x2a6)]
        string F1DetalleCbtesAsocNroS { [DispId(0x2a6)] get; [DispId(0x2a6)] set; }
        [DispId(0x2a7)]
        int F1DetalleCbtesAsocPtoVta { [DispId(0x2a7)] get; [DispId(0x2a7)] set; }
        [DispId(680)]
        int F1DetalleCbtesAsocTipo { [DispId(680)] get; [DispId(680)] set; }
        [DispId(0x2a9)]
        int F1DetalleTributoId { [DispId(0x2a9)] get; [DispId(0x2a9)] set; }
        [DispId(0x2aa)]
        string F1DetalleTributoDesc { [DispId(0x2aa)] get; [DispId(0x2aa)] set; }
        [DispId(0x2ab)]
        double F1DetalleTributoAlic { [DispId(0x2ab)] get; [DispId(0x2ab)] set; }
        [DispId(0x2ac)]
        double F1DetalleTributoBaseImp { [DispId(0x2ac)] get; [DispId(0x2ac)] set; }
        [DispId(0x2ad)]
        double F1DetalleTributoImporte { [DispId(0x2ad)] get; [DispId(0x2ad)] set; }
        [DispId(0x2ae)]
        int F1DetalleIvaId { [DispId(0x2ae)] get; [DispId(0x2ae)] set; }
        [DispId(0x2af)]
        double F1DetalleIvaBaseImp { [DispId(0x2af)] get; [DispId(0x2af)] set; }
        [DispId(0x2b0)]
        double F1DetalleIvaImporte { [DispId(0x2b0)] get; [DispId(0x2b0)] set; }
        [DispId(0x2b1)]
        string F1DetalleOpcionalId { [DispId(0x2b1)] get; [DispId(0x2b1)] set; }
        [DispId(690)]
        string F1DetalleOpcionalValor { [DispId(690)] get; [DispId(690)] set; }
        [DispId(0x2b3)]
        string fxCodigoAutorizacion { [DispId(0x2b3)] get; [DispId(0x2b3)] set; }
        [DispId(0x2b4)]
        bool fxCodigoAutorizacionNO { [DispId(0x2b4)] get; [DispId(0x2b4)] set; }
        [DispId(0x2b5)]
        string fxCodigoMoneda { [DispId(0x2b5)] get; [DispId(0x2b5)] set; }
        [DispId(0x2b6)]
        string fxObservaciones { [DispId(0x2b6)] get; [DispId(0x2b6)] set; }
        [DispId(0x2b7)]
        string fxNumeroDocumento { [DispId(0x2b7)] get; [DispId(0x2b7)] set; }
        [DispId(0x2b8)]
        int fxNumeroPuntoVenta { [DispId(0x2b8)] get; [DispId(0x2b8)] set; }
        [DispId(0x2b9)]
        string fxFechaEmision { [DispId(0x2b9)] get; [DispId(0x2b9)] set; }
        [DispId(0x2ba)]
        bool fxFechaEmisionNO { [DispId(0x2ba)] get; [DispId(0x2ba)] set; }
        [DispId(0x2bb)]
        string fxFechaServicioHasta { [DispId(0x2bb)] get; [DispId(0x2bb)] set; }
        [DispId(700)]
        bool fxFechaServicioHastaNO { [DispId(700)] get; [DispId(700)] set; }
        [DispId(0x2bd)]
        string fxFechaVencimiento { [DispId(0x2bd)] get; [DispId(0x2bd)] set; }
        [DispId(0x2be)]
        bool fxFechaVencimientoNO { [DispId(0x2be)] get; [DispId(0x2be)] set; }
        [DispId(0x2bf)]
        string fxFechaVencimientoPago { [DispId(0x2bf)] get; [DispId(0x2bf)] set; }
        [DispId(0x2c0)]
        bool fxFechaVencimientoPagoNO { [DispId(0x2c0)] get; [DispId(0x2c0)] set; }
        [DispId(0x2c1)]
        string fxFechaServicioDesde { [DispId(0x2c1)] get; [DispId(0x2c1)] set; }
        [DispId(0x2c2)]
        bool fxFechaServicioDesdeNO { [DispId(0x2c2)] get; [DispId(0x2c2)] set; }
        [DispId(0x2c3)]
        int fxCodigoConcepto { [DispId(0x2c3)] get; [DispId(0x2c3)] set; }
        [DispId(0x2c4)]
        int fxCodigoTipoComprobante { [DispId(0x2c4)] get; [DispId(0x2c4)] set; }
        [DispId(0x2c5)]
        bool fxCodigoTipoAutorizacionNO { [DispId(0x2c5)] get; [DispId(0x2c5)] set; }
        [DispId(710)]
        int fxCodigoTipoDocumento { [DispId(710)] get; [DispId(710)] set; }
        [DispId(0x2c7)]
        bool fxCodigoTipoDocumentoNO { [DispId(0x2c7)] get; [DispId(0x2c7)] set; }
        [DispId(0x2c8)]
        string fxCodigoTipoAutorizacion { [DispId(0x2c8)] get; [DispId(0x2c8)] set; }
        [DispId(0x2c9)]
        double fxCotizacionMoneda { [DispId(0x2c9)] get; [DispId(0x2c9)] set; }
        [DispId(0x2ca)]
        double fxImporteExento { [DispId(0x2ca)] get; [DispId(0x2ca)] set; }
        [DispId(0x2cb)]
        bool fxImporteExentoNO { [DispId(0x2cb)] get; [DispId(0x2cb)] set; }
        [DispId(0x2cc)]
        double fxImporteGravado { [DispId(0x2cc)] get; [DispId(0x2cc)] set; }
        [DispId(0x2cd)]
        bool fxImporteGravadoNO { [DispId(0x2cd)] get; [DispId(0x2cd)] set; }
        [DispId(0x2ce)]
        double fxImporteNoGravado { [DispId(0x2ce)] get; [DispId(0x2ce)] set; }
        [DispId(0x2cf)]
        bool fxImporteNoGravadoNO { [DispId(0x2cf)] get; [DispId(0x2cf)] set; }
        [DispId(720)]
        double fxImporteOtrosTributos { [DispId(720)] get; [DispId(720)] set; }
        [DispId(0x2d1)]
        bool fxImporteOtrosTributosNO { [DispId(0x2d1)] get; [DispId(0x2d1)] set; }
        [DispId(0x2d2)]
        bool fxNumeroDocumentoNO { [DispId(0x2d2)] get; [DispId(0x2d2)] set; }
        [DispId(0x2d3)]
        double fxImporteSubTotal { [DispId(0x2d3)] get; [DispId(0x2d3)] set; }
        [DispId(0x2d4)]
        double fxImporteTotal { [DispId(0x2d4)] get; [DispId(0x2d4)] set; }
        [DispId(0x2d5)]
        int fxNumeroComprobante { [DispId(0x2d5)] get; [DispId(0x2d5)] set; }
        [DispId(0x2d6)]
        int fxComprobanteAsosiadoCodigoTipoComprobante { [DispId(0x2d6)] get; [DispId(0x2d6)] set; }
        [DispId(0x2d7)]
        int fxComprobanteAsosiadoNumeroComprobante { [DispId(0x2d7)] get; [DispId(0x2d7)] set; }
        [DispId(0x2d8)]
        int fxComprobanteAsosiadoNumeroPuntoVenta { [DispId(0x2d8)] get; [DispId(0x2d8)] set; }
        [DispId(0x2d9)]
        int fxComprobantesAsociadosItemCantidad { [DispId(0x2d9)] get; [DispId(0x2d9)] set; }
        [DispId(730)]
        int fxItemsItemCantidad { [DispId(730)] get; [DispId(730)] set; }
        [DispId(0x2db)]
        int fxCAEAItemCantidad { [DispId(0x2db)] get; [DispId(0x2db)] set; }
        [DispId(0x2dc)]
        int fxOtrosTributosItemCantidad { [DispId(0x2dc)] get; [DispId(0x2dc)] set; }
        [DispId(0x2dd)]
        int fxSubTotalesItemCantidad { [DispId(0x2dd)] get; [DispId(0x2dd)] set; }
        [DispId(0x2de)]
        double fxItemCantidad { [DispId(0x2de)] get; [DispId(0x2de)] set; }
        [DispId(0x2df)]
        bool fxItemCantidadNO { [DispId(0x2df)] get; [DispId(0x2df)] set; }
        [DispId(0x2e0)]
        bool fxItemImporteBonificacionNO { [DispId(0x2e0)] get; [DispId(0x2e0)] set; }
        [DispId(0x2e1)]
        double fxItemImporteBonificacion { [DispId(0x2e1)] get; [DispId(0x2e1)] set; }
        [DispId(0x2e2)]
        double fxItemImporteItem { [DispId(0x2e2)] get; [DispId(0x2e2)] set; }
        [DispId(0x2e3)]
        double fxItemImporteIva { [DispId(0x2e3)] get; [DispId(0x2e3)] set; }
        [DispId(740)]
        bool fxItemImporteIvaNO { [DispId(740)] get; [DispId(740)] set; }
        [DispId(0x2e5)]
        double fxItemPrecioUnitario { [DispId(0x2e5)] get; [DispId(0x2e5)] set; }
        [DispId(0x2e6)]
        bool fxItemPrecioUnitarioNO { [DispId(0x2e6)] get; [DispId(0x2e6)] set; }
        [DispId(0x2e7)]
        string fxItemCodigo { [DispId(0x2e7)] get; [DispId(0x2e7)] set; }
        [DispId(0x2e8)]
        double fxOtrosTributosBaseImponible { [DispId(0x2e8)] get; [DispId(0x2e8)] set; }
        [DispId(0x2e9)]
        double fxOtrosTributosImporte { [DispId(0x2e9)] get; [DispId(0x2e9)] set; }
        [DispId(0x2ea)]
        string fxOtrosTributosDescripcion { [DispId(0x2ea)] get; [DispId(0x2ea)] set; }
        [DispId(0x2eb)]
        int fxOtrosTributosCodigo { [DispId(0x2eb)] get; [DispId(0x2eb)] set; }
        [DispId(0x2ec)]
        int fxSubTotalesIvaCodigo { [DispId(0x2ec)] get; [DispId(0x2ec)] set; }
        [DispId(0x2ed)]
        double fxSubTotalesIvaImporte { [DispId(0x2ed)] get; [DispId(0x2ed)] set; }
        [DispId(750)]
        string fxItemCodigoMtx { [DispId(750)] get; [DispId(750)] set; }
        [DispId(0x2ef)]
        string fxItemDescripcion { [DispId(0x2ef)] get; [DispId(0x2ef)] set; }
        [DispId(0x2f0)]
        int fxItemCodigoCondicionIva { [DispId(0x2f0)] get; [DispId(0x2f0)] set; }
        [DispId(0x2f1)]
        int fxItemCodigoUnidadMedida { [DispId(0x2f1)] get; [DispId(0x2f1)] set; }
        [DispId(0x2f2)]
        int fxItemUnidadesMtx { [DispId(0x2f2)] get; [DispId(0x2f2)] set; }
        [DispId(0x2f3)]
        string fxItemUnidadesMtxS { [DispId(0x2f3)] get; [DispId(0x2f3)] set; }
        [DispId(0x2f4)]
        bool fxItemUnidadesMtxNO { [DispId(0x2f4)] get; [DispId(0x2f4)] set; }
        [DispId(0x2f5)]
        int F1CabeceraPtoVta { [DispId(0x2f5)] get; [DispId(0x2f5)] set; }
        [DispId(0x2f6)]
        int F1CabeceraCbteTipo { [DispId(0x2f6)] get; [DispId(0x2f6)] set; }
        [DispId(0x2f7)]
        int F1CabeceraCantReg { [DispId(0x2f7)] get; [DispId(0x2f7)] set; }
        [DispId(760)]
        int F1DetalleCbtesAsocItemCantidad { [DispId(760)] get; [DispId(760)] set; }
        [DispId(0x2f9)]
        int F1DetalleTributoItemCantidad { [DispId(0x2f9)] get; [DispId(0x2f9)] set; }
        [DispId(0x2fa)]
        int F1DetalleIvaItemCantidad { [DispId(0x2fa)] get; [DispId(0x2fa)] set; }
        [DispId(0x2fb)]
        int F1DetalleOpcionalItemCantidad { [DispId(0x2fb)] get; [DispId(0x2fb)] set; }
        [DispId(0x2fc)]
        bool VerificarLicencia(string strMail, string strPassword, string strDocumento, string strHoja, string strRutaArchivo);
        [DispId(0x2fd)]
        bool IniciarYActivar(int iModoFiscal, string cuitTexto, string textoRutaArchivoCertificado, string textoRutaArchivoLicencia, string strGMail, string strPassword);
        [DispId(0x2fe)]
        bool LeerLicencia(object textoRutaArchivoLicencia);
        [DispId(0x2ff)]
        bool ActivarLicenciaSiNoExiste(string cuitTexto, string textoRutaArchivoLicencia, string strGMail, string strPassword);
        [DispId(0x300)]
        bool ActivarLicencia(string cuitTexto, string textoRutaArchivoLicencia, string strGMail, string strPassword);
        [DispId(0x301)]
        bool logincms();
        [DispId(770)]
        bool ObtenerTicketAcceso();
        [DispId(0x303)]
        bool bObtenerTicketAcceso();
        [DispId(0x304)]
        bool xObtenerTicketAcceso();
        [DispId(0x305)]
        bool f1ObtenerTicketAcceso();
        [DispId(0x306)]
        bool fxObtenerTicketAcceso();
        [DispId(0x307)]
        bool dObtenerTicketAcceso();
        [DispId(0x308)]
        bool gObtenerTicketAcceso();
        [DispId(0x309)]
        bool oObtenerTicketAcceso();
        [DispId(0x30a)]
        bool sObtenerTicketAcceso();
        [DispId(0x30b)]
        bool RegistrarConNumero(int pPuntoVenta, Factura.TipoComprobante pTipoComprobante, string cIdentificador, int nNumeroComprobante);
        [DispId(780)]
        int FERecuperaLastCMPRequest(int iPuntoVenta, Factura.TipoComprobante iTipoComprobante);
        [DispId(0x30d)]
        int RecuperaLastCPM(int ipuntoVenta, Factura.TipoComprobante iTipoComprobante);
        [DispId(0x30e)]
        string RecuperaLastCPMS(int ipuntoVenta, Factura.TipoComprobante iTipoComprobante);
        [DispId(0x30f)]
        bool Dummy();
        [DispId(0x310)]
        bool FEAuthRequest(int pPuntoVenta, Factura.TipoComprobante pTipoComprobante, string cIdentificador);
        [DispId(0x311)]
        bool Registrar(int pPuntoVenta, Factura.TipoComprobante pTipoComprobante, string cIdentificador);
        [DispId(0x312)]
        bool FEAutRequestAFIP(string cIdentificador);
        [DispId(0x313)]
        bool iniciar(Factura.modoFiscal iModoFiscal, string cuitTexto, string textoRutaArchivoCertificado, string textoRutaArchivoLicencia);
        [DispId(0x314)]
        bool FEConsultaCAERequest(string cCuit, Factura.TipoComprobante iTipoComprobante, int iPuntoVenta, int iNumero, double mTotal, string cCae, string cFecha);
        [DispId(0x315)]
        int FERecuperaQTYRequest();
        [DispId(790)]
        string FEUltNroRequest();
        [DispId(0x317)]
        bool BFEGetPARAM_MON();
        [DispId(0x318)]
        string xFECheck_Permiso(string strIdPermiso, int intDestinoMercaderia);
        [DispId(0x319)]
        bool xFEGetPARAM_MON();
        [DispId(0x31a)]
        bool xFEGetPARAM_tipo_cbte();
        [DispId(0x31b)]
        bool xFEGetPARAM_uMed();
        [DispId(0x31c)]
        bool xFEGetPARAM_PtoVenta();
        [DispId(0x31d)]
        bool xFEGetPARAM_Idiomas();
        [DispId(0x31e)]
        bool xFEGetPARAM_Tipo_expo();
        [DispId(0x31f)]
        bool xFEGetPARAM_IncoTerms();
        [DispId(800)]
        bool xFEGetPARAM_DST_PAIS();
        [DispId(0x321)]
        bool xFEGetPARAM_DST_CUIT();
        [DispId(0x322)]
        bool SEGGetPARAM_MON();
        [DispId(0x323)]
        bool SEGGetPARAM_Tipo_cbte();
        [DispId(0x324)]
        bool SEGGetPARAM_TipoIva();
        [DispId(0x325)]
        bool BFEGetPARAM_Tipo_cbte();
        [DispId(0x326)]
        bool SEGGetPARAM_TipoDoc();
        [DispId(0x327)]
        bool BFEGetPARAM_TipoIva();
        [DispId(0x328)]
        bool BFEGetPARAM_TipoDoc();
        [DispId(0x329)]
        bool BFEGetPARAM_UMed();
        [DispId(810)]
        bool BFEGetPARAM_Zonas();
        [DispId(0x32b)]
        bool bFEAutorize(int nPuntoVenta, int nTipoComprobante, string cIdentificador, int nNumero);
        [DispId(0x32c)]
        bool SEGAutorize(int nPuntoVenta, int nTipoComprobante, string cIdentificador, int nNumero);
        [DispId(0x32d)]
        bool bRegistrar(int nPuntoVenta, int nTipoComprobante, string cIdentificador);
        [DispId(0x32e)]
        bool xRegistrar(int nPuntoVenta, int nTipoComprobante, string cIdentificador);
        [DispId(0x32f)]
        bool sRegistrar(int nPuntoVenta, int nTipoComprobante, string cIdentificador);
        [DispId(0x330)]
        bool xRegistrarConNumero(int nPuntoVenta, int nTipoComprobante, string cIdentificador, int nNumero);
        [DispId(0x331)]
        bool bRegistrarConNumero(int nPuntoVenta, int nTipoComprobante, string cIdentificador, int nNumero);
        [DispId(0x332)]
        bool sRegistrarConNumero(int nPuntoVenta, int nTipoComprobante, string cIdentificador, int nNumero);
        [DispId(0x333)]
        bool bFEGetCMP(int nPuntoVenta, int nTipoComprobante, int nNumeroComprobante);
        [DispId(820)]
        bool xFEGetCMP(int nPuntoVenta, int nTipoComprobante, int nNumeroComprobante);
        [DispId(0x335)]
        bool xFEGetCMPS(int nPuntoVenta, int nTipoComprobante, string cNumeroComprobante);
        [DispId(0x336)]
        bool SEGGetCMP(int nPuntoVenta, int nTipoComprobante, int nNumeroComprobante);
        [DispId(0x337)]
        bool BFEGetPARAM_NCM();
        [DispId(0x338)]
        string BFEGetLastId();
        [DispId(0x339)]
        string SEGGetLastId();
        [DispId(0x33a)]
        int BFEGetLastCMP(int nPuntoVenta, int nTipoComprobante);
        [DispId(0x33b)]
        int xFEGetLastCMP(int nPuntoVenta, int nTipoComprobante);
        [DispId(0x33c)]
        string xFEGetLast_ID();
        [DispId(0x33d)]
        int SEGGetLastCMP(int nPuntoVenta, int nTipoComprobante);
        [DispId(830)]
        bool BDummy();
        [DispId(0x33f)]
        double xFEGetPARAM_CTZ(string strMon_id);
        [DispId(0x340)]
        double xFEGetPARAM_CTZS(string strMon_ids);
        [DispId(0x341)]
        bool xDummy();
        [DispId(0x342)]
        bool f1Dummy();
        [DispId(0x343)]
        bool fxDummy();
        [DispId(0x344)]
        bool dDummy();
        [DispId(0x345)]
        bool dAvisoDigit();
        [DispId(0x346)]
        bool dAvisoRecepAcept();
        [DispId(0x347)]
        bool gDummy();
        [DispId(840)]
        bool gObtenerEspecies();
        [DispId(0x349)]
        bool gObtenerProvincias();
        [DispId(0x34a)]
        bool gObtenerCosechas();
        [DispId(0x34b)]
        bool gObtenerLocalidadesPorCodigoProvincia(int iCodigoProvincia);
        [DispId(0x34c)]
        bool gObtenerLocalidadesTodas();
        [DispId(0x34d)]
        bool gObtenerLocalidadesTodasLiberar();
        [DispId(0x34e)]
        bool gSolicitarCTG();
        [DispId(0x34f)]
        bool gConfirmarCTG(string strcuitRepresentado, string strNumeroCTG, string strNumeroCartaPorte, string strPesoNetoCarga, string strCuitTransportista);
        [DispId(0x350)]
        bool oObtenerTipoGrano();
        [DispId(0x351)]
        bool SDummy();
        [DispId(850)]
        bool f1ParamGetTiposCbte();
        [DispId(0x353)]
        bool f1ParamGetPtosVenta();
        [DispId(0x354)]
        bool f1ParamGetTiposMoneda();
        [DispId(0x355)]
        bool f1ParamGetTiposTributo();
        [DispId(0x356)]
        bool f1ParamGetTiposOpcional();
        [DispId(0x357)]
        bool f1ParamGetTiposIva();
        [DispId(0x358)]
        bool f1ParamGetTiposDoc();
        [DispId(0x359)]
        bool f1ParamGetTiposConcepto();
        [DispId(0x35a)]
        bool F1CAESolicitar();
        [DispId(0x35b)]
        bool F1CompConsultar(int iPtoVta, int iCbteTipo, int iCbteNro);
        [DispId(860)]
        bool F1CAEARegInformativo();
        [DispId(0x35d)]
        bool f1CAEASolicitarS(string strPeriodo, string strOrden);
        [DispId(0x35e)]
        bool F1CAEASolicitar(int iPeriodo, int iOrden);
        [DispId(0x35f)]
        bool f1CAEAConsultarS(string strPeriodo, string strOrden);
        [DispId(0x360)]
        bool F1CAEAConsultar(int iPeriodo, int iOrden);
        [DispId(0x361)]
        bool F1CAEASinMovimientoConsultar(string strCAEA, int iPtoVta);
        [DispId(0x362)]
        bool F1CAEASinMovimientoInformar(int iPtoVta, string strCAEA);
        [DispId(0x363)]
        double F1ParamGetCotizacion(string strMonId);
        [DispId(0x364)]
        int F1CompUltimoAutorizado(int iPtoVta, int iCbteTipo);
        [DispId(0x365)]
        int F1CompTotXRequest();
        [DispId(870)]
        bool fxConsultarTiposComprobante();
        [DispId(0x367)]
        bool fxConsultarTiposDocumento();
        [DispId(0x368)]
        bool fxConsultarAlicutasIva();
        [DispId(0x369)]
        bool fxConsultarCondicionesIva();
        [DispId(0x36a)]
        bool fxConsultarUnidadesMedida();
        [DispId(0x36b)]
        bool fxConsultarPuntosVenta();
        [DispId(0x36c)]
        bool fxConsultarPuntosVentaCAE();
        [DispId(0x36d)]
        bool fxConsultarPuntosVentaCAEA();
        [DispId(0x36e)]
        bool fxConsultarMonedas();
        [DispId(0x36f)]
        bool fxConsultarTiposTributo();
        [DispId(880)]
        bool fxNoEspecificar(string strCampo, int nInformar);
        [DispId(0x371)]
        bool fxNoEspecificarItem(string strCampo, int nInformar);
        [DispId(0x372)]
        int fxConsultarUltimoComprobanteAutorizado(int iPtoVta, int iCbteTipo);
        [DispId(0x373)]
        bool fxConsultarComprobante(int iPtoVta, int iCbteTipo, int iCbteNro);
        [DispId(0x374)]
        bool fxAutorizarComprobante();
        [DispId(0x375)]
        bool fxInformarComprobanteCAEA();
        [DispId(0x376)]
        bool fxSolicitarCAEAS(string strPeriodo, string strOrden);
        [DispId(0x377)]
        bool fxSolicitarCAEA(int iPeriodo, int iOrden);
        [DispId(0x378)]
        bool fxConsultarCAEA(string strCAEA);
        [DispId(0x379)]
        bool fxInformarCAEANoUtilizado(string strCAEA);
        [DispId(890)]
        bool fxInformarCAEANoUtilizadoPtoVta(string strCAEA, int iPtoVta);
        [DispId(0x37b)]
        bool fxconsultarPtosVtaCAEANoInformados(string strCAEA);
        [DispId(0x37c)]
        bool fxConsultarCAEAEntreFechas(string strDesde, string strHasta);
        [DispId(0x37d)]
        bool ProxyConfigurar(bool lActivar);
    }

    [ClassInterface(ClassInterfaceType.None), ComClass("2400ac12-61ad-4999-89c8-c45fe0e9e447", "e0427e75-8757-422f-a419-12b10c49adcb", "300fa6e9-0a6a-4bbc-bf1a-5a425db36654"), Guid("2400ac12-61ad-4999-89c8-c45fe0e9e447")]
    public class Factura : _Factura
    {
        private bMoneda[] aBMoneda;
        private bProducto[] aBProducto;
        private bProductoItem[] abProductoItem;
        private bTipo_cbtes[] aBTipo_cpte;
        private bTipoDoc[] aBTipoDoc;
        private bTipoIva[] abTipoIva;
        private bUMed[] aBUMed;
        private bZonas[] abZona;
        private dFamilia[] adFamilia;
        private F1Detalle[] aF1Detalle;
        private F1DetalleCbtesAsoc[,] aF1DetalleCbtesAsoc = new F1DetalleCbtesAsoc[2, 2];
        private F1DetalleIva[,] aF1DetalleIva = new F1DetalleIva[2, 2];
        private F1DetalleOpcional[,] aF1DetalleOpcional = new F1DetalleOpcional[2, 2];
        private F1DetalleTributo[,] aF1DetalleTributo = new F1DetalleTributo[2, 2];
        private f1Error[] af1Error;
        private f1Event[] af1Event;
        private f1PtosVenta[] af1PtosVenta;
        private F1DetalleRespuesta[] aF1RespuestaDetalle;
        private F1DetalleRespuestaCAEA[] aF1RespuestaDetalleCAEA;
        private F1DetalleRespuestaObs[,] aF1RespuestaDetalleObs = new F1DetalleRespuestaObs[2, 2];
        private f1TiposCbte[] af1TiposCbte;
        private f1TiposConcepto[] af1TiposConcepto;
        private f1TiposDoc[] af1TiposDoc;
        private f1TiposIva[] af1TiposIva;
        private f1TiposMoneda[] af1TiposMoneda;
        private f1TiposOpcional[] af1TiposOpcional;
        private f1TiposTributo[] af1TiposTributo;
        private FEDetalle[] aFEDetalle;
        private FEDetalleRespuesta[] aFERespuestaDetalle;
        private fxCAEA[] aFxCAEAs;
        private fxComprobantesAsociados[] aFxComprobantesAsociados;
        private fxError[] afxError;
        private f1Event[] afxEvent;
        private fxItems[] aFxItems;
        private fxLista[] afxLista;
        private fxObservacion[] afxObervacion;
        private fxOtrosTributos[] aFxOtrosTributos;
        private FxDetalleRespuestaCAEA[] aFxRespuestaDetalleCAEA;
        private fxSubTotalesIva[] aFxSubTotalesIva;
        private gCosecha[] agCosecha;
        private gEspecie[] agEspecie;
        private gLocalidad[] agLocalidad;
        private gLocalidadTodas[] agLocalidadTodas;
        private gProvincia[] agProvincia;
        private sItem[] asItem;
        private sMoneda[] aSMoneda;
        private sTipo_cbtes[] aSTipo_cpte;
        private sTipoDoc[] asTipoDoc;
        private sTipoIva[] asTipoIva;
        private xCmps_asoc[] axCmps_asocs;
        private xIdioma[] axIdioma;
        private xIncotermss[] axIncoTerms;
        private xItem[] axItems;
        private xMoneda[] axMoneda;
        private xPais[] axPais;
        private xPaisCuit[] axPaisCuit;
        private xPermisos[] axPermisos;
        private xPtoVenta[] axPtoVenta;
        private xTipo_cbtes[] axTipo_cbte;
        private xTipo_expos[] axTipo_expo;
        private xUMed[] axUMed;
        private bool bbTicketValido;
        internal const string bDireccionServicioTest = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
        private bool bdTicketValido;
        private bool bf1TicketValido;
        private bool bfxTicketValido;
        private bool bgTicketValido;
        private bool bmTicketValido;
        private bool boTicketValido;
        private bool bsTicketValido;
        private bool bxTicketValido;
        private string cbDireccionServicio = "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL";
        private string cbDireccionServicioURL = "https://servicios1.afip.gov.ar/wsbfe/service.asmx";
        private Collection ccfxNoEspecificar;
        private string cDireccionServicio = "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL";
        private string cDireccionServicioURL = "https://servicios1.afip.gov.ar/wsfe/service.asmx";
        private string cf1DireccionServicio = "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL";
        private string cf1DireccionServicioURL = "https://servicios1.afip.gov.ar/wsfev1/service.asmx";
        private string cfxDireccionServicio = "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL";
        private string cfxDireccionServicioURL = "https://serviciosjava.afip.gob.ar/wsmtxca/services/MTXCAService";
        public const string ClassId = "2400ac12-61ad-4999-89c8-c45fe0e9e447";
        private string csDireccionServicio = "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL";
        private string csDireccionServicioURL = "https://servicios1.afip.gov.ar/wsseg/service.asmx";
        private string cxDireccionServicio = "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL";
        private string cxDireccionServicioURL = "https://servicios1.afip.gov.ar/wsfex/service.asmx";
        internal const string dDireccionServicio = "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL";
        internal const string dDireccionServicioTest = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
        private DateTime dfxFechaEmision;
        private DateTime dfxFechaServicioDesde;
        private DateTime dfxFechaServicioHasta;
        private DateTime dfxFechaVencimiento;
        private DateTime dfxFechaVencimientoPago;
        private DateTime dfxRespuestaFechaEmision;
        private DateTime dfxRespuestaFechaVencimientoCAE;
        internal const string DireccionServicioTest = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
        internal const string dNombreServicio = "wDigDepFiel";
        public const string EventsId = "300fa6e9-0a6a-4bbc-bf1a-5a425db36654";
        internal const string f1DireccionServicio = "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL";
        internal const string f1DireccionServicioTest = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
        internal const string f1NombreServicio = "wsfe";
        internal const string fxDireccionServicio = "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL";
        internal const string fxNombreServicio = "wsmtxca";
        internal const string gDireccionServicio = "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL";
        internal const string gDireccionServicioTest = "https://fwshomo.afip.gov.ar/wsctg/services/CTGService?wsdl";
        private int giCTGCantHoras;
        private int giCTGcodigoLocalidadDestino;
        private int giCTGcodigoLocalidadOrigen;
        private long glCTGCUITDestinatario;
        private long glCTGCUITDestino;
        private long glCTGCUITRemitenteComercial;
        private long glCTGCUITRepresentado;
        private long glCTGCUITTransportista;
        private long glCTGNumeroCartaPorte;
        private long glCTGpesoNetoCarga;
        private long glRespuestaCodigoTransaccion;
        private long glRespuestaNumeroCartaPorte;
        private long glRespuestaNumeroCTG;
        internal const string gNombreServicio = "wsctg";
        private string gstrCTGCodigoCosecha;
        private string gstrCTGCodigoEspecie;
        private string gstrCTGPatenteVehiculo;
        private string gstrErrorCodigo;
        private string gstrErrorMensaje;
        private string gstrRespuestaObservaciones;
        private int ibCbte_numero;
        private int iberrcode;
        private int iBEventCode;
        private double ibimp_iibb;
        private double ibImp_internos;
        private double ibImp_moneda_ctz;
        private string ibImp_moneda_id;
        private double ibimp_neto;
        private double ibimp_op_ex;
        private double ibImp_perc;
        private double ibImp_perc_mun;
        private double ibimp_total;
        private double ibimp_total_conc;
        private double ibimpto_liq;
        private double ibimpto_liq_rni;
        private int ibMonedaItemCantidad;
        private int ibProductoItemCantidad;
        private int ibpunto_vta;
        private int ibRespuestaCbte_numero;
        private long ibRespuestaId;
        private int ibtipo_cbte;
        private int ibTipo_CbteItemCantidad;
        private int iBtipo_doc;
        private int ibTipoDocItemCantidad;
        private int ibTipoIvaItemCantidad;
        private int ibUMedItemCantidad;
        private int ibZona;
        private int ibZonaItemCantidad;
        private int idCantidadTotal;
        private int idFamiliaItemCantidad;
        private int iF1CabeceraCantReg;
        private int iF1CabeceraCbteTipo;
        private int iF1CabeceraPtoVta;
        private int if1ErrorItemCantidad;
        private int if1EventItemCantidad;
        private int if1Indice;
        private int if1PtosVentaItemCantidad;
        private int iF1RespuestaCAEAItemCantidad;
        private int iF1RespuestaCAEAOrden;
        private int iF1RespuestaCAEAPeriodo;
        private int iF1RespuestaCAEAPtoVta;
        private double iF1RespuestaMonedaCotiz;
        private int iF1RespuetaCantidadReg;
        private int if1TiposCbteItemCantidad;
        private int if1TiposConceptoItemCantidad;
        private int if1TiposDocItemCantidad;
        private int if1TiposIvaItemCantidad;
        private int if1TiposMonedaItemCantidad;
        private int if1TiposOpcionalItemCantidad;
        private int if1TiposTributoItemCantidad;
        private int iFECabeceraCantReg;
        private int iFECabeceraPresta_serv;
        private int iFERespuestaCantidadReg;
        private int iFERespuestaPresta_serv;
        private int ifxCAEAItemCantidad;
        private int ifxCodigoConcepto;
        private string ifxCodigoTipoAutorizacion;
        private int ifxCodigoTipoComprobante;
        private int ifxCodigoTipoDocumento;
        private int ifxComprobantesAsociadosItemCantidad;
        private double ifxCotizacionMoneda;
        private int ifxErrorItemCantidad;
        private int ifxEventItemCantidad;
        private int ifxItemsCantidad;
        private int ifxListaItemCantidad;
        private int ifxObervacionItemCantidad;
        private int ifxOtrosTributosItemCantidad;
        private int ifxPuntoVenta;
        private int iFxRespuestaCAEAItemCantidad;
        private int ifxRespuestaCodigoTipoComprobante;
        private int ifxRespuestaNumeroPuntoVenta;
        private int ifxSubTotalesIvaItemCantidad;
        private int igCosechaItemCantidad;
        private int igEspecieItemCantidad;
        private int igLocalidadItemCantidad;
        private int igLocalidadTodasItemCantidad;
        private int igProvinciaItemCantidad;
        private int iIndice;
        private int iIndiceItem;
        private int iItemCantidad;
        private modoFiscal iModo = modoFiscal.Test;
        public const string InterfaceId = "e0427e75-8757-422f-a419-12b10c49adcb";
        private int iPaso;
        private int iPerCode;
        private int isCbte_numero;
        private int iserrcode;
        private int isEventCode;
        private double isimp_iibb;
        private double isImp_internos;
        private double isImp_moneda_ctz;
        private string isImp_moneda_id;
        private double isimp_neto;
        private double isimp_op_ex;
        private double isImp_otrib_prov;
        private double isImp_perc;
        private double isImp_perc_mun;
        private double isimp_total;
        private double isimp_total_conc;
        private double isimpto_liq;
        private double isimpto_liq_rni;
        private int isMonedaItemCantidad;
        private int ispunto_vta;
        private int isRespuestaCbte_numero;
        private long isRespuestaId;
        private int istipo_cbte;
        private int isTipo_CbteItemCantidad;
        private int istipo_doc;
        private int isTipoDocItemCantidad;
        private int isTipoIvaItemCantidad;
        private int iTimeOut = 0;
        private int iUltimoNumeroError = 0;
        private long ixCbte_nro;
        private int ixCmps_asocCantidad;
        private long ixCuit_pais_cliente;
        private int ixCuitItemCantidad;
        private int ixDst_cmp;
        private int ixerrcode;
        private int ixEventCode;
        private int ixIdiomaItemCantidad;
        private double ixImp_total;
        private int ixIncoTermsItemCantidad;
        private int ixItemCantidad;
        private double ixMoneda_ctz;
        private int ixMonedaItemCantidad;
        private int ixPaisItemCantidad;
        private int ixPermisoCantidad;
        private int ixPermisoNoInformar;
        private int ixPtoVentaItemCantidad;
        private int ixPunto_venta;
        private long ixRespuestaCbte_numero;
        private long ixRespuestaId;
        private int ixRespuestaPunto_vta;
        private int ixRespuestaTipo_cbte;
        private int ixTipo_cbte;
        private int ixTipo_CbteItemCantidad;
        private int ixTipo_expo;
        private int ixTipo_expoItemCantidad;
        private int ixUMedItemCantidad;
        private long lbnro_doc;
        private long lfxCodigoAutorizacion;
        private long lfxNumeroComprobante;
        private long lfxNumeroDocumento;
        private long lfxRespuestaCAE;
        private long lfxRespuestaCUIT;
        private long lfxRespuestaNumeroComprobante;
        private long lsnro_doc;
        private bool lTicketValido;
        internal const string mDireccionServicio = "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL";
        internal const string mDireccionServicioTest = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
        internal const string mNombreServicio = "mtxca";
        private double nfxImporteExento;
        private double nfxImporteGravado;
        private double nfxImporteNoGravado;
        private double nfxImporteOtrosTributos;
        private double nfxImporteSubtotal;
        private double nfxImporteTotal;
        private double nxRespuestaMonedaCtz;
        internal const string oDireccionServicioTest = "https://fwshomo.afip.gov.ar/wsoncca/services/ServiciosONCCA?wsdl";
        private SClicencia oLicencia;
        internal const string oNombreServicio = "wsoncca";
        internal const int PermisoDigDepFiel = 0x100;
        internal const int PermisoWSBFE = 4;
        internal const int PermisoWSCTG = 0x40;
        internal const int PermisoWSFE = 2;
        internal const int PermisoWSFELote = 0x10;
        internal const int PermisoWSFEv1cae = 0x800;
        internal const int PermisoWSFEv1caea = 0x1000;
        internal const int PermisoWSFEX = 0x20;
        internal const int PermisoWSMTXCAcae = 0x200;
        internal const int PermisoWSMTXCAcaea = 0x400;
        internal const int PermisoWSONCCA = 0x80;
        internal const int PermisoWSSEG = 8;
        internal const string sDireccionServicio = "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL";
        internal const string sDireccionServicioTest = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
        internal const string sNombreServicio = "wsseg";
        private string strArchivoXMLEnviado;
        private string strArchivoXMLError;
        private string strArchivoXMLRecibido;
        private string strBCuit;
        private string strberrmsg;
        private string strBEventMsg;
        private string strbFecha_cae;
        private string strbFecha_cbte;
        private string strBFecha_cbte_cae;
        private string strbFecha_cbte_orig;
        private string strbRespuestaCAE;
        private string strbRespuestaCUIT;
        private string strbRespuestaDummyAppServer;
        private string strbRespuestaDummyAuthServer;
        private string strbRespuestaDummyDbServer;
        private string strbRespuestaFch_cbte;
        private string strbRespuestafch_venc_cae;
        private string strbRespuestaObs;
        private string strbRespuestaReProceso;
        private string strbRespuestaResultado;
        private string strbServicio = "wsbfe";
        private string strBSign;
        private string strBToken;
        private string strCuit = "";
        private string strdCodigo;
        private string strdCuit;
        private string strdCuitATA;
        private string strdCuitDeclarante;
        private string strdCuitIE;
        private string strdCuitPSad;
        private DateTime strdFechaHoraAcept;
        private string strdHashing;
        private string strdNroLegajo;
        private int strdRespuestaCodError;
        private string strdRespuestaDescError;
        private string strdRespuestaDummyAppServer;
        private string strdRespuestaDummyAuthServer;
        private string strdRespuestaDummyDbServer;
        private string strdRol;
        private string strdSign;
        private string strdTicket;
        private string strdTipoAgente;
        private string strdToken;
        private string strdURL;
        private string strf1Cuit;
        private string strF1RespuestaCAEA;
        private string strF1RespuestaCAEAFchProceso;
        private string strF1RespuestaCAEAFchTopeInf;
        private string strF1RespuestaCAEAFchVigDesde;
        private string strF1RespuestaCAEAFchVigHasta;
        private string strf1RespuestaDummyAppServer;
        private string strf1RespuestaDummyAuthServer;
        private string strf1RespuestaDummyDbServer;
        private string strF1RespuestaFchProceso;
        private string strF1RespuestaMonedaFchCotiz;
        private string strF1RespuestaMonedaId;
        private string strF1RespuestaReProceso;
        private string strF1RespuestaResultado;
        private string strf1Servicio = "wsfev1";
        private string strf1Sign;
        private string strf1Token;
        private string strFERespuestaFecha_cae;
        private string strFERespuestaMotivo;
        private string strFERespuestaReproceso;
        private string strFERespuestaResultado;
        private string strfxCodigoMoneda;
        private string strfxCuit;
        private string strfxObservaciones;
        private string strfxRespuestaDummyAppServer;
        private string strfxRespuestaDummyAuthServer;
        private string strfxRespuestaDummyDbServer;
        private string strfxRespuestaResultado;
        private string strfxServicio = "wsmtxca";
        private string strfxSign;
        private string strfxToken;
        private string strgCuit;
        private string strgRespuestaDummyAppServer;
        private string strgRespuestaDummyAuthServer;
        private string strgRespuestaDummyDbServer;
        private string strgSign;
        private string strgToken;
        private string strmCuit;
        private string strmRespuestaDummyAppServer;
        private string strmRespuestaDummyAuthServer;
        private string strmRespuestaDummyDbServer;
        private string strmSign;
        private string strmToken;
        private string stroCuit;
        private string stroRespuestaDummyAppServer;
        private string stroRespuestaDummyAuthServer;
        private string stroRespuestaDummyDbServer;
        private string stroSign;
        private string stroToken;
        private string strPermsg;
        private string strProxyDomain;
        private string strProxyHost;
        private int strProxyPort;
        private string strProxyUserName;
        private string strProxyUserPassword;
        private string strRespuestaDummyAppServer;
        private string strRespuestaDummyAuthServer;
        private string strRespuestaDummyDbServer;
        private string strRutaArthivoCertificado;
        private string strsCuit;
        private string strserrmsg;
        private string strServicio = "wsfe";
        private string strsEventMsg;
        private string strsFecha_cae;
        private string strsFecha_cbte;
        private string strsFecha_cbte_cae;
        private string strsFecha_cbte_orig;
        private string strSign;
        private string strsRespuestaCAE;
        private string strsRespuestaCUIT;
        private string strsRespuestaDummyAppServer;
        private string strsRespuestaDummyAuthServer;
        private string strsRespuestaDummyDbServer;
        private string strsRespuestaFch_cbte;
        private string strsRespuestafch_venc_cae;
        private string strsRespuestaObs;
        private string strsRespuestaReProceso;
        private string strsRespuestaResultado;
        private string strsServicio = "wsseg";
        private string strsSign;
        private string strsToken;
        private string strToken;
        private string strUltimaRespuestaXML;
        private string strUltimoMensajeError = "";
        private string strUltimoPedidoFirmadoXML;
        private string strUltimoPedidoXML;
        private string strxCliente;
        private string strXCuit;
        private string strxDomicilio_cliente;
        private string strxerrmsg;
        private string strxEventMsg;
        private string strxFecha_cbte;
        private string strxFecha_cbte_cae;
        private string strxForma_pago;
        private string strxId_impositivo;
        private string strxIdioma_cbte;
        private string strxIncoterm_ds;
        private string strxIncoterms;
        private string strxMoneda_Id;
        private string strxObs;
        private string strxObs_comerciales;
        private string strxPermiso_existente;
        private string strxRespuestaCAE;
        private long strxRespuestaCuit;
        private string strxRespuestaDummyAppServer;
        private string strxRespuestaDummyAuthServer;
        private string strxRespuestaDummyDbServer;
        private string strxRespuestaFch_cbte;
        private string strxRespuestaFch_cbte_cae;
        private string strxRespuestaFch_vence_cae;
        private string strxRespuestaMonedaCtzFecha;
        private string strxRespuestaMotivos_obs;
        private string strxRespuestaReproceso;
        private string strxRespuestaResultado;
        private string strxServicio = "wsfex";
        private string strXSign;
        private string strXToken;
        private DateTime tbTicketHora;
        private DateTime tbTicketHoraVencimiento;
        private DateTime tdTicketHora;
        private DateTime tdTicketHoraVencimiento;
        private DateTime tf1TicketHora;
        private DateTime tf1TicketHoraVencimiento;
        private DateTime tfxTicketHora;
        private DateTime tfxTicketHoraVencimiento;
        private DateTime tgTicketHora;
        private DateTime tgTicketHoraVencimiento;
        private DateTime tmTicketHora;
        private DateTime tmTicketHoraVencimiento;
        private DateTime toTicketHora;
        private DateTime toTicketHoraVencimiento;
        private DateTime tsTicketHora;
        private DateTime tsTicketHoraVencimiento;
        private DateTime tTicketHora;
        private DateTime tTicketHoraVencimiento;
        private DateTime txTicketHora;
        private DateTime txTicketHoraVencimiento;
        private long uFERespuestaCuit;
        private long uFERespuestaId;
        private long uIdentificador;
        internal const string xDireccionServicio = "https://wsaa.afip.gov.ar/ws/services/LoginCms?WSDL";
        internal const string xDireccionServicioTest = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
        internal const string xNombreServicio = "wsfex";

        public Factura()
        {
            this.RutaArchivoCertificado = "";
            this.lTicketValido = false;
            this.iIndice = 0;
            this.lTicketValido = false;
            this.bbTicketValido = false;
        }

        public bool ActivarLicencia(string cuitTexto, string textoRutaArchivoLicencia, string strGMail, string strPassword)
        {
            bool bResultado = false;
            try
            {
                SCActivador Activador = new SCActivador();
                if (Activador.TestConexion(strGMail.Trim(), strPassword.Trim()))
                {
                    if (Activador.ConectarPermisos())
                    {
                        if (Activador.activar(cuitTexto))
                        {
                            if (Conversions.ToBoolean(Activador.DescargarLicencia(cuitTexto, textoRutaArchivoLicencia)))
                            {
                                bResultado = true;
                                this.strCuit = cuitTexto;
                                return bResultado;
                            }
                            this.iUltimoNumeroError = Activador.UltimoNumeroError;
                            this.strUltimoMensajeError = "fallo descargar licencia-" + Activador.UltimoMensajeError;
                            return bResultado;
                        }
                        this.iUltimoNumeroError = Activador.UltimoNumeroError;
                        this.strUltimoMensajeError = "fallo activacion-" + Activador.UltimoMensajeError;
                        return bResultado;
                    }
                    this.iUltimoNumeroError = Activador.UltimoNumeroError;
                    this.strUltimoMensajeError = "fallo permisos-" + Activador.UltimoMensajeError;
                    return bResultado;
                }
                this.iUltimoNumeroError = Activador.UltimoNumeroError;
                this.strUltimoMensajeError = "fallo conexi\x00f3n-" + Activador.UltimoMensajeError;
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                Exception ex = exception1;
                this.iUltimoNumeroError = 7;
                this.strUltimoMensajeError = ex.Message;
                ProjectData.ClearProjectError();
            }
            return bResultado;
        }

        public bool ActivarLicenciaSiNoExiste(string cuitTexto, string textoRutaArchivoLicencia, string strGMail, string strPassword)
        {
            bool bResultado = false;
            if (this.LeerLicencia(textoRutaArchivoLicencia) && (((this.LicenciaCodigo == strGMail.Replace("@", ".")) & (this.LicenciaDatos == cuitTexto)) & this.get_LicenciaFechaValida(DateAndTime.Today)))
            {
                bResultado = true;
            }
            if (!bResultado && (strGMail != ""))
            {
                bResultado = this.ActivarLicencia(cuitTexto, textoRutaArchivoLicencia, strGMail, strPassword);
                if (bResultado)
                {
                    bResultado = this.LeerLicencia(textoRutaArchivoLicencia);
                }
            }
            return bResultado;
        }

        public bool BDummy()
        {
            bool bResultado = true;
            this.strRespuestaDummyDbServer = "";
            this.strRespuestaDummyAuthServer = "";
            this.strRespuestaDummyDbServer = "";
            if (this.Modo == modoFiscal.Test)
            {
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.bAFIPTest.Service servicio = new WSAFIPFE.bAFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.bAFIPTest.DummyResponse oRespuesta = servicio.BFEDummy();
                        this.strbRespuestaDummyDbServer = oRespuesta.DbServer;
                        this.strbRespuestaDummyAuthServer = oRespuesta.AuthServer;
                        this.strbRespuestaDummyAppServer = oRespuesta.AppServer;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 6;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            if (bResultado)
            {
                WSAFIPFE.bAFIP.DummyResponse oRespuesta = null;
                try
                {
                    WSAFIPFE.bAFIP.Service servicio = new WSAFIPFE.bAFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.bDireccionServicioURL;
                    oRespuesta = servicio.BFEDummy();
                    this.strbRespuestaDummyDbServer = oRespuesta.DbServer;
                    this.strbRespuestaDummyAuthServer = oRespuesta.AuthServer;
                    this.strbRespuestaDummyAppServer = oRespuesta.AppServer;
                }
                catch (Exception exception2)
                {
                    ProjectData.SetProjectError(exception2);
                    Exception ex = exception2;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 6;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (this.ArchivoXMLRecibido == "")
                {
                    return bResultado;
                }
                try
                {
                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.bAFIP.DummyResponse));
                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                    writer1.Serialize((TextWriter) file1, oRespuesta);
                    file1.Close();
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception miEx = exception3;
                    this.strArchivoXMLError = miEx.Message;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        public bool bFEAutorize(int nPuntoVenta, int nTipoComprobante, string cIdentificador, int nNumero)
        {
            return this.bRegistrarConNumero(nPuntoVenta, nTipoComprobante, cIdentificador, nNumero);
        }

        public bool bFEGetCMP(int nPuntoVenta, int nTipoComprobante, int nNumeroComprobante)
        {
            int nContador;
            this.iberrcode = 0;
            this.strberrmsg = "";
            bool bResultado = true;
            this.iBEventCode = 0;
            this.strBEventMsg = "";
            if (this.Modo == modoFiscal.Test)
            {
                if (!this.BTicketValido)
                {
                    return false;
                }
                WSAFIPFE.bAFIPTest.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIPTest.ClsBFEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.btoken;
                    autorizacion.Sign = this.bsign;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.iUltimoNumeroError = 520;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.bAFIPTest.Service servicio = new WSAFIPFE.bAFIPTest.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    WSAFIPFE.bAFIPTest.ClsBFEGetCMP oPedido = new WSAFIPFE.bAFIPTest.ClsBFEGetCMP();
                    oPedido.Cbte_nro = nNumeroComprobante;
                    oPedido.Punto_vta = nPuntoVenta;
                    oPedido.Tipo_cbte = (short) nTipoComprobante;
                    WSAFIPFE.bAFIPTest.BFEGetCMPResponse oRespuesta = servicio.BFEGetCMP(autorizacion, oPedido);
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.strUltimoMensajeError = "sin respuesta ";
                        this.iUltimoNumeroError = 0x207;
                        return bResultado;
                    }
                    this.strUltimoMensajeError = oRespuesta.BFEErr.ErrMsg;
                    this.iberrcode = oRespuesta.BFEErr.ErrCode;
                    this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                    this.iberrcode = oRespuesta.BFEEvents.EventCode;
                    this.strberrmsg = oRespuesta.BFEEvents.EventMsg;
                    this.iUltimoNumeroError = 520;
                    this.bItemCantidad = 0;
                    this.strbRespuestaCAE = "";
                    if (oRespuesta.BFEResultGet != null)
                    {
                        this.bNro_doc = oRespuesta.BFEResultGet.Nro_doc.ToString();
                        this.bFecha_cbte = oRespuesta.BFEResultGet.Fecha_cbte_orig;
                        this.bFecha_cae = oRespuesta.BFEResultGet.Fch_venc_Cae;
                        this.bFecha_cbte_orig = oRespuesta.BFEResultGet.Fecha_cbte_orig;
                        this.bFecha_cbte_cae = oRespuesta.BFEResultGet.Fecha_cbte_cae;
                        this.bImp_iibb = oRespuesta.BFEResultGet.Imp_iibb;
                        this.bImp_internos = oRespuesta.BFEResultGet.Imp_internos;
                        this.bImp_moneda_id = oRespuesta.BFEResultGet.Imp_moneda_Id;
                        this.bImp_moneda_ctz = oRespuesta.BFEResultGet.Imp_moneda_ctz;
                        this.bImp_neto = oRespuesta.BFEResultGet.Imp_neto;
                        this.bimp_op_ex = oRespuesta.BFEResultGet.Imp_op_ex;
                        this.bImp_perc = oRespuesta.BFEResultGet.Imp_perc;
                        this.bImp_perc_mun = oRespuesta.BFEResultGet.Imp_perc_mun;
                        this.bImp_total = oRespuesta.BFEResultGet.Imp_total;
                        this.bImp_total_conc = oRespuesta.BFEResultGet.Imp_tot_conc;
                        this.bimpto_liq = oRespuesta.BFEResultGet.Impto_liq;
                        this.bimpto_liq_rni = oRespuesta.BFEResultGet.Impto_liq_rni;
                        this.bPunto_vta = oRespuesta.BFEResultGet.Punto_vta;
                        this.bTipo_Doc = oRespuesta.BFEResultGet.Tipo_doc;
                        this.bcbte_nro = (int) oRespuesta.BFEResultGet.Cbte_nro;
                        this.strbRespuestaCUIT = oRespuesta.BFEResultGet.Cuit.ToString();
                        this.strbRespuestaCAE = oRespuesta.BFEResultGet.Cae;
                        this.strbRespuestaFch_cbte = oRespuesta.BFEResultGet.Fecha_cbte_orig;
                        this.strbRespuestafch_venc_cae = oRespuesta.BFEResultGet.Fch_venc_Cae;
                        this.strbRespuestaObs = oRespuesta.BFEResultGet.Obs;
                        this.strbRespuestaResultado = oRespuesta.BFEResultGet.Resultado;
                        this.ibRespuestaCbte_numero = (int) oRespuesta.BFEResultGet.Cbte_nro;
                        if (oRespuesta.BFEResultGet.Items == null)
                        {
                            this.bItemCantidad = 0;
                            this.abProductoItem = new bProductoItem[1];
                            bResultado = false;
                        }
                        else
                        {
                            this.bItemCantidad = oRespuesta.BFEResultGet.Items.Length - 1;
                            int value = this.bItemCantidad;
                            this.abProductoItem = new bProductoItem[(value - 1) + 1];
                            int VB_t_i4_L0 = this.bItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                            {
                                this.IndiceItem = nContador;
                                this.bITEMimp_bonif = oRespuesta.BFEResultGet.Items[nContador].Imp_bonif;
                                this.bITEMimp_total = oRespuesta.BFEResultGet.Items[nContador].Imp_total;
                                this.bITEMIva_id = oRespuesta.BFEResultGet.Items[nContador].Iva_id;
                                this.bITEMpro_codigo_ncm = oRespuesta.BFEResultGet.Items[nContador].Pro_codigo_ncm;
                                this.bITEMpro_codigo_sec = oRespuesta.BFEResultGet.Items[nContador].Pro_codigo_sec;
                                this.bITEMpro_ds = oRespuesta.BFEResultGet.Items[nContador].Pro_ds;
                                this.bITEMpro_precio_uni = oRespuesta.BFEResultGet.Items[nContador].Pro_precio_uni;
                                this.bITEMpro_qty = oRespuesta.BFEResultGet.Items[nContador].Pro_qty;
                                this.bITEMpro_umed = oRespuesta.BFEResultGet.Items[nContador].Pro_umed;
                            }
                        }
                    }
                    else
                    {
                        bResultado = false;
                    }
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.bAFIP.BFEGetCMPResponse));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception miEx = exception2;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                }
                return bResultado;
            }
            if (!this.BTicketValido)
            {
                return false;
            }
            WSAFIPFE.bAFIP.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIP.ClsBFEAuthRequest();
            try
            {
                autorizacion.Cuit = Conversions.ToLong(this.cuit);
                autorizacion.Token = this.btoken;
                autorizacion.Sign = this.bsign;
            }
            catch (Exception exception3)
            {
                ProjectData.SetProjectError(exception3);
                Exception ex = exception3;
                this.iUltimoNumeroError = 520;
                this.strUltimoMensajeError = ex.Message;
                bResultado = false;
                ProjectData.ClearProjectError();
            }
            if (bResultado)
            {
                WSAFIPFE.bAFIP.Service servicio = new WSAFIPFE.bAFIP.Service();
                if (this.ProxyUserName != "")
                {
                    NetworkCredential cr = new NetworkCredential();
                    WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                    cr.Domain = this.ProxyDomain;
                    cr.Password = this.ProxyUserPassword;
                    cr.UserName = this.ProxyUserName;
                    pr.Credentials = cr;
                    servicio.Proxy = pr;
                }
                servicio.Url = this.bDireccionServicioURL;
                WSAFIPFE.bAFIP.ClsBFEGetCMP oPedido = new WSAFIPFE.bAFIP.ClsBFEGetCMP();
                oPedido.Cbte_nro = nNumeroComprobante;
                oPedido.Punto_vta = nPuntoVenta;
                oPedido.Tipo_cbte = (short) nTipoComprobante;
                WSAFIPFE.bAFIP.BFEGetCMPResponse oRespuesta = servicio.BFEGetCMP(autorizacion, oPedido);
                if (oRespuesta == null)
                {
                    bResultado = false;
                    this.strUltimoMensajeError = "sin respuesta ";
                    this.iUltimoNumeroError = 0x207;
                    return bResultado;
                }
                this.strUltimoMensajeError = oRespuesta.BFEErr.ErrMsg;
                this.iberrcode = oRespuesta.BFEErr.ErrCode;
                this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                this.iberrcode = oRespuesta.BFEEvents.EventCode;
                this.strberrmsg = oRespuesta.BFEEvents.EventMsg;
                this.iUltimoNumeroError = 520;
                this.bItemCantidad = 0;
                this.strbRespuestaCAE = "";
                if (oRespuesta.BFEResultGet != null)
                {
                    this.bNro_doc = oRespuesta.BFEResultGet.Nro_doc.ToString();
                    this.bFecha_cae = oRespuesta.BFEResultGet.Fch_venc_Cae;
                    this.bFecha_cbte = oRespuesta.BFEResultGet.Fecha_cbte_orig;
                    this.bFecha_cbte_orig = oRespuesta.BFEResultGet.Fecha_cbte_orig;
                    this.bFecha_cbte_cae = oRespuesta.BFEResultGet.Fecha_cbte_cae;
                    this.bImp_iibb = oRespuesta.BFEResultGet.Imp_iibb;
                    this.bImp_internos = oRespuesta.BFEResultGet.Imp_internos;
                    this.bImp_moneda_id = oRespuesta.BFEResultGet.Imp_moneda_Id;
                    this.bImp_moneda_ctz = oRespuesta.BFEResultGet.Imp_moneda_ctz;
                    this.bImp_neto = oRespuesta.BFEResultGet.Imp_neto;
                    this.bimp_op_ex = oRespuesta.BFEResultGet.Imp_op_ex;
                    this.bImp_perc = oRespuesta.BFEResultGet.Imp_perc;
                    this.bImp_perc_mun = oRespuesta.BFEResultGet.Imp_perc_mun;
                    this.bImp_total = oRespuesta.BFEResultGet.Imp_total;
                    this.bImp_total_conc = oRespuesta.BFEResultGet.Imp_tot_conc;
                    this.bimpto_liq = oRespuesta.BFEResultGet.Impto_liq;
                    this.bimpto_liq_rni = oRespuesta.BFEResultGet.Impto_liq_rni;
                    this.bPunto_vta = oRespuesta.BFEResultGet.Punto_vta;
                    this.bTipo_Doc = oRespuesta.BFEResultGet.Tipo_doc;
                    this.bcbte_nro = (int) oRespuesta.BFEResultGet.Cbte_nro;
                    this.strbRespuestaCUIT = oRespuesta.BFEResultGet.Cuit.ToString();
                    this.strbRespuestaCAE = oRespuesta.BFEResultGet.Cae;
                    this.strbRespuestaFch_cbte = oRespuesta.BFEResultGet.Fecha_cbte_orig;
                    this.strbRespuestafch_venc_cae = oRespuesta.BFEResultGet.Fecha_cbte_cae;
                    this.strbRespuestaObs = oRespuesta.BFEResultGet.Obs;
                    this.strbRespuestaResultado = oRespuesta.BFEResultGet.Resultado;
                    this.ibRespuestaCbte_numero = (int) oRespuesta.BFEResultGet.Cbte_nro;
                    if (oRespuesta.BFEResultGet.Items == null)
                    {
                        this.bItemCantidad = 0;
                        this.abProductoItem = new bProductoItem[1];
                        bResultado = false;
                    }
                    else
                    {
                        this.bItemCantidad = oRespuesta.BFEResultGet.Items.Length - 1;
                        int value = this.bItemCantidad;
                        this.abProductoItem = new bProductoItem[(value - 1) + 1];
                        int VB_t_i4_L1 = this.bItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                        {
                            this.IndiceItem = nContador;
                            this.bITEMimp_bonif = oRespuesta.BFEResultGet.Items[nContador].Imp_bonif;
                            this.bITEMimp_total = oRespuesta.BFEResultGet.Items[nContador].Imp_total;
                            this.bITEMIva_id = oRespuesta.BFEResultGet.Items[nContador].Iva_id;
                            this.bITEMpro_codigo_ncm = oRespuesta.BFEResultGet.Items[nContador].Pro_codigo_ncm;
                            this.bITEMpro_codigo_sec = oRespuesta.BFEResultGet.Items[nContador].Pro_codigo_sec;
                            this.bITEMpro_ds = oRespuesta.BFEResultGet.Items[nContador].Pro_ds;
                            this.bITEMpro_precio_uni = oRespuesta.BFEResultGet.Items[nContador].Pro_precio_uni;
                            this.bITEMpro_qty = oRespuesta.BFEResultGet.Items[nContador].Pro_qty;
                            this.bITEMpro_umed = oRespuesta.BFEResultGet.Items[nContador].Pro_umed;
                        }
                    }
                }
                else
                {
                    bResultado = false;
                }
                if (this.ArchivoXMLRecibido != "")
                {
                    try
                    {
                        XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.bAFIP.BFEGetCMPResponse));
                        StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                        writer1.Serialize((TextWriter) file1, oRespuesta);
                        file1.Close();
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception miEx = exception4;
                        this.strArchivoXMLError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                }
            }
            return bResultado;
        }

        public int BFEGetLastCMP(int nPuntoVenta, int nTipoComprobante)
        {
            bool bResultado = true;
            int nResultado = 0;
            this.iberrcode = 0;
            this.strberrmsg = "";
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            if (this.BTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.bAFIPTest.ClsBFE_LastCMP oparametro = new WSAFIPFE.bAFIPTest.ClsBFE_LastCMP();
                            oparametro.Cuit = Conversions.ToLong(this.cuit);
                            oparametro.Pto_venta = (short) nPuntoVenta;
                            oparametro.Sign = this.bsign;
                            oparametro.Tipo_cbte = (short) nTipoComprobante;
                            oparametro.Token = this.btoken;
                            WSAFIPFE.bAFIPTest.Service servicio = new WSAFIPFE.bAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.bAFIPTest.BFEResponseLast_CMP oRespuesta = servicio.BFEGetLast_CMP(oparametro);
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            this.iUltimoNumeroError = oRespuesta.BFEErr.ErrCode;
                            this.strUltimoMensajeError = oRespuesta.BFEErr.ErrMsg;
                            nResultado = (int) oRespuesta.BFEResult_LastCMP.Cbte_nro;
                        }
                        catch (Exception exception1)
                        {
                            ProjectData.SetProjectError(exception1);
                            Exception ex = exception1;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x206;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return nResultado;
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.bAFIP.ClsBFE_LastCMP oparametro = new WSAFIPFE.bAFIP.ClsBFE_LastCMP();
                        oparametro.Cuit = Conversions.ToLong(this.cuit);
                        oparametro.Pto_venta = (short) nPuntoVenta;
                        oparametro.Sign = this.bsign;
                        oparametro.Tipo_cbte = (short) nTipoComprobante;
                        oparametro.Token = this.btoken;
                        WSAFIPFE.bAFIP.Service servicio = new WSAFIPFE.bAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.bDireccionServicioURL;
                        WSAFIPFE.bAFIP.BFEResponseLast_CMP oRespuesta = servicio.BFEGetLast_CMP(oparametro);
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        this.iUltimoNumeroError = oRespuesta.BFEErr.ErrCode;
                        this.strUltimoMensajeError = oRespuesta.BFEErr.ErrMsg;
                        nResultado = (int) oRespuesta.BFEResult_LastCMP.Cbte_nro;
                    }
                    catch (Exception exception2)
                    {
                        ProjectData.SetProjectError(exception2);
                        Exception ex = exception2;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x206;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return nResultado;
            }
            bResultado = false;
            return nResultado;
        }

        public string BFEGetLastId()
        {
            bool bResultado = true;
            string cResultado = "";
            this.strberrmsg = "";
            this.iberrcode = 0;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            if (this.BTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.bAFIPTest.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIPTest.ClsBFEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.btoken;
                        autorizacion.Sign = this.bsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x38;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.bAFIPTest.Service servicio = new WSAFIPFE.bAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.bAFIPTest.BFEResponse_LastID oRespuesta = servicio.BFEGetLast_ID(autorizacion);
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            this.iUltimoNumeroError = oRespuesta.BFEErr.ErrCode;
                            this.strUltimoMensajeError = oRespuesta.BFEErr.ErrMsg;
                            cResultado = oRespuesta.BFEResultGet.Id.ToString();
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x205;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return cResultado;
                }
                WSAFIPFE.bAFIP.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIP.ClsBFEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.btoken;
                    autorizacion.Sign = this.bsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x38;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.bAFIP.Service servicio = new WSAFIPFE.bAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.bDireccionServicioURL;
                        WSAFIPFE.bAFIP.BFEResponse_LastID oRespuesta = servicio.BFEGetLast_ID(autorizacion);
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        this.iUltimoNumeroError = oRespuesta.BFEErr.ErrCode;
                        this.strUltimoMensajeError = oRespuesta.BFEErr.ErrMsg;
                        cResultado = oRespuesta.BFEResultGet.Id.ToString();
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x205;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return cResultado;
            }
            bResultado = false;
            return cResultado;
        }

        public bool BFEGetPARAM_MON()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ibMonedaItemCantidad = 0;
            if (this.BTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.bAFIPTest.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIPTest.ClsBFEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.btoken;
                        autorizacion.Sign = this.bsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.bAFIPTest.Service servicio = new WSAFIPFE.bAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.bAFIPTest.BFEResponse_Mon oRespuesta = servicio.BFEGetPARAM_MON(autorizacion);
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            if (this.iberrcode == 0)
                            {
                                this.ibMonedaItemCantidad = oRespuesta.BFEResultGet.Length;
                                value = this.bMonedaItemCantidad;
                                this.aBMoneda = new bMoneda[(value - 1) + 1];
                                int VB_t_i4_L0 = this.ibMonedaItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.aBMoneda[nContador].id = oRespuesta.BFEResultGet[nContador].Mon_Id;
                                    this.aBMoneda[nContador].ds = oRespuesta.BFEResultGet[nContador].Mon_Ds;
                                    this.aBMoneda[nContador].Vig_Desde = oRespuesta.BFEResultGet[nContador].Mon_vig_desde;
                                    this.aBMoneda[nContador].Vig_hasta = oRespuesta.BFEResultGet[nContador].Mon_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.bAFIP.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIP.ClsBFEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.btoken;
                    autorizacion.Sign = this.bsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.bAFIP.Service servicio = new WSAFIPFE.bAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.bDireccionServicioURL;
                        WSAFIPFE.bAFIP.BFEResponse_Mon oRespuesta = servicio.BFEGetPARAM_MON(autorizacion);
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        if (this.iberrcode == 0)
                        {
                            this.ibMonedaItemCantidad = oRespuesta.BFEResultGet.Length;
                            value = this.bMonedaItemCantidad;
                            this.aBMoneda = new bMoneda[(value - 1) + 1];
                            int VB_t_i4_L1 = this.ibMonedaItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.aBMoneda[nContador].id = oRespuesta.BFEResultGet[nContador].Mon_Id;
                                this.aBMoneda[nContador].ds = oRespuesta.BFEResultGet[nContador].Mon_Ds;
                                this.aBMoneda[nContador].Vig_Desde = oRespuesta.BFEResultGet[nContador].Mon_vig_desde;
                                this.aBMoneda[nContador].Vig_hasta = oRespuesta.BFEResultGet[nContador].Mon_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool BFEGetPARAM_NCM()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ibProductoItemCantidad = 0;
            if (this.BTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.bAFIPTest.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIPTest.ClsBFEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.btoken;
                        autorizacion.Sign = this.bsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x38;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.bAFIPTest.Service servicio = new WSAFIPFE.bAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.bAFIPTest.BFEResponse_NCM oRespuesta = servicio.BFEGetPARAM_NCM(autorizacion);
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            if (this.iberrcode == 0)
                            {
                                this.ibProductoItemCantidad = oRespuesta.BFEResultGet.Length;
                                value = this.bProductoItemCantidad;
                                this.aBProducto = new bProducto[(value - 1) + 1];
                                int VB_t_i4_L0 = this.bProductoItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.aBProducto[nContador].NCM_codigo = oRespuesta.BFEResultGet[nContador].NCM_Codigo;
                                    this.aBProducto[nContador].NCM_ds = oRespuesta.BFEResultGet[nContador].NCM_Ds;
                                    this.aBProducto[nContador].NCM_nota = oRespuesta.BFEResultGet[nContador].NCM_Nota;
                                    this.aBProducto[nContador].NCM_Vig_Desde = oRespuesta.BFEResultGet[nContador].NCM_vig_desde;
                                    this.aBProducto[nContador].NCM_Vig_hasta = oRespuesta.BFEResultGet[nContador].NCM_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x205;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.bAFIP.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIP.ClsBFEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.btoken;
                    autorizacion.Sign = this.bsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x38;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.bAFIP.Service servicio = new WSAFIPFE.bAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.bDireccionServicioURL;
                        WSAFIPFE.bAFIP.BFEResponse_NCM oRespuesta = servicio.BFEGetPARAM_NCM(autorizacion);
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        if (this.iberrcode == 0)
                        {
                            this.ibProductoItemCantidad = oRespuesta.BFEResultGet.Length;
                            value = this.bProductoItemCantidad;
                            this.aBProducto = new bProducto[(value - 1) + 1];
                            int VB_t_i4_L1 = this.bProductoItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.aBProducto[nContador].NCM_codigo = oRespuesta.BFEResultGet[nContador].NCM_Codigo;
                                this.aBProducto[nContador].NCM_ds = oRespuesta.BFEResultGet[nContador].NCM_Ds;
                                this.aBProducto[nContador].NCM_nota = oRespuesta.BFEResultGet[nContador].NCM_Nota;
                                this.aBProducto[nContador].NCM_Vig_Desde = oRespuesta.BFEResultGet[nContador].NCM_vig_desde;
                                this.aBProducto[nContador].NCM_Vig_hasta = oRespuesta.BFEResultGet[nContador].NCM_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x205;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool BFEGetPARAM_Tipo_cbte()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ibTipo_CbteItemCantidad = 0;
            if (this.BTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.bAFIPTest.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIPTest.ClsBFEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.btoken;
                        autorizacion.Sign = this.bsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x38;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.bAFIPTest.Service servicio = new WSAFIPFE.bAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.bAFIPTest.BFEResponse_Tipo_Cbte oRespuesta = servicio.BFEGetPARAM_Tipo_Cbte(autorizacion);
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            if (this.iberrcode == 0)
                            {
                                this.ibTipo_CbteItemCantidad = oRespuesta.BFEResultGet.Length;
                                value = this.ibTipo_CbteItemCantidad;
                                this.aBTipo_cpte = new bTipo_cbtes[(value - 1) + 1];
                                int VB_t_i4_L0 = this.bTipo_CbteItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.aBTipo_cpte[nContador].id = oRespuesta.BFEResultGet[nContador].Cbte_Id;
                                    this.aBTipo_cpte[nContador].ds = oRespuesta.BFEResultGet[nContador].Cbte_Ds;
                                    this.aBTipo_cpte[nContador].Vig_Desde = oRespuesta.BFEResultGet[nContador].Cbte_vig_desde;
                                    this.aBTipo_cpte[nContador].Vig_hasta = oRespuesta.BFEResultGet[nContador].Cbte_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x205;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.bAFIP.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIP.ClsBFEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.btoken;
                    autorizacion.Sign = this.bsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x38;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.bAFIP.Service servicio = new WSAFIPFE.bAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.bDireccionServicioURL;
                        WSAFIPFE.bAFIP.BFEResponse_Tipo_Cbte oRespuesta = servicio.BFEGetPARAM_Tipo_Cbte(autorizacion);
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        if (this.iberrcode == 0)
                        {
                            this.ibTipo_CbteItemCantidad = oRespuesta.BFEResultGet.Length;
                            value = this.ibTipo_CbteItemCantidad;
                            this.aBTipo_cpte = new bTipo_cbtes[(value - 1) + 1];
                            int VB_t_i4_L1 = this.bTipo_CbteItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.aBTipo_cpte[nContador].id = oRespuesta.BFEResultGet[nContador].Cbte_Id;
                                this.aBTipo_cpte[nContador].ds = oRespuesta.BFEResultGet[nContador].Cbte_Ds;
                                this.aBTipo_cpte[nContador].Vig_Desde = oRespuesta.BFEResultGet[nContador].Cbte_vig_desde;
                                this.aBTipo_cpte[nContador].Vig_hasta = oRespuesta.BFEResultGet[nContador].Cbte_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x205;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool BFEGetPARAM_TipoDoc()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ibTipoDocItemCantidad = 0;
            if (this.BTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.bAFIPTest.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIPTest.ClsBFEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.btoken;
                        autorizacion.Sign = this.bsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x38;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.bAFIPTest.Service servicio = new WSAFIPFE.bAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.bAFIPTest.BFEResponse_Tipo_doc oRespuesta = servicio.BFEGetPARAM_Tipo_doc(autorizacion);
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            if (this.iberrcode == 0)
                            {
                                this.ibTipoDocItemCantidad = oRespuesta.BFEResultGet.Length;
                                value = this.ibTipoDocItemCantidad;
                                this.aBTipoDoc = new bTipoDoc[(value - 1) + 1];
                                int VB_t_i4_L0 = this.bTipoDocItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.aBTipoDoc[nContador].id = oRespuesta.BFEResultGet[nContador].Doc_Id;
                                    this.aBTipoDoc[nContador].ds = oRespuesta.BFEResultGet[nContador].Doc_Ds;
                                    this.aBTipoDoc[nContador].Vig_Desde = oRespuesta.BFEResultGet[nContador].Doc_vig_desde;
                                    this.aBTipoDoc[nContador].Vig_hasta = oRespuesta.BFEResultGet[nContador].Doc_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x206;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.bAFIP.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIP.ClsBFEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.btoken;
                    autorizacion.Sign = this.bsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x38;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.bAFIP.Service servicio = new WSAFIPFE.bAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.bDireccionServicioURL;
                        WSAFIPFE.bAFIP.BFEResponse_Tipo_doc oRespuesta = servicio.BFEGetPARAM_Tipo_doc(autorizacion);
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        if (this.iberrcode == 0)
                        {
                            this.ibTipoDocItemCantidad = oRespuesta.BFEResultGet.Length;
                            value = this.ibTipoDocItemCantidad;
                            this.aBTipoDoc = new bTipoDoc[(value - 1) + 1];
                            int VB_t_i4_L1 = this.bTipoDocItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.aBTipoDoc[nContador].id = oRespuesta.BFEResultGet[nContador].Doc_Id;
                                this.aBTipoDoc[nContador].ds = oRespuesta.BFEResultGet[nContador].Doc_Ds;
                                this.aBTipoDoc[nContador].Vig_Desde = oRespuesta.BFEResultGet[nContador].Doc_vig_desde;
                                this.aBTipoDoc[nContador].Vig_hasta = oRespuesta.BFEResultGet[nContador].Doc_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x206;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool BFEGetPARAM_TipoIva()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ibTipoIvaItemCantidad = 0;
            if (this.BTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.bAFIPTest.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIPTest.ClsBFEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.btoken;
                        autorizacion.Sign = this.bsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x38;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.bAFIPTest.Service servicio = new WSAFIPFE.bAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.bAFIPTest.BFEResponse_Tipo_IVA oRespuesta = servicio.BFEGetPARAM_Tipo_IVA(autorizacion);
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            if (this.iberrcode == 0)
                            {
                                this.ibTipoIvaItemCantidad = oRespuesta.BFEResultGet.Length;
                                value = this.ibTipoIvaItemCantidad;
                                this.abTipoIva = new bTipoIva[(value - 1) + 1];
                                int VB_t_i4_L0 = this.bTipoIvaItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.abTipoIva[nContador].id = oRespuesta.BFEResultGet[nContador].IVA_Id;
                                    this.abTipoIva[nContador].ds = oRespuesta.BFEResultGet[nContador].IVA_Ds;
                                    this.abTipoIva[nContador].Vig_Desde = oRespuesta.BFEResultGet[nContador].IVA_vig_desde;
                                    this.abTipoIva[nContador].Vig_hasta = oRespuesta.BFEResultGet[nContador].IVA_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x206;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.bAFIP.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIP.ClsBFEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.btoken;
                    autorizacion.Sign = this.bsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x38;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.bAFIP.Service servicio = new WSAFIPFE.bAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.bDireccionServicioURL;
                        WSAFIPFE.bAFIP.BFEResponse_Tipo_IVA oRespuesta = servicio.BFEGetPARAM_Tipo_IVA(autorizacion);
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        if (this.iberrcode == 0)
                        {
                            this.ibTipoIvaItemCantidad = oRespuesta.BFEResultGet.Length;
                            value = this.ibTipoIvaItemCantidad;
                            this.abTipoIva = new bTipoIva[(value - 1) + 1];
                            int VB_t_i4_L1 = this.bTipoIvaItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.abTipoIva[nContador].id = oRespuesta.BFEResultGet[nContador].IVA_Id;
                                this.abTipoIva[nContador].ds = oRespuesta.BFEResultGet[nContador].IVA_Ds;
                                this.abTipoIva[nContador].Vig_Desde = oRespuesta.BFEResultGet[nContador].IVA_vig_desde;
                                this.abTipoIva[nContador].Vig_hasta = oRespuesta.BFEResultGet[nContador].IVA_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x206;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool BFEGetPARAM_UMed()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ibUMedItemCantidad = 0;
            if (this.BTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.bAFIPTest.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIPTest.ClsBFEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.btoken;
                        autorizacion.Sign = this.bsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x38;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.bAFIPTest.Service servicio = new WSAFIPFE.bAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.bAFIPTest.BFEResponse_Umed oRespuesta = servicio.BFEGetPARAM_UMed(autorizacion);
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            if (this.iberrcode == 0)
                            {
                                this.ibUMedItemCantidad = oRespuesta.BFEResultGet.Length;
                                value = this.ibUMedItemCantidad;
                                this.aBUMed = new bUMed[(value - 1) + 1];
                                int VB_t_i4_L0 = this.bUMedItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.aBUMed[nContador].id = oRespuesta.BFEResultGet[nContador].Umed_Id;
                                    this.aBUMed[nContador].ds = oRespuesta.BFEResultGet[nContador].Umed_Ds;
                                    this.aBUMed[nContador].Vig_Desde = oRespuesta.BFEResultGet[nContador].Umed_vig_desde;
                                    this.aBUMed[nContador].Vig_hasta = oRespuesta.BFEResultGet[nContador].Umed_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x206;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.bAFIP.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIP.ClsBFEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.btoken;
                    autorizacion.Sign = this.bsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x38;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.bAFIP.Service servicio = new WSAFIPFE.bAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.bDireccionServicioURL;
                        WSAFIPFE.bAFIP.BFEResponse_Umed oRespuesta = servicio.BFEGetPARAM_UMed(autorizacion);
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        if (this.iberrcode == 0)
                        {
                            this.ibUMedItemCantidad = oRespuesta.BFEResultGet.Length;
                            value = this.ibUMedItemCantidad;
                            this.aBUMed = new bUMed[(value - 1) + 1];
                            int VB_t_i4_L1 = this.bUMedItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.aBUMed[nContador].id = oRespuesta.BFEResultGet[nContador].Umed_Id;
                                this.aBUMed[nContador].ds = oRespuesta.BFEResultGet[nContador].Umed_Ds;
                                this.aBUMed[nContador].Vig_Desde = oRespuesta.BFEResultGet[nContador].Umed_vig_desde;
                                this.aBUMed[nContador].Vig_hasta = oRespuesta.BFEResultGet[nContador].Umed_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x206;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool BFEGetPARAM_Zonas()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ibZonaItemCantidad = 0;
            if (this.BTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.bAFIPTest.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIPTest.ClsBFEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.btoken;
                        autorizacion.Sign = this.bsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x38;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.bAFIPTest.Service servicio = new WSAFIPFE.bAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.bAFIPTest.BFEResponse_Zon oRespuesta = servicio.BFEGetPARAM_Zonas(autorizacion);
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            this.iberrcode = oRespuesta.BFEErr.ErrCode;
                            this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                            if (this.iberrcode == 0)
                            {
                                this.ibZonaItemCantidad = oRespuesta.BFEResultGet.Length;
                                value = this.ibZonaItemCantidad;
                                this.abZona = new bZonas[(value - 1) + 1];
                                int VB_t_i4_L0 = this.bZonaItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.abZona[nContador].id = oRespuesta.BFEResultGet[nContador].Zon_Id;
                                    this.abZona[nContador].ds = oRespuesta.BFEResultGet[nContador].Zon_Ds;
                                    this.abZona[nContador].Vig_Desde = oRespuesta.BFEResultGet[nContador].Zon_vig_desde;
                                    this.abZona[nContador].Vig_hasta = oRespuesta.BFEResultGet[nContador].Zon_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x206;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.bAFIP.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIP.ClsBFEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.btoken;
                    autorizacion.Sign = this.bsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x38;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.bAFIP.Service servicio = new WSAFIPFE.bAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.bDireccionServicioURL;
                        WSAFIPFE.bAFIP.BFEResponse_Zon oRespuesta = servicio.BFEGetPARAM_Zonas(autorizacion);
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        if (this.iberrcode == 0)
                        {
                            this.ibZonaItemCantidad = oRespuesta.BFEResultGet.Length;
                            value = this.ibZonaItemCantidad;
                            this.abZona = new bZonas[(value - 1) + 1];
                            int VB_t_i4_L1 = this.bZonaItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.abZona[nContador].id = oRespuesta.BFEResultGet[nContador].Zon_Id;
                                this.abZona[nContador].ds = oRespuesta.BFEResultGet[nContador].Zon_Ds;
                                this.abZona[nContador].Vig_Desde = oRespuesta.BFEResultGet[nContador].Zon_vig_desde;
                                this.abZona[nContador].Vig_hasta = oRespuesta.BFEResultGet[nContador].Zon_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x206;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        internal bool bObtenerTicket()
        {
            this.strUltimaRespuestaXML = "";
            this.strUltimoPedidoXML = "";
            this.strUltimoPedidoFirmadoXML = "";
            this.Identificador = "0";
            bool bResultado = false;
            if ((this.BLicenciaValida & this.get_LicenciaFechaValida(DateTime.Today)) | (this.Modo == modoFiscal.Test))
            {
                string strDireccionServicio = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
                if (this.Modo == modoFiscal.Fiscal)
                {
                    strDireccionServicio = this.DireccionServicio;
                }
                ticket oTicket = new ticket();
                if (this.ProxyUserName != "")
                {
                    oTicket.ProxyDomain = this.ProxyDomain;
                    oTicket.ProxyHost = this.ProxyHost;
                    oTicket.ProxyPort = this.ProxyPort;
                    oTicket.ProxyUserName = this.ProxyUserName;
                    oTicket.ProxyUserPassword = this.ProxyUserPassword;
                }
                string strServicio = this.bNombreServicio;
                try
                {
                    string strTicketRespuesta = oTicket.ObtenerLoginTicketResponse(strServicio, strDireccionServicio, this.RutaArchivoCertificado, this.Modo, Conversions.ToLong(this.Identificador));
                    this.strUltimoPedidoXML = oTicket.UltimoPedidoXML.OuterXml;
                    this.strUltimoPedidoFirmadoXML = oTicket.UltimoPedidoFirmadoXML;
                    this.strUltimaRespuestaXML = strTicketRespuesta;
                    if (oTicket.lastErrorNumero == 0)
                    {
                        this.Identificador = oTicket.UniqueId.ToString();
                        this.btoken = oTicket.Token;
                        this.bsign = oTicket.Sign;
                        this.tbTicketHora = oTicket.GenerationTime;
                        this.tbTicketHoraVencimiento = oTicket.ExpirationTime;
                        this.strUltimoMensajeError = "";
                        this.iUltimoNumeroError = 0;
                        bResultado = true;
                    }
                    else
                    {
                        this.strUltimoMensajeError = oTicket.lastErrorMensaje;
                        this.iUltimoNumeroError = oTicket.lastErrorNumero;
                    }
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 1;
                    ProjectData.ClearProjectError();
                }
            }
            else
            {
                this.iUltimoNumeroError = 5;
                this.strUltimoMensajeError = "Licencia no v\x00e1lida";
            }
            this.bbTicketValido = bResultado;
            return bResultado;
        }

        public bool bObtenerTicketAcceso()
        {
            return this.bObtenerTicket();
        }

        public bool bRegistrar(int nPuntoVenta, int nTipoComprobante, string cIdentificador)
        {
            int nNumero = this.BFEGetLastCMP(nPuntoVenta, nTipoComprobante) + 1;
            return this.bRegistrarConNumero(nPuntoVenta, nTipoComprobante, cIdentificador, nNumero);
        }

        public bool bRegistrarConNumero(int nPuntoVenta, int nTipoComprobante, string cIdentificador, int nNumero)
        {
            int nContador;
            this.iPaso = 0;
            this.iberrcode = 0;
            this.strberrmsg = "";
            bool bResultado = true;
            this.strbRespuestaCAE = "";
            this.strbRespuestafch_venc_cae = "";
            this.strbRespuestaFch_cbte = "";
            this.strbRespuestaObs = "";
            this.strbRespuestaReProceso = "";
            this.strbRespuestaResultado = "";
            this.ibRespuestaId = Conversions.ToLong("0");
            this.iBEventCode = 0;
            this.strBEventMsg = "";
            this.ibRespuestaCbte_numero = 0;
            if (this.Modo == modoFiscal.Test)
            {
                if (this.BTicketValido)
                {
                    WSAFIPFE.bAFIPTest.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIPTest.ClsBFEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.btoken;
                        autorizacion.Sign = this.bsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 520;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.bAFIPTest.ClsBFERequest oPedido = new WSAFIPFE.bAFIPTest.ClsBFERequest();
                        WSAFIPFE.bAFIPTest.Item[] opedidoitems = new WSAFIPFE.bAFIPTest.Item[(this.bItemCantidad - 1) + 1];
                        if (cIdentificador.Trim() == "")
                        {
                            oPedido.Id = Conversions.ToLong("0");
                        }
                        else
                        {
                            oPedido.Id = Conversions.ToLong(cIdentificador);
                        }
                        this.ibRespuestaCbte_numero = nNumero;
                        oPedido.Cbte_nro = nNumero;
                        oPedido.Fecha_cbte = this.bFecha_cbte;
                        oPedido.Imp_iibb = this.bImp_iibb;
                        oPedido.Imp_internos = this.bImp_internos;
                        oPedido.Imp_moneda_ctz = this.bImp_moneda_ctz;
                        oPedido.Imp_moneda_Id = this.bImp_moneda_id;
                        oPedido.Imp_neto = this.bImp_neto;
                        oPedido.Imp_op_ex = this.bimp_op_ex;
                        oPedido.Imp_perc = this.bImp_perc;
                        oPedido.Imp_perc_mun = this.bImp_perc_mun;
                        oPedido.Imp_total = this.bImp_total;
                        oPedido.Impto_liq = this.bimpto_liq;
                        oPedido.Imp_tot_conc = this.bImp_total_conc;
                        oPedido.Impto_liq_rni = this.bimpto_liq_rni;
                        oPedido.Nro_doc = Conversions.ToLong(this.bNro_doc);
                        oPedido.Punto_vta = nPuntoVenta;
                        oPedido.Tipo_cbte = (short) nTipoComprobante;
                        oPedido.Tipo_doc = (short) this.bTipo_Doc;
                        oPedido.Zona = (short) this.bZona;
                        int VB_t_i4_L0 = this.bItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                        {
                            WSAFIPFE.bAFIPTest.Item oPedidoitem = new WSAFIPFE.bAFIPTest.Item();
                            this.IndiceItem = nContador;
                            oPedidoitem.Imp_bonif = this.bITEMimp_bonif;
                            oPedidoitem.Imp_total = this.bITEMimp_total;
                            oPedidoitem.Pro_codigo_ncm = this.bITEMpro_codigo_ncm;
                            oPedidoitem.Pro_codigo_sec = this.bITEMpro_codigo_sec;
                            oPedidoitem.Pro_ds = this.bITEMpro_ds;
                            oPedidoitem.Pro_precio_uni = this.bITEMpro_precio_uni;
                            oPedidoitem.Pro_qty = this.bITEMpro_qty;
                            oPedidoitem.Pro_umed = this.bITEMpro_umed;
                            oPedidoitem.Iva_id = (short) this.bITEMIva_id;
                            opedidoitems[nContador] = oPedidoitem;
                        }
                        oPedido.Items = opedidoitems;
                        WSAFIPFE.bAFIPTest.Service servicio = new WSAFIPFE.bAFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        if (this.ArchivoXMLEnviado != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.bAFIPTest.ClsBFERequest));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                                writer1.Serialize((TextWriter) file1, oPedido);
                                file1.Close();
                            }
                            catch (Exception exception2)
                            {
                                ProjectData.SetProjectError(exception2);
                                Exception miEx = exception2;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        WSAFIPFE.bAFIPTest.BFEResponseAuthorize oRespuesta = servicio.BFEAuthorize(autorizacion, oPedido);
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                            return bResultado;
                        }
                        this.iberrcode = oRespuesta.BFEErr.ErrCode;
                        this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                        this.iBEventCode = oRespuesta.BFEEvents.EventCode;
                        this.strBEventMsg = oRespuesta.BFEEvents.EventMsg;
                        if ((oRespuesta.BFEResultAuth.Cae == "NULL") | (oRespuesta.BFEResultAuth.Resultado != "A"))
                        {
                            bResultado = false;
                        }
                        this.strbRespuestaCAE = oRespuesta.BFEResultAuth.Cae;
                        this.strbRespuestaFch_cbte = oRespuesta.BFEResultAuth.Fch_cbte;
                        this.strbRespuestaCUIT = oRespuesta.BFEResultAuth.Cuit.ToString();
                        this.strbRespuestaObs = oRespuesta.BFEResultAuth.Obs;
                        this.strbRespuestaReProceso = oRespuesta.BFEResultAuth.Reproceso;
                        this.strbRespuestaResultado = oRespuesta.BFEResultAuth.Resultado;
                        this.strbRespuestafch_venc_cae = oRespuesta.BFEResultAuth.Fch_venc_Cae;
                        this.ibRespuestaId = oRespuesta.BFEResultAuth.Id;
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.bAFIPTest.BFEResponseAuthorize));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception3)
                            {
                                ProjectData.SetProjectError(exception3);
                                Exception miEx = exception3;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                    }
                    return bResultado;
                }
                bResultado = false;
                this.strUltimoMensajeError = "ticket invalido";
                return bResultado;
            }
            this.iPaso++;
            WSAFIPFE.bAFIP.ClsBFEAuthRequest autorizacion = new WSAFIPFE.bAFIP.ClsBFEAuthRequest();
            try
            {
                autorizacion.Cuit = Conversions.ToLong(this.cuit);
                autorizacion.Token = this.btoken;
                autorizacion.Sign = this.bsign;
            }
            catch (Exception exception4)
            {
                ProjectData.SetProjectError(exception4);
                Exception ex = exception4;
                this.iUltimoNumeroError = 520;
                this.strUltimoMensajeError = ex.Message;
                bResultado = false;
                ProjectData.ClearProjectError();
            }
            this.iPaso++;
            if (this.BTicketValido & bResultado)
            {
                this.iPaso++;
                WSAFIPFE.bAFIP.ClsBFERequest oPedido = new WSAFIPFE.bAFIP.ClsBFERequest();
                WSAFIPFE.bAFIP.Item[] opedidoitems = new WSAFIPFE.bAFIP.Item[(this.bItemCantidad - 1) + 1];
                if (cIdentificador.Trim() == "")
                {
                    oPedido.Id = Conversions.ToLong("0");
                }
                else
                {
                    oPedido.Id = Conversions.ToLong(cIdentificador);
                }
                this.iPaso++;
                this.ibRespuestaCbte_numero = nNumero;
                oPedido.Cbte_nro = nNumero;
                oPedido.Fecha_cbte = this.bFecha_cbte;
                oPedido.Imp_iibb = this.bImp_iibb;
                oPedido.Imp_internos = this.bImp_internos;
                oPedido.Imp_moneda_ctz = this.bImp_moneda_ctz;
                oPedido.Imp_moneda_Id = this.bImp_moneda_id;
                oPedido.Imp_neto = this.bImp_neto;
                oPedido.Imp_op_ex = this.bimp_op_ex;
                oPedido.Imp_perc = this.bImp_perc;
                oPedido.Imp_perc_mun = this.bImp_perc_mun;
                oPedido.Imp_total = this.bImp_total;
                oPedido.Impto_liq = this.bimpto_liq;
                oPedido.Imp_tot_conc = this.bImp_total_conc;
                oPedido.Impto_liq_rni = this.bimpto_liq_rni;
                oPedido.Nro_doc = Conversions.ToLong(this.bNro_doc);
                oPedido.Punto_vta = nPuntoVenta;
                oPedido.Tipo_cbte = (short) nTipoComprobante;
                oPedido.Tipo_doc = (short) this.bTipo_Doc;
                oPedido.Zona = (short) this.bZona;
                this.iPaso++;
                int VB_t_i4_L1 = this.bItemCantidad - 1;
                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                {
                    WSAFIPFE.bAFIP.Item oPedidoitem = new WSAFIPFE.bAFIP.Item();
                    this.IndiceItem = nContador;
                    oPedidoitem.Imp_bonif = this.bITEMimp_bonif;
                    oPedidoitem.Imp_total = this.bITEMimp_total;
                    oPedidoitem.Pro_codigo_ncm = this.bITEMpro_codigo_ncm;
                    oPedidoitem.Pro_codigo_sec = this.bITEMpro_codigo_sec;
                    oPedidoitem.Pro_ds = this.bITEMpro_ds;
                    oPedidoitem.Pro_precio_uni = this.bITEMpro_precio_uni;
                    oPedidoitem.Pro_qty = this.bITEMpro_qty;
                    oPedidoitem.Pro_umed = this.bITEMpro_umed;
                    oPedidoitem.Iva_id = (short) this.bITEMIva_id;
                    opedidoitems[nContador] = oPedidoitem;
                }
                oPedido.Items = opedidoitems;
                WSAFIPFE.bAFIP.Service servicio = new WSAFIPFE.bAFIP.Service();
                if (this.ProxyUserName != "")
                {
                    NetworkCredential cr = new NetworkCredential();
                    WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                    cr.Domain = this.ProxyDomain;
                    cr.Password = this.ProxyUserPassword;
                    cr.UserName = this.ProxyUserName;
                    pr.Credentials = cr;
                    servicio.Proxy = pr;
                }
                servicio.Url = this.bDireccionServicioURL;
                this.iPaso++;
                if (this.ArchivoXMLEnviado != "")
                {
                    try
                    {
                        XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.bAFIP.ClsBFERequest));
                        StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                        writer1.Serialize((TextWriter) file1, oPedido);
                        file1.Close();
                    }
                    catch (Exception exception5)
                    {
                        ProjectData.SetProjectError(exception5);
                        Exception miEx = exception5;
                        this.strArchivoXMLError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                }
                WSAFIPFE.bAFIP.BFEResponseAuthorize oRespuesta = servicio.BFEAuthorize(autorizacion, oPedido);
                this.iPaso++;
                if (oRespuesta == null)
                {
                    bResultado = false;
                    this.iUltimoNumeroError = 100;
                    this.strUltimoMensajeError = "Sin respuesta";
                    this.iPaso += 100;
                    return bResultado;
                }
                this.iPaso = (this.iPaso + 1) + 0x3e8;
                this.iberrcode = oRespuesta.BFEErr.ErrCode;
                this.strberrmsg = oRespuesta.BFEErr.ErrMsg;
                this.iBEventCode = oRespuesta.BFEEvents.EventCode;
                this.strBEventMsg = oRespuesta.BFEEvents.EventMsg;
                if ((oRespuesta.BFEResultAuth.Cae == "NULL") | (oRespuesta.BFEResultAuth.Resultado != "A"))
                {
                    bResultado = false;
                }
                this.strbRespuestaCAE = oRespuesta.BFEResultAuth.Cae;
                this.strbRespuestafch_venc_cae = oRespuesta.BFEResultAuth.Fch_venc_Cae;
                this.strbRespuestaCUIT = oRespuesta.BFEResultAuth.Cuit.ToString();
                this.strbRespuestaFch_cbte = oRespuesta.BFEResultAuth.Fch_cbte;
                this.strbRespuestaObs = oRespuesta.BFEResultAuth.Obs;
                this.strbRespuestaReProceso = oRespuesta.BFEResultAuth.Reproceso;
                this.strbRespuestaResultado = oRespuesta.BFEResultAuth.Resultado;
                this.ibRespuestaId = oRespuesta.BFEResultAuth.Id;
                if (this.ArchivoXMLRecibido != "")
                {
                    try
                    {
                        XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.bAFIP.BFEResponseAuthorize));
                        StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                        writer1.Serialize((TextWriter) file1, oRespuesta);
                        file1.Close();
                    }
                    catch (Exception exception6)
                    {
                        ProjectData.SetProjectError(exception6);
                        Exception miEx = exception6;
                        this.strArchivoXMLError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 900;
            this.iPaso = (this.iPaso + 1) + 0x4d;
            return bResultado;
        }

        public bool dAvisoDigit()
        {
            bool bResultado = true;
            this.strUltimoMensajeError = "";
            this.iUltimoNumeroError = 0;
            this.strdRespuestaDescError = "";
            this.strdRespuestaCodError = 0;
            if ((this.Modo == modoFiscal.Test) && bResultado)
            {
                try
                {
                    Familia[] oFamilias;
                    Autenticacion oAutorizacion = new Autenticacion();
                    oAutorizacion.Cuit = this.cuit;
                    oAutorizacion.Rol = this.dRol;
                    oAutorizacion.Sign = this.dsign;
                    oAutorizacion.TipoAgente = this.dTipoAgente;
                    oAutorizacion.Token = this.dtoken;
                    if (this.dFamiliaItemCantidad == 0)
                    {
                        oFamilias = new Familia[] { null };
                    }
                    else
                    {
                        oFamilias = new Familia[(this.dFamiliaItemCantidad - 1) + 1];
                        int VB_t_i4_L0 = this.dFamiliaItemCantidad - 1;
                        for (int nIndex = 0; nIndex <= VB_t_i4_L0; nIndex++)
                        {
                            Familia oFamilia = new Familia();
                            oFamilia.cantidad = this.adFamilia[nIndex].cantidad;
                            oFamilia.codigo = this.adFamilia[nIndex].codigo;
                            oFamilias[nIndex] = oFamilia;
                        }
                    }
                    wDigDepFiel servicio = new wDigDepFiel();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    Recibo oRespuesta = servicio.AvisoDigit(oAutorizacion, this.dNroLegajo, this.dCuitDeclarante, this.dCuitPSad, this.dCuitIE, this.dCuitATA, this.dCodigo, this.dURL, oFamilias, this.dTicket, this.dHashing, this.dCantidadTotal);
                    this.strdRespuestaCodError = oRespuesta.codError;
                    this.strdRespuestaDescError = oRespuesta.descError;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 6;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        public bool dAvisoRecepAcept()
        {
            bool bResultado = true;
            this.strUltimoMensajeError = "";
            this.iUltimoNumeroError = 0;
            this.strdRespuestaDescError = "";
            this.strdRespuestaCodError = 0;
            if ((this.Modo == modoFiscal.Test) && bResultado)
            {
                try
                {
                    Autenticacion oAutorizacion = new Autenticacion();
                    Recibo oRespuesta = new Recibo();
                    oAutorizacion.Cuit = this.cuit;
                    oAutorizacion.Rol = this.dRol;
                    oAutorizacion.Sign = this.dsign;
                    oAutorizacion.TipoAgente = this.dTipoAgente;
                    oAutorizacion.Token = this.dtoken;
                    wDigDepFiel servicio = new wDigDepFiel();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    oRespuesta = servicio.AvisoRecepAcept(oAutorizacion, this.dNroLegajo, this.dCuitDeclarante, this.dCuitPSad, this.dCuitIE, this.dCodigo, this.dFechaHoraAcept, this.dTicket);
                    this.strdRespuestaDescError = oRespuesta.descError;
                    this.strdRespuestaCodError = oRespuesta.codError;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 6;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        public bool dDummy()
        {
            bool bResultado = true;
            this.strdRespuestaDummyDbServer = "";
            this.strdRespuestaDummyAuthServer = "";
            this.strdRespuestaDummyDbServer = "";
            if ((this.Modo == modoFiscal.Test) && bResultado)
            {
                try
                {
                    wDigDepFiel servicio = new wDigDepFiel();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    WsDummyResponse oRespuesta = servicio.Dummy();
                    this.strdRespuestaDummyDbServer = oRespuesta.dbserver;
                    this.strdRespuestaDummyAuthServer = oRespuesta.authserver;
                    this.strdRespuestaDummyAppServer = oRespuesta.appserver;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 6;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        internal bool dObtenerTicket()
        {
            this.strUltimaRespuestaXML = "";
            this.strUltimoPedidoXML = "";
            this.strUltimoPedidoFirmadoXML = "";
            this.Identificador = "0";
            bool bResultado = false;
            if ((this.dLicenciaValida & this.get_LicenciaFechaValida(DateTime.Today)) | (this.Modo == modoFiscal.Test))
            {
                string strDireccionServicio = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
                if (this.Modo == modoFiscal.Fiscal)
                {
                    strDireccionServicio = this.DireccionServicio;
                }
                ticket oTicket = new ticket();
                if (this.ProxyUserName != "")
                {
                    oTicket.ProxyDomain = this.ProxyDomain;
                    oTicket.ProxyHost = this.ProxyHost;
                    oTicket.ProxyPort = this.ProxyPort;
                    oTicket.ProxyUserName = this.ProxyUserName;
                    oTicket.ProxyUserPassword = this.ProxyUserPassword;
                }
                string strServicio = "wDigDepFiel";
                try
                {
                    string strTicketRespuesta = oTicket.ObtenerLoginTicketResponse(strServicio, strDireccionServicio, this.RutaArchivoCertificado, this.Modo, Conversions.ToLong(this.Identificador));
                    this.strUltimoPedidoXML = oTicket.UltimoPedidoXML.OuterXml;
                    this.strUltimoPedidoFirmadoXML = oTicket.UltimoPedidoFirmadoXML;
                    this.strUltimaRespuestaXML = strTicketRespuesta;
                    if (oTicket.lastErrorNumero == 0)
                    {
                        this.Identificador = oTicket.UniqueId.ToString();
                        this.dtoken = oTicket.Token;
                        this.dsign = oTicket.Sign;
                        this.tdTicketHora = oTicket.GenerationTime;
                        this.tdTicketHoraVencimiento = oTicket.ExpirationTime;
                        this.strUltimoMensajeError = "";
                        this.iUltimoNumeroError = 0;
                        bResultado = true;
                    }
                    else
                    {
                        this.strUltimoMensajeError = oTicket.lastErrorMensaje;
                        this.iUltimoNumeroError = oTicket.lastErrorNumero;
                    }
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 1;
                    ProjectData.ClearProjectError();
                }
            }
            else
            {
                this.iUltimoNumeroError = 5;
                this.strUltimoMensajeError = "Licencia no v\x00e1lida";
            }
            this.bdTicketValido = bResultado;
            return bResultado;
        }

        public bool dObtenerTicketAcceso()
        {
            return this.dObtenerTicket();
        }

        public bool Dummy()
        {
            bool bResultado = true;
            this.strRespuestaDummyDbServer = "";
            this.strRespuestaDummyAuthServer = "";
            this.strRespuestaDummyDbServer = "";
            if (this.TicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.afipTest.FEAuthRequest autorizacion = new WSAFIPFE.afipTest.FEAuthRequest();
                    try
                    {
                        autorizacion.cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.token;
                        autorizacion.Sign = this.sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 5;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.afipTest.Service servicio = new WSAFIPFE.afipTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            if (this.TimeOut != 0)
                            {
                                servicio.Timeout = this.TimeOut;
                            }
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.afipTest.DummyResponse oRespuesta = servicio.FEDummy();
                            this.strRespuestaDummyDbServer = oRespuesta.dbserver;
                            this.strRespuestaDummyAuthServer = oRespuesta.authserver;
                            this.strRespuestaDummyAppServer = oRespuesta.appserver;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 6;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.afip.FEAuthRequest autorizacion = new WSAFIPFE.afip.FEAuthRequest();
                try
                {
                    autorizacion.cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.token;
                    autorizacion.Sign = this.sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 5;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.afip.DummyResponse oRespuesta = null;
                    try
                    {
                        WSAFIPFE.afip.Service servicio = new WSAFIPFE.afip.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.DireccionServicioURL;
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        oRespuesta = servicio.FEDummy();
                        this.strRespuestaDummyDbServer = oRespuesta.dbserver;
                        this.strRespuestaDummyAuthServer = oRespuesta.authserver;
                        this.strRespuestaDummyAppServer = oRespuesta.appserver;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 6;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (this.ArchivoXMLRecibido == "")
                    {
                        return bResultado;
                    }
                    try
                    {
                        XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.afip.DummyResponse));
                        StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                        writer1.Serialize((TextWriter) file1, oRespuesta);
                        file1.Close();
                    }
                    catch (Exception exception5)
                    {
                        ProjectData.SetProjectError(exception5);
                        Exception miEx = exception5;
                        this.strArchivoXMLError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            if (bResultado)
            {
                WSAFIPFE.afip.DummyResponse oRespuesta = null;
                try
                {
                    WSAFIPFE.afip.Service servicio = new WSAFIPFE.afip.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.DireccionServicioURL;
                    if (this.TimeOut != 0)
                    {
                        servicio.Timeout = this.TimeOut;
                    }
                    oRespuesta = servicio.FEDummy();
                    this.strRespuestaDummyDbServer = oRespuesta.dbserver;
                    this.strRespuestaDummyAuthServer = oRespuesta.authserver;
                    this.strRespuestaDummyAppServer = oRespuesta.appserver;
                }
                catch (Exception exception6)
                {
                    ProjectData.SetProjectError(exception6);
                    Exception ex = exception6;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 6;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (this.ArchivoXMLRecibido == "")
                {
                    return bResultado;
                }
                try
                {
                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.afip.DummyResponse));
                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                    writer1.Serialize((TextWriter) file1, oRespuesta);
                    file1.Close();
                }
                catch (Exception exception7)
                {
                    ProjectData.SetProjectError(exception7);
                    Exception miEx = exception7;
                    this.strArchivoXMLError = miEx.Message;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        public bool F1CAEAConsultar(int iPeriodo, int iOrden)
        {
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            bool bResultado = true;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.strF1RespuestaCAEA = "";
            this.iF1RespuestaCAEAPeriodo = 0;
            this.iF1RespuestaCAEAOrden = 0;
            this.strF1RespuestaCAEAFchVigDesde = "";
            this.strF1RespuestaCAEAFchVigHasta = "";
            this.strF1RespuestaCAEAFchTopeInf = "";
            this.strF1RespuestaCAEAFchProceso = "";
            if (this.Modo == modoFiscal.Test)
            {
                if (this.f1TicketValido)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.f1AFIPTest.FECAEAGetResponse oRespuesta = servicio.FECAEAConsultar(autorizacion, iPeriodo, (short) iOrden);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIPTest.FECAEAGetResponse));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception2)
                            {
                                ProjectData.SetProjectError(exception2);
                                Exception miEx = exception2;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        this.IndiceItem = 0;
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                        }
                        else
                        {
                            int nContador;
                            int value;
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            if (oRespuesta.ResultGet == null)
                            {
                                this.iUltimoNumeroError = 0x65;
                                this.strUltimoMensajeError = "Sin detalle en la respuesta";
                                bResultado = false;
                            }
                            else
                            {
                                this.strF1RespuestaCAEA = oRespuesta.ResultGet.CAEA;
                                this.iF1RespuestaCAEAPeriodo = oRespuesta.ResultGet.Periodo;
                                this.iF1RespuestaCAEAOrden = oRespuesta.ResultGet.Orden;
                                this.strF1RespuestaCAEAFchVigDesde = oRespuesta.ResultGet.FchVigDesde;
                                this.strF1RespuestaCAEAFchVigHasta = oRespuesta.ResultGet.FchVigHasta;
                                this.strF1RespuestaCAEAFchTopeInf = oRespuesta.ResultGet.FchTopeInf;
                                this.strF1RespuestaCAEAFchProceso = oRespuesta.ResultGet.FchProceso;
                                if (oRespuesta.ResultGet.CAEA == null)
                                {
                                    bResultado = false;
                                }
                            }
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.f1TicketValido)
            {
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.f1DireccionServicioURL;
                    WSAFIPFE.f1AFIP.FECAEAGetResponse oRespuesta = servicio.FECAEAConsultar(autorizacion, iPeriodo, (short) iOrden);
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIP.FECAEAGetResponse));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            Exception miEx = exception4;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    this.IndiceItem = 0;
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                    }
                    else
                    {
                        int nContador;
                        int value;
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L4 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L6 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        if (oRespuesta.ResultGet == null)
                        {
                            this.iUltimoNumeroError = 0x65;
                            this.strUltimoMensajeError = "Sin detalle en la respuesta";
                            bResultado = false;
                        }
                        else
                        {
                            this.strF1RespuestaCAEA = oRespuesta.ResultGet.CAEA;
                            this.iF1RespuestaCAEAPeriodo = oRespuesta.ResultGet.Periodo;
                            this.iF1RespuestaCAEAOrden = oRespuesta.ResultGet.Orden;
                            this.strF1RespuestaCAEAFchVigDesde = oRespuesta.ResultGet.FchVigDesde;
                            this.strF1RespuestaCAEAFchVigHasta = oRespuesta.ResultGet.FchVigHasta;
                            this.strF1RespuestaCAEAFchTopeInf = oRespuesta.ResultGet.FchTopeInf;
                            this.strF1RespuestaCAEAFchProceso = oRespuesta.ResultGet.FchProceso;
                            if (oRespuesta.ResultGet.CAEA == null)
                            {
                                bResultado = false;
                            }
                        }
                    }
                    this.strUltimoMensajeError = this.f1ErrorMsg1;
                }
                return bResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return bResultado;
        }

        public bool f1CAEAConsultarS(string strPeriodo, string strOrden)
        {
            int iPeriodo = Conversions.ToInteger(strPeriodo);
            int iOrden = Conversions.ToInteger(strOrden);
            return this.F1CAEAConsultar(iPeriodo, iOrden);
        }

        public bool F1CAEARegInformativo()
        {
            int nContador;
            int nContador2;
            int nLimite2;
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            bool bResultado = true;
            int nLimite = this.F1CabeceraCantReg;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.strPermsg = "";
            this.iF1RespuetaCantidadReg = 0;
            this.strF1RespuestaFchProceso = "";
            this.strF1RespuestaReProceso = "";
            this.strF1RespuestaResultado = "";
            this.iF1RespuetaCantidadReg = 0;
            this.aF1RespuestaDetalleObs = new F1DetalleRespuestaObs[1, 1];
            if (((this.Modo == modoFiscal.Fiscal) & (nLimite > 1)) & !this.LicenciaLote)
            {
                this.iUltimoNumeroError = 0x3dd;
                this.strUltimoMensajeError = "Licencia inv\x00e1lida para el modo lote";
                return false;
            }
            if (this.Modo == modoFiscal.Test)
            {
                if (this.f1TicketValido)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.f1AFIPTest.FECAEARequest oPedido = new WSAFIPFE.f1AFIPTest.FECAEARequest();
                        WSAFIPFE.f1AFIPTest.FECAEACabRequest oPedidoCabecera = new WSAFIPFE.f1AFIPTest.FECAEACabRequest();
                        WSAFIPFE.f1AFIPTest.FECAEADetRequest[] opedidoitems = new WSAFIPFE.f1AFIPTest.FECAEADetRequest[(nLimite - 1) + 1];
                        WSAFIPFE.f1AFIPTest.CbteAsoc[] oPedidoItemCbteAsocs = new WSAFIPFE.f1AFIPTest.CbteAsoc[1];
                        WSAFIPFE.f1AFIPTest.AlicIva[] oPedidoItemIvas = new WSAFIPFE.f1AFIPTest.AlicIva[1];
                        WSAFIPFE.f1AFIPTest.Opcional[] oPedidoItemOpcionals = new WSAFIPFE.f1AFIPTest.Opcional[1];
                        WSAFIPFE.f1AFIPTest.Tributo[] oPedidoItemTributos = new WSAFIPFE.f1AFIPTest.Tributo[1];
                        oPedidoCabecera.CantReg = this.F1CabeceraCantReg;
                        oPedidoCabecera.CbteTipo = this.F1CabeceraCbteTipo;
                        oPedidoCabecera.PtoVta = this.F1CabeceraPtoVta;
                        int VB_t_i4_L0 = nLimite - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                        {
                            this.indice = nContador;
                            WSAFIPFE.f1AFIPTest.FECAEADetRequest oPedidoitem = new WSAFIPFE.f1AFIPTest.FECAEADetRequest();
                            oPedidoitem.CbteDesde = this.F1DetalleCbteDesde;
                            oPedidoitem.CbteHasta = this.F1DetalleCbteHasta;
                            if (this.F1DetalleCbtesAsocItemCantidad == 0)
                            {
                                oPedidoItemCbteAsocs = null;
                            }
                            else
                            {
                                oPedidoItemCbteAsocs = new WSAFIPFE.f1AFIPTest.CbteAsoc[(this.F1DetalleCbtesAsocItemCantidad - 1) + 1];
                                int VB_t_i4_L1 = this.F1DetalleCbtesAsocItemCantidad - 1;
                                nContador2 = 0;
                                while (nContador2 <= VB_t_i4_L1)
                                {
                                    WSAFIPFE.f1AFIPTest.CbteAsoc oPedidoItemCbteAsoc = new WSAFIPFE.f1AFIPTest.CbteAsoc();
                                    this.IndiceItem = nContador2;
                                    oPedidoItemCbteAsoc.Nro = this.F1DetalleCbtesAsocNro;
                                    oPedidoItemCbteAsoc.PtoVta = this.F1DetalleCbtesAsocPtoVta;
                                    oPedidoItemCbteAsoc.Tipo = this.F1DetalleCbtesAsocTipo;
                                    oPedidoItemCbteAsocs[nContador2] = oPedidoItemCbteAsoc;
                                    nContador2++;
                                }
                            }
                            oPedidoitem.CbtesAsoc = oPedidoItemCbteAsocs;
                            if (this.F1DetalleIvaItemCantidad == 0)
                            {
                                oPedidoItemIvas = null;
                            }
                            else
                            {
                                oPedidoItemIvas = new WSAFIPFE.f1AFIPTest.AlicIva[(this.F1DetalleIvaItemCantidad - 1) + 1];
                                int VB_t_i4_L2 = this.F1DetalleIvaItemCantidad - 1;
                                nContador2 = 0;
                                while (nContador2 <= VB_t_i4_L2)
                                {
                                    WSAFIPFE.f1AFIPTest.AlicIva oPedidoItemIva = new WSAFIPFE.f1AFIPTest.AlicIva();
                                    this.IndiceItem = nContador2;
                                    oPedidoItemIva.BaseImp = this.F1DetalleIvaBaseImp;
                                    oPedidoItemIva.Id = this.F1DetalleIvaId;
                                    oPedidoItemIva.Importe = this.F1DetalleIvaImporte;
                                    oPedidoItemIvas[nContador2] = oPedidoItemIva;
                                    nContador2++;
                                }
                            }
                            oPedidoitem.Iva = oPedidoItemIvas;
                            if (this.F1DetalleOpcionalItemCantidad == 0)
                            {
                                oPedidoItemOpcionals = null;
                            }
                            else
                            {
                                oPedidoItemOpcionals = new WSAFIPFE.f1AFIPTest.Opcional[(this.F1DetalleIvaItemCantidad - 1) + 1];
                                int VB_t_i4_L3 = this.F1DetalleOpcionalItemCantidad - 1;
                                nContador2 = 0;
                                while (nContador2 <= VB_t_i4_L3)
                                {
                                    WSAFIPFE.f1AFIPTest.Opcional oPedidoItemOpcional = new WSAFIPFE.f1AFIPTest.Opcional();
                                    this.IndiceItem = nContador2;
                                    oPedidoItemOpcional.Id = this.F1DetalleOpcionalId;
                                    oPedidoItemOpcional.Valor = this.F1DetalleOpcionalValor;
                                    oPedidoItemOpcionals[nContador] = oPedidoItemOpcional;
                                    nContador2++;
                                }
                            }
                            oPedidoitem.Opcionales = oPedidoItemOpcionals;
                            if (this.F1DetalleTributoItemCantidad == 0)
                            {
                                oPedidoItemTributos = null;
                            }
                            else
                            {
                                oPedidoItemTributos = new WSAFIPFE.f1AFIPTest.Tributo[(this.F1DetalleTributoItemCantidad - 1) + 1];
                                int VB_t_i4_L4 = this.F1DetalleTributoItemCantidad - 1;
                                nContador2 = 0;
                                while (nContador2 <= VB_t_i4_L4)
                                {
                                    WSAFIPFE.f1AFIPTest.Tributo oPedidoItemTributo = new WSAFIPFE.f1AFIPTest.Tributo();
                                    this.IndiceItem = nContador2;
                                    oPedidoItemTributo.Alic = this.F1DetalleTributoAlic;
                                    oPedidoItemTributo.BaseImp = this.F1DetalleTributoBaseImp;
                                    oPedidoItemTributo.Desc = this.F1DetalleTributoDesc;
                                    oPedidoItemTributo.Id = (short) this.F1DetalleTributoId;
                                    oPedidoItemTributo.Importe = this.F1DetalleTributoImporte;
                                    oPedidoItemTributos[nContador2] = oPedidoItemTributo;
                                    nContador2++;
                                }
                            }
                            oPedidoitem.Tributos = oPedidoItemTributos;
                            oPedidoitem.Concepto = this.F1DetalleConcepto;
                            if (this.F1DetalleDocNro == "")
                            {
                                oPedidoitem.DocNro = Conversions.ToLong("");
                            }
                            else
                            {
                                oPedidoitem.DocNro = Conversions.ToLong(this.F1DetalleDocNro);
                            }
                            oPedidoitem.Concepto = this.F1DetalleConcepto;
                            oPedidoitem.DocTipo = this.F1DetalleDocTipo;
                            oPedidoitem.CbteFch = this.F1DetalleCbteFch;
                            oPedidoitem.FchServDesde = this.F1DetalleFchServDesde;
                            oPedidoitem.FchServHasta = this.F1DetalleFchServHasta;
                            oPedidoitem.FchVtoPago = this.F1DetalleFchVtoPago;
                            oPedidoitem.ImpIVA = this.F1DetalleImpIva;
                            oPedidoitem.ImpNeto = this.F1DetalleImpNeto;
                            this.F1DetalleImpOpEx = this.F1DetalleImpOpEx;
                            oPedidoitem.ImpTotal = this.F1DetalleImpTotal;
                            oPedidoitem.ImpTotConc = this.F1DetalleImpTotalConc;
                            oPedidoitem.ImpTrib = this.F1DetalleImpTrib;
                            oPedidoitem.MonCotiz = this.F1DetalleMonCotiz;
                            oPedidoitem.MonId = this.F1DetalleMonId;
                            oPedidoitem.CAEA = this.F1DetalleCAEA;
                            opedidoitems[nContador] = oPedidoitem;
                        }
                        oPedido.FeCabReq = oPedidoCabecera;
                        oPedido.FeDetReq = opedidoitems;
                        WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        if (this.ArchivoXMLEnviado != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIPTest.FECAERequest));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                                writer1.Serialize((TextWriter) file1, oPedido);
                                file1.Close();
                            }
                            catch (Exception exception2)
                            {
                                ProjectData.SetProjectError(exception2);
                                Exception miEx = exception2;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        WSAFIPFE.f1AFIPTest.FECAEAResponse oRespuesta = servicio.FECAEARegInformativo(autorizacion, oPedido);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIPTest.FECAEAResponse));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception3)
                            {
                                ProjectData.SetProjectError(exception3);
                                Exception miEx = exception3;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        this.indice = 0;
                        this.IndiceItem = 0;
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                        }
                        else
                        {
                            int value;
                            WSAFIPFE.f1AFIPTest.FECAEADetResponse[] oRespuestaDetalle = oRespuesta.FeDetResp;
                            if (oRespuesta.FeCabResp != null)
                            {
                                this.iF1RespuetaCantidadReg = oRespuesta.FeCabResp.CantReg;
                                this.strF1RespuestaFchProceso = oRespuesta.FeCabResp.FchProceso;
                                this.strF1RespuestaReProceso = oRespuesta.FeCabResp.Reproceso;
                                this.strF1RespuestaResultado = oRespuesta.FeCabResp.Resultado;
                            }
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L6 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L8 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            if (oRespuestaDetalle == null)
                            {
                                this.iF1RespuetaCantidadReg = 0;
                                bResultado = false;
                            }
                            else
                            {
                                this.iF1RespuetaCantidadReg = oRespuesta.FeDetResp.Length;
                                value = this.F1RespuestaCantidadReg;
                                this.aF1RespuestaDetalle = new F1DetalleRespuesta[(value - 1) + 1];
                                int VB_t_i4_L9 = this.iF1RespuetaCantidadReg - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                                {
                                    WSAFIPFE.f1AFIPTest.FECAEADetResponse oRespuestaDetalleItem = oRespuesta.FeDetResp[nContador];
                                    this.aF1RespuestaDetalle[nContador].CAE = "";
                                    this.aF1RespuestaDetalle[nContador].CAEA = oRespuestaDetalleItem.CAEA;
                                    this.aF1RespuestaDetalle[nContador].CAEFchVto = "";
                                    this.aF1RespuestaDetalle[nContador].CbteDesde = (int) oRespuestaDetalleItem.CbteDesde;
                                    this.aF1RespuestaDetalle[nContador].CbteFch = oRespuestaDetalleItem.CbteFch;
                                    this.aF1RespuestaDetalle[nContador].CbteHasta = (int) oRespuestaDetalleItem.CbteHasta;
                                    this.aF1RespuestaDetalle[nContador].concepto = oRespuestaDetalleItem.Concepto;
                                    this.aF1RespuestaDetalle[nContador].DocNro = oRespuestaDetalleItem.DocNro;
                                    this.aF1RespuestaDetalle[nContador].DocTipo = oRespuestaDetalleItem.DocTipo;
                                    this.aF1RespuestaDetalle[nContador].Resultado = oRespuestaDetalleItem.Resultado;
                                    int v1 = this.F1CabeceraCantReg - 1;
                                    if (oRespuestaDetalleItem.Observaciones == null)
                                    {
                                        this.aF1RespuestaDetalle[nContador].ObservacionItemCantidad = 0;
                                    }
                                    else
                                    {
                                        this.aF1RespuestaDetalle[nContador].ObservacionItemCantidad = oRespuestaDetalleItem.Observaciones.Length;
                                        if (oRespuestaDetalleItem.Observaciones.Length >= nLimite2)
                                        {
                                            int v2 = this.F1RespuestaDetalleObservacionItemCantidad - 1;
                                            this.aF1RespuestaDetalleObs = (F1DetalleRespuestaObs[,]) Microsoft.VisualBasic.CompilerServices.Utils.CopyArray((Array) this.aF1RespuestaDetalleObs, new F1DetalleRespuestaObs[v1 + 1, v2 + 1]);
                                            int VB_t_i4_L10 = this.F1RespuestaDetalleObservacionItemCantidad - 1;
                                            nContador2 = 0;
                                            while (nContador2 <= VB_t_i4_L10)
                                            {
                                                this.aF1RespuestaDetalleObs[nContador, nContador2].code = oRespuestaDetalleItem.Observaciones[nContador2].Code;
                                                this.aF1RespuestaDetalleObs[nContador, nContador2].msg = oRespuestaDetalleItem.Observaciones[nContador2].Msg;
                                                nContador2++;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.f1TicketValido & ((this.Modo == modoFiscal.Test) | ((this.Modo == modoFiscal.Fiscal) & this.f1LicenciaValidaCaea)))
            {
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception4)
                {
                    ProjectData.SetProjectError(exception4);
                    Exception ex = exception4;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.f1AFIP.FECAEARequest oPedido = new WSAFIPFE.f1AFIP.FECAEARequest();
                    WSAFIPFE.f1AFIP.FECAEACabRequest oPedidoCabecera = new WSAFIPFE.f1AFIP.FECAEACabRequest();
                    WSAFIPFE.f1AFIP.FECAEADetRequest[] opedidoitems = new WSAFIPFE.f1AFIP.FECAEADetRequest[(nLimite - 1) + 1];
                    WSAFIPFE.f1AFIP.CbteAsoc[] oPedidoItemCbteAsocs = new WSAFIPFE.f1AFIP.CbteAsoc[1];
                    WSAFIPFE.f1AFIP.AlicIva[] oPedidoItemIvas = new WSAFIPFE.f1AFIP.AlicIva[1];
                    WSAFIPFE.f1AFIP.Opcional[] oPedidoItemOpcionals = new WSAFIPFE.f1AFIP.Opcional[1];
                    WSAFIPFE.f1AFIP.Tributo[] oPedidoItemTributos = new WSAFIPFE.f1AFIP.Tributo[1];
                    oPedidoCabecera.CantReg = this.F1CabeceraCantReg;
                    oPedidoCabecera.CbteTipo = this.F1CabeceraCbteTipo;
                    oPedidoCabecera.PtoVta = this.F1CabeceraPtoVta;
                    int VB_t_i4_L11 = nLimite - 1;
                    for (nContador = 0; nContador <= VB_t_i4_L11; nContador++)
                    {
                        this.indice = nContador;
                        WSAFIPFE.f1AFIP.FECAEADetRequest oPedidoitem = new WSAFIPFE.f1AFIP.FECAEADetRequest();
                        oPedidoitem.CbteDesde = this.F1DetalleCbteDesde;
                        oPedidoitem.CbteHasta = this.F1DetalleCbteHasta;
                        if (this.F1DetalleCbtesAsocItemCantidad == 0)
                        {
                            oPedidoItemCbteAsocs = null;
                        }
                        else
                        {
                            oPedidoItemCbteAsocs = new WSAFIPFE.f1AFIP.CbteAsoc[(this.F1DetalleCbtesAsocItemCantidad - 1) + 1];
                            int VB_t_i4_L12 = this.F1DetalleCbtesAsocItemCantidad - 1;
                            nContador2 = 0;
                            while (nContador2 <= VB_t_i4_L12)
                            {
                                WSAFIPFE.f1AFIP.CbteAsoc oPedidoItemCbteAsoc = new WSAFIPFE.f1AFIP.CbteAsoc();
                                this.IndiceItem = nContador2;
                                oPedidoItemCbteAsoc.Nro = this.F1DetalleCbtesAsocNro;
                                oPedidoItemCbteAsoc.PtoVta = this.F1DetalleCbtesAsocPtoVta;
                                oPedidoItemCbteAsoc.Tipo = this.F1DetalleCbtesAsocTipo;
                                oPedidoItemCbteAsocs[nContador2] = oPedidoItemCbteAsoc;
                                nContador2++;
                            }
                        }
                        oPedidoitem.CbtesAsoc = oPedidoItemCbteAsocs;
                        if (this.F1DetalleIvaItemCantidad == 0)
                        {
                            oPedidoItemIvas = null;
                        }
                        else
                        {
                            oPedidoItemIvas = new WSAFIPFE.f1AFIP.AlicIva[(this.F1DetalleIvaItemCantidad - 1) + 1];
                            int VB_t_i4_L13 = this.F1DetalleIvaItemCantidad - 1;
                            nContador2 = 0;
                            while (nContador2 <= VB_t_i4_L13)
                            {
                                WSAFIPFE.f1AFIP.AlicIva oPedidoItemIva = new WSAFIPFE.f1AFIP.AlicIva();
                                this.IndiceItem = nContador2;
                                oPedidoItemIva.BaseImp = this.F1DetalleIvaBaseImp;
                                oPedidoItemIva.Id = this.F1DetalleIvaId;
                                oPedidoItemIva.Importe = this.F1DetalleIvaImporte;
                                oPedidoItemIvas[nContador2] = oPedidoItemIva;
                                nContador2++;
                            }
                        }
                        oPedidoitem.Iva = oPedidoItemIvas;
                        if (this.F1DetalleOpcionalItemCantidad == 0)
                        {
                            oPedidoItemOpcionals = null;
                        }
                        else
                        {
                            oPedidoItemOpcionals = new WSAFIPFE.f1AFIP.Opcional[(this.F1DetalleIvaItemCantidad - 1) + 1];
                            int VB_t_i4_L14 = this.F1DetalleOpcionalItemCantidad - 1;
                            nContador2 = 0;
                            while (nContador2 <= VB_t_i4_L14)
                            {
                                WSAFIPFE.f1AFIP.Opcional oPedidoItemOpcional = new WSAFIPFE.f1AFIP.Opcional();
                                this.IndiceItem = nContador2;
                                oPedidoItemOpcional.Id = this.F1DetalleOpcionalId;
                                oPedidoItemOpcional.Valor = this.F1DetalleOpcionalValor;
                                oPedidoItemOpcionals[nContador] = oPedidoItemOpcional;
                                nContador2++;
                            }
                        }
                        oPedidoitem.Opcionales = oPedidoItemOpcionals;
                        if (this.F1DetalleTributoItemCantidad == 0)
                        {
                            oPedidoItemTributos = null;
                        }
                        else
                        {
                            oPedidoItemTributos = new WSAFIPFE.f1AFIP.Tributo[(this.F1DetalleTributoItemCantidad - 1) + 1];
                            int VB_t_i4_L15 = this.F1DetalleTributoItemCantidad - 1;
                            nContador2 = 0;
                            while (nContador2 <= VB_t_i4_L15)
                            {
                                WSAFIPFE.f1AFIP.Tributo oPedidoItemTributo = new WSAFIPFE.f1AFIP.Tributo();
                                this.IndiceItem = nContador2;
                                oPedidoItemTributo.Alic = this.F1DetalleTributoAlic;
                                oPedidoItemTributo.BaseImp = this.F1DetalleTributoBaseImp;
                                oPedidoItemTributo.Desc = this.F1DetalleTributoDesc;
                                oPedidoItemTributo.Id = (short) this.F1DetalleTributoId;
                                oPedidoItemTributo.Importe = this.F1DetalleTributoImporte;
                                oPedidoItemTributos[nContador2] = oPedidoItemTributo;
                                nContador2++;
                            }
                        }
                        oPedidoitem.Tributos = oPedidoItemTributos;
                        oPedidoitem.Concepto = this.F1DetalleConcepto;
                        if (this.F1DetalleDocNro == "")
                        {
                            oPedidoitem.DocNro = Conversions.ToLong("");
                        }
                        else
                        {
                            oPedidoitem.DocNro = Conversions.ToLong(this.F1DetalleDocNro);
                        }
                        oPedidoitem.Concepto = this.F1DetalleConcepto;
                        oPedidoitem.DocTipo = this.F1DetalleDocTipo;
                        oPedidoitem.CbteFch = this.F1DetalleCbteFch;
                        oPedidoitem.FchServDesde = this.F1DetalleFchServDesde;
                        oPedidoitem.FchServHasta = this.F1DetalleFchServHasta;
                        oPedidoitem.FchVtoPago = this.F1DetalleFchVtoPago;
                        oPedidoitem.ImpIVA = this.F1DetalleImpIva;
                        oPedidoitem.ImpNeto = this.F1DetalleImpNeto;
                        this.F1DetalleImpOpEx = this.F1DetalleImpOpEx;
                        oPedidoitem.ImpTotal = this.F1DetalleImpTotal;
                        oPedidoitem.ImpTotConc = this.F1DetalleImpTotalConc;
                        oPedidoitem.ImpTrib = this.F1DetalleImpTrib;
                        oPedidoitem.MonCotiz = this.F1DetalleMonCotiz;
                        oPedidoitem.MonId = this.F1DetalleMonId;
                        oPedidoitem.CAEA = this.F1DetalleCAEA;
                        opedidoitems[nContador] = oPedidoitem;
                    }
                    oPedido.FeCabReq = oPedidoCabecera;
                    oPedido.FeDetReq = opedidoitems;
                    WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.f1DireccionServicioURL;
                    if (this.ArchivoXMLEnviado != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIP.FECAERequest));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                            writer1.Serialize((TextWriter) file1, oPedido);
                            file1.Close();
                        }
                        catch (Exception exception5)
                        {
                            ProjectData.SetProjectError(exception5);
                            Exception miEx = exception5;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    WSAFIPFE.f1AFIP.FECAEAResponse oRespuesta = servicio.FECAEARegInformativo(autorizacion, oPedido);
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIP.FECAEAResponse));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception6)
                        {
                            ProjectData.SetProjectError(exception6);
                            Exception miEx = exception6;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    this.indice = 0;
                    this.IndiceItem = 0;
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                    }
                    else
                    {
                        int value;
                        WSAFIPFE.f1AFIP.FECAEADetResponse[] oRespuestaDetalle = oRespuesta.FeDetResp;
                        if (oRespuesta.FeCabResp != null)
                        {
                            this.iF1RespuetaCantidadReg = oRespuesta.FeCabResp.CantReg;
                            this.strF1RespuestaFchProceso = oRespuesta.FeCabResp.FchProceso;
                            this.strF1RespuestaReProceso = oRespuesta.FeCabResp.Reproceso;
                            this.strF1RespuestaResultado = oRespuesta.FeCabResp.Resultado;
                        }
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L16 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L16; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L17 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L17; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L18 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L18; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L19 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L19; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        if (oRespuestaDetalle == null)
                        {
                            this.iF1RespuetaCantidadReg = 0;
                            bResultado = false;
                        }
                        else
                        {
                            this.iF1RespuetaCantidadReg = oRespuesta.FeDetResp.Length;
                            value = this.F1RespuestaCantidadReg;
                            this.aF1RespuestaDetalle = new F1DetalleRespuesta[(value - 1) + 1];
                            int VB_t_i4_L20 = this.iF1RespuetaCantidadReg - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L20; nContador++)
                            {
                                WSAFIPFE.f1AFIP.FECAEADetResponse oRespuestaDetalleItem = oRespuesta.FeDetResp[nContador];
                                this.aF1RespuestaDetalle[nContador].CAE = "";
                                this.aF1RespuestaDetalle[nContador].CAEA = oRespuestaDetalleItem.CAEA;
                                this.aF1RespuestaDetalle[nContador].CAEFchVto = "";
                                this.aF1RespuestaDetalle[nContador].CbteDesde = (int) oRespuestaDetalleItem.CbteDesde;
                                this.aF1RespuestaDetalle[nContador].CbteFch = oRespuestaDetalleItem.CbteFch;
                                this.aF1RespuestaDetalle[nContador].CbteHasta = (int) oRespuestaDetalleItem.CbteHasta;
                                this.aF1RespuestaDetalle[nContador].concepto = oRespuestaDetalleItem.Concepto;
                                this.aF1RespuestaDetalle[nContador].DocNro = oRespuestaDetalleItem.DocNro;
                                this.aF1RespuestaDetalle[nContador].DocTipo = oRespuestaDetalleItem.DocTipo;
                                this.aF1RespuestaDetalle[nContador].Resultado = oRespuestaDetalleItem.Resultado;
                                int v1 = this.F1CabeceraCantReg - 1;
                                if (oRespuestaDetalleItem.Observaciones == null)
                                {
                                    this.aF1RespuestaDetalle[nContador].ObservacionItemCantidad = 0;
                                }
                                else
                                {
                                    this.aF1RespuestaDetalle[nContador].ObservacionItemCantidad = oRespuestaDetalleItem.Observaciones.Length;
                                    if (oRespuestaDetalleItem.Observaciones.Length >= nLimite2)
                                    {
                                        int v2 = this.F1RespuestaDetalleObservacionItemCantidad - 1;
                                        this.aF1RespuestaDetalleObs = (F1DetalleRespuestaObs[,]) Microsoft.VisualBasic.CompilerServices.Utils.CopyArray((Array) this.aF1RespuestaDetalleObs, new F1DetalleRespuestaObs[v1 + 1, v2 + 1]);
                                        int VB_t_i4_L21 = this.F1RespuestaDetalleObservacionItemCantidad - 1;
                                        for (nContador2 = 0; nContador2 <= VB_t_i4_L21; nContador2++)
                                        {
                                            this.aF1RespuestaDetalleObs[nContador, nContador2].code = oRespuestaDetalleItem.Observaciones[nContador2].Code;
                                            this.aF1RespuestaDetalleObs[nContador, nContador2].msg = oRespuestaDetalleItem.Observaciones[nContador2].Msg;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    this.strUltimoMensajeError = this.f1ErrorMsg1;
                }
                return bResultado;
            }
            bResultado = false;
            if ((this.f1TicketValido & (this.Modo == modoFiscal.Fiscal)) & !this.f1LicenciaValidaCaea)
            {
                this.strUltimoMensajeError = "Licencia no v\x00e1lida";
            }
            return bResultado;
        }

        public bool F1CAEASinMovimientoConsultar(string strCAEA, int iPtoVta)
        {
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            bool bResultado = true;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.iF1RespuestaCAEAItemCantidad = 0;
            if (this.Modo == modoFiscal.Test)
            {
                if (this.f1TicketValido)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.f1AFIPTest.FECAEASinMovConsResponse oRespuesta = servicio.FECAEASinMovimientoConsultar(autorizacion, strCAEA, iPtoVta);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIPTest.FECAEASinMovConsResponse));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception2)
                            {
                                ProjectData.SetProjectError(exception2);
                                Exception miEx = exception2;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        this.IndiceItem = 0;
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                        }
                        else
                        {
                            int nContador;
                            int value;
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            if (oRespuesta.ResultGet == null)
                            {
                                this.iUltimoNumeroError = 0x65;
                                this.strUltimoMensajeError = "Sin detalle en la respuesta";
                                bResultado = false;
                            }
                            else
                            {
                                this.iF1RespuestaCAEAItemCantidad = oRespuesta.Events.Length;
                                value = this.iF1RespuestaCAEAItemCantidad;
                                this.aF1RespuestaDetalleCAEA = new F1DetalleRespuestaCAEA[(value - 1) + 1];
                                int VB_t_i4_L4 = this.iF1RespuestaCAEAItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                                {
                                    this.aF1RespuestaDetalleCAEA[nContador].CAEA = oRespuesta.ResultGet[nContador].CAEA;
                                    this.aF1RespuestaDetalleCAEA[nContador].FchProceso = oRespuesta.ResultGet[nContador].FchProceso;
                                    this.aF1RespuestaDetalleCAEA[nContador].PtoVta = oRespuesta.ResultGet[nContador].PtoVta;
                                }
                                bResultado = true;
                            }
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.f1TicketValido)
            {
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.f1DireccionServicioURL;
                    WSAFIPFE.f1AFIP.FECAEASinMovConsResponse oRespuesta = servicio.FECAEASinMovimientoConsultar(autorizacion, strCAEA, iPtoVta);
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIP.FECAEASinMovConsResponse));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            Exception miEx = exception4;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    this.IndiceItem = 0;
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                    }
                    else
                    {
                        int nContador;
                        int value;
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L6 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L8 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        if (oRespuesta.ResultGet == null)
                        {
                            this.iUltimoNumeroError = 0x65;
                            this.strUltimoMensajeError = "Sin detalle en la respuesta";
                            bResultado = false;
                        }
                        else
                        {
                            this.iF1RespuestaCAEAItemCantidad = oRespuesta.Events.Length;
                            value = this.iF1RespuestaCAEAItemCantidad;
                            this.aF1RespuestaDetalleCAEA = new F1DetalleRespuestaCAEA[(value - 1) + 1];
                            int VB_t_i4_L9 = this.iF1RespuestaCAEAItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                            {
                                this.aF1RespuestaDetalleCAEA[nContador].CAEA = oRespuesta.ResultGet[nContador].CAEA;
                                this.aF1RespuestaDetalleCAEA[nContador].FchProceso = oRespuesta.ResultGet[nContador].FchProceso;
                                this.aF1RespuestaDetalleCAEA[nContador].PtoVta = oRespuesta.ResultGet[nContador].PtoVta;
                            }
                            bResultado = true;
                        }
                    }
                    this.strUltimoMensajeError = this.f1ErrorMsg1;
                }
                return bResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return bResultado;
        }

        public bool F1CAEASinMovimientoInformar(int iPtoVta, string strCAEA)
        {
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            bool bResultado = true;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.strF1RespuestaCAEA = "";
            this.iF1RespuestaCAEAPeriodo = 0;
            this.iF1RespuestaCAEAOrden = 0;
            this.strF1RespuestaCAEAFchVigDesde = "";
            this.strF1RespuestaCAEAFchVigHasta = "";
            this.strF1RespuestaCAEAFchTopeInf = "";
            this.strF1RespuestaCAEAFchProceso = "";
            if (this.Modo == modoFiscal.Test)
            {
                if (this.f1TicketValido)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.f1AFIPTest.FECAEASinMovResponse oRespuesta = servicio.FECAEASinMovimientoInformar(autorizacion, iPtoVta, strCAEA);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIPTest.FECAEASinMovResponse));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception2)
                            {
                                ProjectData.SetProjectError(exception2);
                                Exception miEx = exception2;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        this.IndiceItem = 0;
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                        }
                        else
                        {
                            int nContador;
                            int value;
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            this.strF1RespuestaCAEA = oRespuesta.CAEA;
                            this.strF1RespuestaCAEAFchProceso = oRespuesta.FchProceso;
                            this.iF1RespuestaCAEAPtoVta = oRespuesta.PtoVta;
                            this.strF1RespuestaResultado = oRespuesta.Resultado;
                            bResultado = true;
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.f1TicketValido)
            {
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.f1DireccionServicioURL;
                    WSAFIPFE.f1AFIP.FECAEASinMovResponse oRespuesta = servicio.FECAEASinMovimientoInformar(autorizacion, iPtoVta, strCAEA);
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIP.FECAEASinMovResponse));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            Exception miEx = exception4;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    this.IndiceItem = 0;
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                    }
                    else
                    {
                        int nContador;
                        int value;
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L4 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L6 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        this.strF1RespuestaCAEA = oRespuesta.CAEA;
                        this.strF1RespuestaCAEAFchProceso = oRespuesta.FchProceso;
                        this.iF1RespuestaCAEAPtoVta = oRespuesta.PtoVta;
                        this.strF1RespuestaResultado = oRespuesta.Resultado;
                        bResultado = true;
                    }
                    this.strUltimoMensajeError = this.f1ErrorMsg1;
                }
                return bResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return bResultado;
        }

        public bool F1CAEASolicitar(int iPeriodo, int iOrden)
        {
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            bool bResultado = true;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.strF1RespuestaCAEA = "";
            this.iF1RespuestaCAEAPeriodo = 0;
            this.iF1RespuestaCAEAOrden = 0;
            this.strF1RespuestaCAEAFchVigDesde = "";
            this.strF1RespuestaCAEAFchVigHasta = "";
            this.strF1RespuestaCAEAFchTopeInf = "";
            this.strF1RespuestaCAEAFchProceso = "";
            if (this.Modo == modoFiscal.Test)
            {
                if (this.f1TicketValido)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        short ord = (short) iOrden;
                        WSAFIPFE.f1AFIPTest.FECAEAGetResponse oRespuesta = servicio.FECAEASolicitar(autorizacion, iPeriodo, ord);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIPTest.FECAEAGetResponse));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception2)
                            {
                                ProjectData.SetProjectError(exception2);
                                Exception miEx = exception2;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        this.IndiceItem = 0;
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                        }
                        else
                        {
                            int nContador;
                            int value;
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            if (oRespuesta.ResultGet == null)
                            {
                                this.iUltimoNumeroError = 0x65;
                                this.strUltimoMensajeError = "Sin detalle en la respuesta";
                                bResultado = false;
                            }
                            else
                            {
                                this.strF1RespuestaCAEA = oRespuesta.ResultGet.CAEA;
                                this.iF1RespuestaCAEAPeriodo = oRespuesta.ResultGet.Periodo;
                                this.iF1RespuestaCAEAOrden = oRespuesta.ResultGet.Orden;
                                this.strF1RespuestaCAEAFchVigDesde = oRespuesta.ResultGet.FchVigDesde;
                                this.strF1RespuestaCAEAFchVigHasta = oRespuesta.ResultGet.FchVigHasta;
                                this.strF1RespuestaCAEAFchTopeInf = oRespuesta.ResultGet.FchTopeInf;
                                this.strF1RespuestaCAEAFchProceso = oRespuesta.ResultGet.FchProceso;
                                if (oRespuesta.ResultGet.CAEA == null)
                                {
                                    bResultado = false;
                                }
                            }
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.f1TicketValido)
            {
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.f1DireccionServicioURL;
                    short ord = (short) iOrden;
                    WSAFIPFE.f1AFIP.FECAEAGetResponse oRespuesta = servicio.FECAEASolicitar(autorizacion, iPeriodo, ord);
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIP.FECAEAGetResponse));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            Exception miEx = exception4;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    this.IndiceItem = 0;
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                    }
                    else
                    {
                        int nContador;
                        int value;
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L4 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L6 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        if (oRespuesta.ResultGet == null)
                        {
                            this.iUltimoNumeroError = 0x65;
                            this.strUltimoMensajeError = "Sin detalle en la respuesta";
                            bResultado = false;
                        }
                        else
                        {
                            this.strF1RespuestaCAEA = oRespuesta.ResultGet.CAEA;
                            this.iF1RespuestaCAEAPeriodo = oRespuesta.ResultGet.Periodo;
                            this.iF1RespuestaCAEAOrden = oRespuesta.ResultGet.Orden;
                            this.strF1RespuestaCAEAFchVigDesde = oRespuesta.ResultGet.FchVigDesde;
                            this.strF1RespuestaCAEAFchVigHasta = oRespuesta.ResultGet.FchVigHasta;
                            this.strF1RespuestaCAEAFchTopeInf = oRespuesta.ResultGet.FchTopeInf;
                            this.strF1RespuestaCAEAFchProceso = oRespuesta.ResultGet.FchProceso;
                            if (oRespuesta.ResultGet.CAEA == null)
                            {
                                bResultado = false;
                            }
                        }
                    }
                    this.strUltimoMensajeError = this.f1ErrorMsg1;
                }
                return bResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return bResultado;
        }

        public bool f1CAEASolicitarS(string strPeriodo, string strOrden)
        {
            int iPeriodo = Conversions.ToInteger(strPeriodo);
            int iOrden = Conversions.ToInteger(strOrden);
            return this.F1CAEASolicitar(iPeriodo, iOrden);
        }

        public bool F1CAESolicitar()
        {
            int nContador;
            int nContador2;
            int nLimite2;
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            bool bResultado = true;
            int nLimite = this.F1CabeceraCantReg;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.strPermsg = "";
            this.iF1RespuetaCantidadReg = 0;
            this.strF1RespuestaFchProceso = "";
            this.strF1RespuestaReProceso = "";
            this.strF1RespuestaResultado = "";
            this.iF1RespuetaCantidadReg = 0;
            this.aF1RespuestaDetalleObs = new F1DetalleRespuestaObs[1, 1];
            if (((this.Modo == modoFiscal.Fiscal) & (nLimite > 1)) & !this.LicenciaLote)
            {
                this.iUltimoNumeroError = 0x3dd;
                this.strUltimoMensajeError = "Licencia inv\x00e1lida para el modo lote";
                return false;
            }
            if (this.Modo == modoFiscal.Test)
            {
                if (this.f1TicketValido)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.f1AFIPTest.FECAERequest oPedido = new WSAFIPFE.f1AFIPTest.FECAERequest();
                        WSAFIPFE.f1AFIPTest.FECAECabRequest oPedidoCabecera = new WSAFIPFE.f1AFIPTest.FECAECabRequest();
                        WSAFIPFE.f1AFIPTest.FECAEDetRequest[] opedidoitems = new WSAFIPFE.f1AFIPTest.FECAEDetRequest[(nLimite - 1) + 1];
                        WSAFIPFE.f1AFIPTest.CbteAsoc[] oPedidoItemCbteAsocs = new WSAFIPFE.f1AFIPTest.CbteAsoc[1];
                        WSAFIPFE.f1AFIPTest.AlicIva[] oPedidoItemIvas = new WSAFIPFE.f1AFIPTest.AlicIva[1];
                        WSAFIPFE.f1AFIPTest.Opcional[] oPedidoItemOpcionals = new WSAFIPFE.f1AFIPTest.Opcional[1];
                        WSAFIPFE.f1AFIPTest.Tributo[] oPedidoItemTributos = new WSAFIPFE.f1AFIPTest.Tributo[1];
                        oPedidoCabecera.CantReg = this.F1CabeceraCantReg;
                        oPedidoCabecera.CbteTipo = this.F1CabeceraCbteTipo;
                        oPedidoCabecera.PtoVta = this.F1CabeceraPtoVta;
                        int VB_t_i4_L0 = nLimite - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                        {
                            this.indice = nContador;
                            WSAFIPFE.f1AFIPTest.FECAEDetRequest oPedidoitem = new WSAFIPFE.f1AFIPTest.FECAEDetRequest();
                            oPedidoitem.CbteDesde = this.F1DetalleCbteDesde;
                            oPedidoitem.CbteHasta = this.F1DetalleCbteHasta;
                            if (this.F1DetalleCbtesAsocItemCantidad == 0)
                            {
                                oPedidoItemCbteAsocs = null;
                            }
                            else
                            {
                                oPedidoItemCbteAsocs = new WSAFIPFE.f1AFIPTest.CbteAsoc[(this.F1DetalleCbtesAsocItemCantidad - 1) + 1];
                                int VB_t_i4_L1 = this.F1DetalleCbtesAsocItemCantidad - 1;
                                nContador2 = 0;
                                while (nContador2 <= VB_t_i4_L1)
                                {
                                    WSAFIPFE.f1AFIPTest.CbteAsoc oPedidoItemCbteAsoc = new WSAFIPFE.f1AFIPTest.CbteAsoc();
                                    this.IndiceItem = nContador2;
                                    oPedidoItemCbteAsoc.Nro = this.F1DetalleCbtesAsocNro;
                                    oPedidoItemCbteAsoc.PtoVta = this.F1DetalleCbtesAsocPtoVta;
                                    oPedidoItemCbteAsoc.Tipo = this.F1DetalleCbtesAsocTipo;
                                    oPedidoItemCbteAsocs[nContador2] = oPedidoItemCbteAsoc;
                                    nContador2++;
                                }
                            }
                            oPedidoitem.CbtesAsoc = oPedidoItemCbteAsocs;
                            if (this.F1DetalleIvaItemCantidad == 0)
                            {
                                oPedidoItemIvas = null;
                            }
                            else
                            {
                                oPedidoItemIvas = new WSAFIPFE.f1AFIPTest.AlicIva[(this.F1DetalleIvaItemCantidad - 1) + 1];
                                int VB_t_i4_L2 = this.F1DetalleIvaItemCantidad - 1;
                                nContador2 = 0;
                                while (nContador2 <= VB_t_i4_L2)
                                {
                                    WSAFIPFE.f1AFIPTest.AlicIva oPedidoItemIva = new WSAFIPFE.f1AFIPTest.AlicIva();
                                    this.IndiceItem = nContador2;
                                    oPedidoItemIva.BaseImp = this.F1DetalleIvaBaseImp;
                                    oPedidoItemIva.Id = this.F1DetalleIvaId;
                                    oPedidoItemIva.Importe = this.F1DetalleIvaImporte;
                                    oPedidoItemIvas[nContador2] = oPedidoItemIva;
                                    nContador2++;
                                }
                            }
                            oPedidoitem.Iva = oPedidoItemIvas;
                            if (this.F1DetalleOpcionalItemCantidad == 0)
                            {
                                oPedidoItemOpcionals = null;
                            }
                            else
                            {
                                oPedidoItemOpcionals = new WSAFIPFE.f1AFIPTest.Opcional[(this.F1DetalleIvaItemCantidad - 1) + 1];
                                int VB_t_i4_L3 = this.F1DetalleOpcionalItemCantidad - 1;
                                nContador2 = 0;
                                while (nContador2 <= VB_t_i4_L3)
                                {
                                    WSAFIPFE.f1AFIPTest.Opcional oPedidoItemOpcional = new WSAFIPFE.f1AFIPTest.Opcional();
                                    this.IndiceItem = nContador2;
                                    oPedidoItemOpcional.Id = this.F1DetalleOpcionalId;
                                    oPedidoItemOpcional.Valor = this.F1DetalleOpcionalValor;
                                    oPedidoItemOpcionals[nContador] = oPedidoItemOpcional;
                                    nContador2++;
                                }
                            }
                            oPedidoitem.Opcionales = oPedidoItemOpcionals;
                            if (this.F1DetalleTributoItemCantidad == 0)
                            {
                                oPedidoItemTributos = null;
                            }
                            else
                            {
                                oPedidoItemTributos = new WSAFIPFE.f1AFIPTest.Tributo[(this.F1DetalleTributoItemCantidad - 1) + 1];
                                int VB_t_i4_L4 = this.F1DetalleTributoItemCantidad - 1;
                                nContador2 = 0;
                                while (nContador2 <= VB_t_i4_L4)
                                {
                                    WSAFIPFE.f1AFIPTest.Tributo oPedidoItemTributo = new WSAFIPFE.f1AFIPTest.Tributo();
                                    this.IndiceItem = nContador2;
                                    oPedidoItemTributo.Alic = this.F1DetalleTributoAlic;
                                    oPedidoItemTributo.BaseImp = this.F1DetalleTributoBaseImp;
                                    oPedidoItemTributo.Desc = this.F1DetalleTributoDesc;
                                    oPedidoItemTributo.Id = (short) this.F1DetalleTributoId;
                                    oPedidoItemTributo.Importe = this.F1DetalleTributoImporte;
                                    oPedidoItemTributos[nContador2] = oPedidoItemTributo;
                                    nContador2++;
                                }
                            }
                            oPedidoitem.Tributos = oPedidoItemTributos;
                            oPedidoitem.Concepto = this.F1DetalleConcepto;
                            if (this.F1DetalleDocNro == "")
                            {
                                oPedidoitem.DocNro = Conversions.ToLong("");
                            }
                            else
                            {
                                oPedidoitem.DocNro = Conversions.ToLong(this.F1DetalleDocNro);
                            }
                            oPedidoitem.Concepto = this.F1DetalleConcepto;
                            oPedidoitem.DocTipo = this.F1DetalleDocTipo;
                            oPedidoitem.CbteFch = this.F1DetalleCbteFch;
                            oPedidoitem.FchServDesde = this.F1DetalleFchServDesde;
                            oPedidoitem.FchServHasta = this.F1DetalleFchServHasta;
                            oPedidoitem.FchVtoPago = this.F1DetalleFchVtoPago;
                            oPedidoitem.ImpIVA = this.F1DetalleImpIva;
                            oPedidoitem.ImpNeto = this.F1DetalleImpNeto;
                            oPedidoitem.ImpOpEx = this.F1DetalleImpOpEx;
                            oPedidoitem.ImpTotal = this.F1DetalleImpTotal;
                            oPedidoitem.ImpTotConc = this.F1DetalleImpTotalConc;
                            oPedidoitem.ImpTrib = this.F1DetalleImpTrib;
                            oPedidoitem.MonCotiz = this.F1DetalleMonCotiz;
                            oPedidoitem.MonId = this.F1DetalleMonId;
                            opedidoitems[nContador] = oPedidoitem;
                        }
                        oPedido.FeCabReq = oPedidoCabecera;
                        oPedido.FeDetReq = opedidoitems;
                        WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        if (this.ArchivoXMLEnviado != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIPTest.FECAERequest));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                                writer1.Serialize((TextWriter) file1, oPedido);
                                file1.Close();
                            }
                            catch (Exception exception2)
                            {
                                ProjectData.SetProjectError(exception2);
                                Exception miEx = exception2;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        WSAFIPFE.f1AFIPTest.FECAEResponse oRespuesta = servicio.FECAESolicitar(autorizacion, oPedido);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIPTest.FECAEResponse));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception3)
                            {
                                ProjectData.SetProjectError(exception3);
                                Exception miEx = exception3;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        this.indice = 0;
                        this.IndiceItem = 0;
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                        }
                        else
                        {
                            int value;
                            WSAFIPFE.f1AFIPTest.FECAEDetResponse[] oRespuestaDetalle = oRespuesta.FeDetResp;
                            if (oRespuesta.FeCabResp != null)
                            {
                                this.iF1RespuetaCantidadReg = oRespuesta.FeCabResp.CantReg;
                                this.strF1RespuestaFchProceso = oRespuesta.FeCabResp.FchProceso;
                                this.strF1RespuestaReProceso = oRespuesta.FeCabResp.Reproceso;
                                this.strF1RespuestaResultado = oRespuesta.FeCabResp.Resultado;
                            }
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L6 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L8 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            if (oRespuestaDetalle == null)
                            {
                                this.iF1RespuetaCantidadReg = 0;
                                bResultado = false;
                            }
                            else
                            {
                                this.iF1RespuetaCantidadReg = oRespuesta.FeDetResp.Length;
                                value = this.F1RespuestaCantidadReg;
                                this.aF1RespuestaDetalle = new F1DetalleRespuesta[(value - 1) + 1];
                                int VB_t_i4_L9 = this.iF1RespuetaCantidadReg - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                                {
                                    WSAFIPFE.f1AFIPTest.FECAEDetResponse oRespuestaDetalleItem = oRespuesta.FeDetResp[nContador];
                                    this.aF1RespuestaDetalle[nContador].CAE = oRespuestaDetalleItem.CAE;
                                    if (oRespuestaDetalleItem.CAE == "NULL")
                                    {
                                        bResultado = false;
                                    }
                                    this.aF1RespuestaDetalle[nContador].CAEFchVto = oRespuestaDetalleItem.CAEFchVto;
                                    this.aF1RespuestaDetalle[nContador].CbteDesde = (int) oRespuestaDetalleItem.CbteDesde;
                                    this.aF1RespuestaDetalle[nContador].CbteFch = oRespuestaDetalleItem.CbteFch;
                                    this.aF1RespuestaDetalle[nContador].CbteHasta = (int) oRespuestaDetalleItem.CbteHasta;
                                    this.aF1RespuestaDetalle[nContador].concepto = oRespuestaDetalleItem.Concepto;
                                    this.aF1RespuestaDetalle[nContador].DocNro = oRespuestaDetalleItem.DocNro;
                                    this.aF1RespuestaDetalle[nContador].DocTipo = oRespuestaDetalleItem.DocTipo;
                                    this.aF1RespuestaDetalle[nContador].Resultado = oRespuestaDetalleItem.Resultado;
                                    int v1 = this.F1CabeceraCantReg - 1;
                                    if (oRespuestaDetalleItem.Observaciones == null)
                                    {
                                        this.aF1RespuestaDetalle[nContador].ObservacionItemCantidad = 0;
                                    }
                                    else
                                    {
                                        this.aF1RespuestaDetalle[nContador].ObservacionItemCantidad = oRespuestaDetalleItem.Observaciones.Length;
                                        if (oRespuestaDetalleItem.Observaciones.Length >= nLimite2)
                                        {
                                            int v2 = this.F1RespuestaDetalleObservacionItemCantidad - 1;
                                            this.aF1RespuestaDetalleObs = (F1DetalleRespuestaObs[,]) Microsoft.VisualBasic.CompilerServices.Utils.CopyArray((Array) this.aF1RespuestaDetalleObs, new F1DetalleRespuestaObs[v1 + 1, v2 + 1]);
                                            int VB_t_i4_L10 = this.F1RespuestaDetalleObservacionItemCantidad - 1;
                                            nContador2 = 0;
                                            while (nContador2 <= VB_t_i4_L10)
                                            {
                                                this.aF1RespuestaDetalleObs[nContador, nContador2].code = oRespuestaDetalleItem.Observaciones[nContador2].Code;
                                                this.aF1RespuestaDetalleObs[nContador, nContador2].msg = oRespuestaDetalleItem.Observaciones[nContador2].Msg;
                                                nContador2++;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.f1TicketValido & ((this.Modo == modoFiscal.Test) | ((this.Modo == modoFiscal.Fiscal) & this.f1LicenciaValidaCae)))
            {
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception4)
                {
                    ProjectData.SetProjectError(exception4);
                    Exception ex = exception4;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.f1AFIP.FECAERequest oPedido = new WSAFIPFE.f1AFIP.FECAERequest();
                    WSAFIPFE.f1AFIP.FECAECabRequest oPedidoCabecera = new WSAFIPFE.f1AFIP.FECAECabRequest();
                    WSAFIPFE.f1AFIP.FECAEDetRequest[] opedidoitems = new WSAFIPFE.f1AFIP.FECAEDetRequest[(nLimite - 1) + 1];
                    WSAFIPFE.f1AFIP.CbteAsoc[] oPedidoItemCbteAsocs = new WSAFIPFE.f1AFIP.CbteAsoc[1];
                    WSAFIPFE.f1AFIP.AlicIva[] oPedidoItemIvas = new WSAFIPFE.f1AFIP.AlicIva[1];
                    WSAFIPFE.f1AFIP.Opcional[] oPedidoItemOpcionals = new WSAFIPFE.f1AFIP.Opcional[1];
                    WSAFIPFE.f1AFIP.Tributo[] oPedidoItemTributos = new WSAFIPFE.f1AFIP.Tributo[1];
                    oPedidoCabecera.CantReg = this.F1CabeceraCantReg;
                    oPedidoCabecera.CbteTipo = this.F1CabeceraCbteTipo;
                    oPedidoCabecera.PtoVta = this.F1CabeceraPtoVta;
                    int VB_t_i4_L11 = nLimite - 1;
                    for (nContador = 0; nContador <= VB_t_i4_L11; nContador++)
                    {
                        this.indice = nContador;
                        WSAFIPFE.f1AFIP.FECAEDetRequest oPedidoitem = new WSAFIPFE.f1AFIP.FECAEDetRequest();
                        oPedidoitem.CbteDesde = this.F1DetalleCbteDesde;
                        oPedidoitem.CbteHasta = this.F1DetalleCbteHasta;
                        if (this.F1DetalleCbtesAsocItemCantidad == 0)
                        {
                            oPedidoItemCbteAsocs = null;
                        }
                        else
                        {
                            oPedidoItemCbteAsocs = new WSAFIPFE.f1AFIP.CbteAsoc[(this.F1DetalleCbtesAsocItemCantidad - 1) + 1];
                            int VB_t_i4_L12 = this.F1DetalleCbtesAsocItemCantidad - 1;
                            nContador2 = 0;
                            while (nContador2 <= VB_t_i4_L12)
                            {
                                WSAFIPFE.f1AFIP.CbteAsoc oPedidoItemCbteAsoc = new WSAFIPFE.f1AFIP.CbteAsoc();
                                this.IndiceItem = nContador2;
                                oPedidoItemCbteAsoc.Nro = this.F1DetalleCbtesAsocNro;
                                oPedidoItemCbteAsoc.PtoVta = this.F1DetalleCbtesAsocPtoVta;
                                oPedidoItemCbteAsoc.Tipo = this.F1DetalleCbtesAsocTipo;
                                oPedidoItemCbteAsocs[nContador2] = oPedidoItemCbteAsoc;
                                nContador2++;
                            }
                        }
                        oPedidoitem.CbtesAsoc = oPedidoItemCbteAsocs;
                        if (this.F1DetalleIvaItemCantidad == 0)
                        {
                            oPedidoItemIvas = null;
                        }
                        else
                        {
                            oPedidoItemIvas = new WSAFIPFE.f1AFIP.AlicIva[(this.F1DetalleIvaItemCantidad - 1) + 1];
                            int VB_t_i4_L13 = this.F1DetalleIvaItemCantidad - 1;
                            nContador2 = 0;
                            while (nContador2 <= VB_t_i4_L13)
                            {
                                WSAFIPFE.f1AFIP.AlicIva oPedidoItemIva = new WSAFIPFE.f1AFIP.AlicIva();
                                this.IndiceItem = nContador2;
                                oPedidoItemIva.BaseImp = this.F1DetalleIvaBaseImp;
                                oPedidoItemIva.Id = this.F1DetalleIvaId;
                                oPedidoItemIva.Importe = this.F1DetalleIvaImporte;
                                oPedidoItemIvas[nContador2] = oPedidoItemIva;
                                nContador2++;
                            }
                        }
                        oPedidoitem.Iva = oPedidoItemIvas;
                        if (this.F1DetalleOpcionalItemCantidad == 0)
                        {
                            oPedidoItemOpcionals = null;
                        }
                        else
                        {
                            oPedidoItemOpcionals = new WSAFIPFE.f1AFIP.Opcional[(this.F1DetalleIvaItemCantidad - 1) + 1];
                            int VB_t_i4_L14 = this.F1DetalleOpcionalItemCantidad - 1;
                            nContador2 = 0;
                            while (nContador2 <= VB_t_i4_L14)
                            {
                                WSAFIPFE.f1AFIP.Opcional oPedidoItemOpcional = new WSAFIPFE.f1AFIP.Opcional();
                                this.IndiceItem = nContador2;
                                oPedidoItemOpcional.Id = this.F1DetalleOpcionalId;
                                oPedidoItemOpcional.Valor = this.F1DetalleOpcionalValor;
                                oPedidoItemOpcionals[nContador] = oPedidoItemOpcional;
                                nContador2++;
                            }
                        }
                        oPedidoitem.Opcionales = oPedidoItemOpcionals;
                        if (this.F1DetalleTributoItemCantidad == 0)
                        {
                            oPedidoItemTributos = null;
                        }
                        else
                        {
                            oPedidoItemTributos = new WSAFIPFE.f1AFIP.Tributo[(this.F1DetalleTributoItemCantidad - 1) + 1];
                            int VB_t_i4_L15 = this.F1DetalleTributoItemCantidad - 1;
                            nContador2 = 0;
                            while (nContador2 <= VB_t_i4_L15)
                            {
                                WSAFIPFE.f1AFIP.Tributo oPedidoItemTributo = new WSAFIPFE.f1AFIP.Tributo();
                                this.IndiceItem = nContador2;
                                oPedidoItemTributo.Alic = this.F1DetalleTributoAlic;
                                oPedidoItemTributo.BaseImp = this.F1DetalleTributoBaseImp;
                                oPedidoItemTributo.Desc = this.F1DetalleTributoDesc;
                                oPedidoItemTributo.Id = (short) this.F1DetalleTributoId;
                                oPedidoItemTributo.Importe = this.F1DetalleTributoImporte;
                                oPedidoItemTributos[nContador2] = oPedidoItemTributo;
                                nContador2++;
                            }
                        }
                        oPedidoitem.Tributos = oPedidoItemTributos;
                        oPedidoitem.Concepto = this.F1DetalleConcepto;
                        if (this.F1DetalleDocNro == "")
                        {
                            oPedidoitem.DocNro = Conversions.ToLong("");
                        }
                        else
                        {
                            oPedidoitem.DocNro = Conversions.ToLong(this.F1DetalleDocNro);
                        }
                        oPedidoitem.Concepto = this.F1DetalleConcepto;
                        oPedidoitem.DocTipo = this.F1DetalleDocTipo;
                        oPedidoitem.CbteFch = this.F1DetalleCbteFch;
                        oPedidoitem.FchServDesde = this.F1DetalleFchServDesde;
                        oPedidoitem.FchServHasta = this.F1DetalleFchServHasta;
                        oPedidoitem.FchVtoPago = this.F1DetalleFchVtoPago;
                        oPedidoitem.ImpIVA = this.F1DetalleImpIva;
                        oPedidoitem.ImpNeto = this.F1DetalleImpNeto;
                        oPedidoitem.ImpOpEx = this.F1DetalleImpOpEx;
                        oPedidoitem.ImpTotal = this.F1DetalleImpTotal;
                        oPedidoitem.ImpTotConc = this.F1DetalleImpTotalConc;
                        oPedidoitem.ImpTrib = this.F1DetalleImpTrib;
                        oPedidoitem.MonCotiz = this.F1DetalleMonCotiz;
                        oPedidoitem.MonId = this.F1DetalleMonId;
                        opedidoitems[nContador] = oPedidoitem;
                    }
                    oPedido.FeCabReq = oPedidoCabecera;
                    oPedido.FeDetReq = opedidoitems;
                    WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.f1DireccionServicioURL;
                    if (this.ArchivoXMLEnviado != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIP.FECAERequest));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                            writer1.Serialize((TextWriter) file1, oPedido);
                            file1.Close();
                        }
                        catch (Exception exception5)
                        {
                            ProjectData.SetProjectError(exception5);
                            Exception miEx = exception5;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    WSAFIPFE.f1AFIP.FECAEResponse oRespuesta = servicio.FECAESolicitar(autorizacion, oPedido);
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIP.FECAEResponse));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception6)
                        {
                            ProjectData.SetProjectError(exception6);
                            Exception miEx = exception6;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    this.indice = 0;
                    this.IndiceItem = 0;
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                    }
                    else
                    {
                        int value;
                        WSAFIPFE.f1AFIP.FECAEDetResponse[] oRespuestaDetalle = oRespuesta.FeDetResp;
                        if (oRespuesta.FeCabResp != null)
                        {
                            this.iF1RespuetaCantidadReg = oRespuesta.FeCabResp.CantReg;
                            this.strF1RespuestaFchProceso = oRespuesta.FeCabResp.FchProceso;
                            this.strF1RespuestaReProceso = oRespuesta.FeCabResp.Reproceso;
                            this.strF1RespuestaResultado = oRespuesta.FeCabResp.Resultado;
                        }
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L16 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L16; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L17 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L17; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L18 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L18; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L19 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L19; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        if (oRespuestaDetalle == null)
                        {
                            this.iF1RespuetaCantidadReg = 0;
                            bResultado = false;
                        }
                        else
                        {
                            this.iF1RespuetaCantidadReg = oRespuesta.FeDetResp.Length;
                            value = this.F1RespuestaCantidadReg;
                            this.aF1RespuestaDetalle = new F1DetalleRespuesta[(value - 1) + 1];
                            int VB_t_i4_L20 = this.iF1RespuetaCantidadReg - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L20; nContador++)
                            {
                                WSAFIPFE.f1AFIP.FECAEDetResponse oRespuestaDetalleItem = oRespuesta.FeDetResp[nContador];
                                this.aF1RespuestaDetalle[nContador].CAE = oRespuestaDetalleItem.CAE;
                                if (oRespuestaDetalleItem.CAE == "NULL")
                                {
                                    bResultado = false;
                                }
                                this.aF1RespuestaDetalle[nContador].CAEFchVto = oRespuestaDetalleItem.CAEFchVto;
                                this.aF1RespuestaDetalle[nContador].CbteDesde = (int) oRespuestaDetalleItem.CbteDesde;
                                this.aF1RespuestaDetalle[nContador].CbteFch = oRespuestaDetalleItem.CbteFch;
                                this.aF1RespuestaDetalle[nContador].CbteHasta = (int) oRespuestaDetalleItem.CbteHasta;
                                this.aF1RespuestaDetalle[nContador].concepto = oRespuestaDetalleItem.Concepto;
                                this.aF1RespuestaDetalle[nContador].DocNro = oRespuestaDetalleItem.DocNro;
                                this.aF1RespuestaDetalle[nContador].DocTipo = oRespuestaDetalleItem.DocTipo;
                                this.aF1RespuestaDetalle[nContador].Resultado = oRespuestaDetalleItem.Resultado;
                                int v1 = this.F1CabeceraCantReg - 1;
                                if (oRespuestaDetalleItem.Observaciones == null)
                                {
                                    this.aF1RespuestaDetalle[nContador].ObservacionItemCantidad = 0;
                                }
                                else
                                {
                                    this.aF1RespuestaDetalle[nContador].ObservacionItemCantidad = oRespuestaDetalleItem.Observaciones.Length;
                                    if (oRespuestaDetalleItem.Observaciones.Length >= nLimite2)
                                    {
                                        int v2 = this.F1RespuestaDetalleObservacionItemCantidad - 1;
                                        this.aF1RespuestaDetalleObs = (F1DetalleRespuestaObs[,]) Microsoft.VisualBasic.CompilerServices.Utils.CopyArray((Array) this.aF1RespuestaDetalleObs, new F1DetalleRespuestaObs[v1 + 1, v2 + 1]);
                                        int VB_t_i4_L21 = this.F1RespuestaDetalleObservacionItemCantidad - 1;
                                        for (nContador2 = 0; nContador2 <= VB_t_i4_L21; nContador2++)
                                        {
                                            this.aF1RespuestaDetalleObs[nContador, nContador2].code = oRespuestaDetalleItem.Observaciones[nContador2].Code;
                                            this.aF1RespuestaDetalleObs[nContador, nContador2].msg = oRespuestaDetalleItem.Observaciones[nContador2].Msg;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    this.strUltimoMensajeError = this.f1ErrorMsg1;
                }
                return bResultado;
            }
            bResultado = false;
            if ((this.f1TicketValido & (this.Modo == modoFiscal.Fiscal)) & !this.f1LicenciaValidaCae)
            {
                this.strUltimoMensajeError = "Licencia no v\x00e1lida";
            }
            return bResultado;
        }

        public bool F1CompConsultar(int iPtoVta, int iCbteTipo, int iCbteNro)
        {
            int nContador;
            int nContador2;
            int nLimite2;
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            bool bResultado = true;
            int nLimite = this.F1CabeceraCantReg;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.strPermsg = "";
            this.iF1RespuetaCantidadReg = 0;
            this.strF1RespuestaFchProceso = "";
            this.strF1RespuestaReProceso = "";
            this.strF1RespuestaResultado = "";
            this.iF1RespuetaCantidadReg = 0;
            this.aF1RespuestaDetalleObs = new F1DetalleRespuestaObs[1, 1];
            if (((this.Modo == modoFiscal.Fiscal) & (nLimite > 1)) & !this.LicenciaLote)
            {
                this.iUltimoNumeroError = 0x3dd;
                this.strUltimoMensajeError = "Licencia inv\x00e1lida para el modo lote";
                return false;
            }
            if (this.Modo == modoFiscal.Test)
            {
                if (this.f1TicketValido)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.f1AFIPTest.FECompConsultaReq oPedido = new WSAFIPFE.f1AFIPTest.FECompConsultaReq();
                        int value2 = 0;
                        oPedido.CbteNro = iCbteNro;
                        oPedido.CbteTipo = iCbteTipo;
                        oPedido.PtoVta = iPtoVta;
                        WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        if (this.ArchivoXMLEnviado != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIPTest.FECompConsultaReq));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                                writer1.Serialize((TextWriter) file1, oPedido);
                                file1.Close();
                            }
                            catch (Exception exception2)
                            {
                                ProjectData.SetProjectError(exception2);
                                Exception miEx = exception2;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        WSAFIPFE.f1AFIPTest.FECompConsultaResponse oRespuesta = servicio.FECompConsultar(autorizacion, oPedido);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIPTest.FECompConsultaResponse));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception3)
                            {
                                ProjectData.SetProjectError(exception3);
                                Exception miEx = exception3;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        this.indice = 0;
                        this.IndiceItem = 0;
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                        }
                        else if (oRespuesta == null)
                        {
                            this.iF1RespuetaCantidadReg = 0;
                            this.strF1RespuestaFchProceso = "";
                            this.strF1RespuestaReProceso = "";
                            this.strF1RespuestaResultado = "";
                            bResultado = false;
                        }
                        else
                        {
                            int value;
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            if (oRespuesta.ResultGet == null)
                            {
                                this.iF1RespuetaCantidadReg = 0;
                                bResultado = false;
                            }
                            else
                            {
                                this.iF1RespuetaCantidadReg = 1;
                                this.F1CabeceraPtoVta = oRespuesta.ResultGet.PtoVta;
                                this.F1CabeceraCbteTipo = oRespuesta.ResultGet.CbteTipo;
                                this.F1CabeceraCantReg = 1;
                                this.strF1RespuestaFchProceso = oRespuesta.ResultGet.FchProceso;
                                this.strF1RespuestaResultado = oRespuesta.ResultGet.Resultado;
                                WSAFIPFE.f1AFIPTest.FECompConsResponse oRespuestaDetalleItem = oRespuesta.ResultGet;
                                value = this.F1RespuestaCantidadReg;
                                this.aF1RespuestaDetalle = new F1DetalleRespuesta[(value - 1) + 1];
                                nContador = 0;
                                this.aF1RespuestaDetalle[nContador].CAE = "";
                                this.aF1RespuestaDetalle[nContador].CAEA = "";
                                this.aF1RespuestaDetalle[nContador].CodAutorizacion = oRespuestaDetalleItem.CodAutorizacion;
                                this.aF1RespuestaDetalle[nContador].EmisionTipo = oRespuestaDetalleItem.EmisionTipo;
                                if (oRespuestaDetalleItem.EmisionTipo == "CAE")
                                {
                                    this.aF1RespuestaDetalle[nContador].CAE = oRespuestaDetalleItem.CodAutorizacion;
                                }
                                else
                                {
                                    this.aF1RespuestaDetalle[nContador].CAEA = oRespuestaDetalleItem.CodAutorizacion;
                                }
                                this.aF1RespuestaDetalle[nContador].CAEFchVto = oRespuestaDetalleItem.FchVto;
                                this.aF1RespuestaDetalle[nContador].CbteDesde = (int) oRespuestaDetalleItem.CbteDesde;
                                this.aF1RespuestaDetalle[nContador].CbteFch = oRespuestaDetalleItem.CbteFch;
                                this.aF1RespuestaDetalle[nContador].CbteHasta = (int) oRespuestaDetalleItem.CbteHasta;
                                this.aF1RespuestaDetalle[nContador].concepto = oRespuestaDetalleItem.Concepto;
                                this.aF1RespuestaDetalle[nContador].DocNro = oRespuestaDetalleItem.DocNro;
                                this.aF1RespuestaDetalle[nContador].DocTipo = oRespuestaDetalleItem.DocTipo;
                                this.aF1RespuestaDetalle[nContador].Resultado = oRespuestaDetalleItem.Resultado;
                                int v1 = this.F1CabeceraCantReg - 1;
                                if (oRespuestaDetalleItem.Observaciones == null)
                                {
                                    this.aF1RespuestaDetalle[nContador].ObservacionItemCantidad = 0;
                                }
                                else
                                {
                                    this.aF1RespuestaDetalle[nContador].ObservacionItemCantidad = oRespuestaDetalleItem.Observaciones.Length;
                                    if (oRespuestaDetalleItem.Observaciones.Length >= nLimite2)
                                    {
                                        int v2 = this.F1RespuestaDetalleObservacionItemCantidad - 1;
                                        this.aF1RespuestaDetalleObs = (F1DetalleRespuestaObs[,]) Microsoft.VisualBasic.CompilerServices.Utils.CopyArray((Array) this.aF1RespuestaDetalleObs, new F1DetalleRespuestaObs[v1 + 1, v2 + 1]);
                                        int VB_t_i4_L4 = this.F1RespuestaDetalleObservacionItemCantidad - 1;
                                        for (nContador2 = 0; nContador2 <= VB_t_i4_L4; nContador2++)
                                        {
                                            this.aF1RespuestaDetalleObs[nContador, nContador2].code = oRespuestaDetalleItem.Observaciones[nContador2].Code;
                                            this.aF1RespuestaDetalleObs[nContador, nContador2].msg = oRespuestaDetalleItem.Observaciones[nContador2].Msg;
                                        }
                                    }
                                }
                                this.indice = 0;
                                if (oRespuestaDetalleItem.CbtesAsoc == null)
                                {
                                    this.F1DetalleCbtesAsocItemCantidad = 0;
                                }
                                else
                                {
                                    this.F1DetalleCbtesAsocItemCantidad = oRespuestaDetalleItem.CbtesAsoc.Length;
                                }
                                if (this.F1DetalleCbtesAsocItemCantidad != 0)
                                {
                                    value2 = this.F1DetalleCbtesAsocItemCantidad;
                                    int VB_t_i4_L5 = this.F1DetalleCbtesAsocItemCantidad - 1;
                                    for (nContador2 = 0; nContador2 <= VB_t_i4_L5; nContador2++)
                                    {
                                        WSAFIPFE.f1AFIPTest.CbteAsoc oPedidoItemCbteAsoc = oRespuestaDetalleItem.CbtesAsoc[nContador];
                                        this.IndiceItem = nContador2;
                                        this.F1DetalleCbtesAsocNro = (int) oPedidoItemCbteAsoc.Nro;
                                        this.F1DetalleCbtesAsocPtoVta = oPedidoItemCbteAsoc.PtoVta;
                                        this.F1DetalleCbtesAsocTipo = oPedidoItemCbteAsoc.Tipo;
                                    }
                                }
                                if (oRespuestaDetalleItem.Iva == null)
                                {
                                    this.F1DetalleIvaItemCantidad = 0;
                                }
                                else
                                {
                                    this.F1DetalleIvaItemCantidad = oRespuestaDetalleItem.Iva.Length;
                                }
                                if (this.F1DetalleIvaItemCantidad != 0)
                                {
                                    value2 = this.F1DetalleIvaItemCantidad;
                                    int VB_t_i4_L6 = this.F1DetalleIvaItemCantidad - 1;
                                    for (nContador2 = 0; nContador2 <= VB_t_i4_L6; nContador2++)
                                    {
                                        WSAFIPFE.f1AFIPTest.AlicIva oPedidoItemIva = oRespuestaDetalleItem.Iva[nContador2];
                                        this.IndiceItem = nContador2;
                                        this.F1DetalleIvaBaseImp = oPedidoItemIva.BaseImp;
                                        this.F1DetalleIvaId = oPedidoItemIva.Id;
                                        this.F1DetalleIvaImporte = oPedidoItemIva.Importe;
                                    }
                                }
                                if (oRespuestaDetalleItem.Opcionales == null)
                                {
                                    this.F1DetalleOpcionalItemCantidad = 0;
                                }
                                else
                                {
                                    this.F1DetalleOpcionalItemCantidad = oRespuestaDetalleItem.Opcionales.Length;
                                }
                                if (this.F1DetalleOpcionalItemCantidad != 0)
                                {
                                    value2 = this.F1DetalleOpcionalItemCantidad;
                                    int VB_t_i4_L7 = this.F1DetalleOpcionalItemCantidad - 1;
                                    for (nContador2 = 0; nContador2 <= VB_t_i4_L7; nContador2++)
                                    {
                                        WSAFIPFE.f1AFIPTest.Opcional oPedidoItemOpcional = oRespuestaDetalleItem.Opcionales[nContador];
                                        this.IndiceItem = nContador2;
                                        this.F1DetalleOpcionalId = oPedidoItemOpcional.Id;
                                        this.F1DetalleOpcionalValor = oPedidoItemOpcional.Valor;
                                    }
                                }
                                if (oRespuestaDetalleItem.Tributos == null)
                                {
                                    this.F1DetalleTributoItemCantidad = 0;
                                }
                                else
                                {
                                    this.F1DetalleTributoItemCantidad = oRespuestaDetalleItem.Tributos.Length;
                                }
                                if (this.F1DetalleTributoItemCantidad != 0)
                                {
                                    value2 = this.F1DetalleTributoItemCantidad;
                                    int VB_t_i4_L8 = this.F1DetalleTributoItemCantidad - 1;
                                    for (nContador2 = 0; nContador2 <= VB_t_i4_L8; nContador2++)
                                    {
                                        WSAFIPFE.f1AFIPTest.Tributo oPedidoItemTributo = oRespuestaDetalleItem.Tributos[nContador];
                                        this.IndiceItem = nContador2;
                                        this.F1DetalleTributoAlic = oPedidoItemTributo.Alic;
                                        this.F1DetalleTributoBaseImp = oPedidoItemTributo.BaseImp;
                                        this.F1DetalleTributoDesc = oPedidoItemTributo.Desc;
                                        this.F1DetalleTributoId = oPedidoItemTributo.Id;
                                        this.F1DetalleTributoImporte = oPedidoItemTributo.Importe;
                                    }
                                }
                                this.F1DetalleConcepto = oRespuestaDetalleItem.Concepto;
                                this.F1DetalleDocNro = Conversions.ToString(oRespuestaDetalleItem.DocNro);
                                this.F1DetalleDocTipo = oRespuestaDetalleItem.DocTipo;
                                this.F1DetalleCbteFch = oRespuestaDetalleItem.CbteFch;
                                this.F1DetalleFchServDesde = oRespuestaDetalleItem.FchServDesde;
                                this.F1DetalleFchServHasta = oRespuestaDetalleItem.FchServHasta;
                                this.F1DetalleFchVtoPago = oRespuestaDetalleItem.FchVtoPago;
                                this.F1DetalleImpIva = oRespuestaDetalleItem.ImpIVA;
                                this.F1DetalleImpNeto = oRespuestaDetalleItem.ImpNeto;
                                this.F1DetalleImpOpEx = oRespuestaDetalleItem.ImpOpEx;
                                this.F1DetalleImpTotal = oRespuestaDetalleItem.ImpTotal;
                                this.F1DetalleImpTotalConc = oRespuestaDetalleItem.ImpTotConc;
                                this.F1DetalleImpTrib = oRespuestaDetalleItem.ImpTrib;
                                this.F1DetalleMonCotiz = oRespuestaDetalleItem.MonCotiz;
                                this.F1DetalleMonId = oRespuestaDetalleItem.MonId;
                                this.F1DetalleCbteDesde = (int) oRespuestaDetalleItem.CbteDesde;
                                this.F1DetalleCbteDesde = (int) oRespuestaDetalleItem.CbteHasta;
                                bResultado = true;
                            }
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.f1TicketValido)
            {
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception4)
                {
                    ProjectData.SetProjectError(exception4);
                    Exception ex = exception4;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.f1AFIP.FECompConsultaReq oPedido = new WSAFIPFE.f1AFIP.FECompConsultaReq();
                    int value2 = 0;
                    oPedido.CbteNro = iCbteNro;
                    oPedido.CbteTipo = iCbteTipo;
                    oPedido.PtoVta = iPtoVta;
                    WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.f1DireccionServicioURL;
                    if (this.ArchivoXMLEnviado != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIP.FECompConsultaReq));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                            writer1.Serialize((TextWriter) file1, oPedido);
                            file1.Close();
                        }
                        catch (Exception exception5)
                        {
                            ProjectData.SetProjectError(exception5);
                            Exception miEx = exception5;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    WSAFIPFE.f1AFIP.FECompConsultaResponse oRespuesta = servicio.FECompConsultar(autorizacion, oPedido);
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIP.FECompConsultaResponse));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception6)
                        {
                            ProjectData.SetProjectError(exception6);
                            Exception miEx = exception6;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    this.indice = 0;
                    this.IndiceItem = 0;
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                    }
                    else if (oRespuesta == null)
                    {
                        this.iF1RespuetaCantidadReg = 0;
                        this.strF1RespuestaFchProceso = "";
                        this.strF1RespuestaReProceso = "";
                        this.strF1RespuestaResultado = "";
                        bResultado = false;
                    }
                    else
                    {
                        int value;
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L9 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L10 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L10; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L11 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L11; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L12 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L12; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        if (oRespuesta.ResultGet == null)
                        {
                            this.iF1RespuetaCantidadReg = 0;
                            bResultado = false;
                        }
                        else
                        {
                            this.iF1RespuetaCantidadReg = 1;
                            this.F1CabeceraPtoVta = oRespuesta.ResultGet.PtoVta;
                            this.F1CabeceraCbteTipo = oRespuesta.ResultGet.CbteTipo;
                            this.F1CabeceraCantReg = 1;
                            this.strF1RespuestaFchProceso = oRespuesta.ResultGet.FchProceso;
                            this.strF1RespuestaResultado = oRespuesta.ResultGet.Resultado;
                            WSAFIPFE.f1AFIP.FECompConsResponse oRespuestaDetalleItem = oRespuesta.ResultGet;
                            value = this.F1RespuestaCantidadReg;
                            this.aF1RespuestaDetalle = new F1DetalleRespuesta[(value - 1) + 1];
                            nContador = 0;
                            this.aF1RespuestaDetalle[nContador].CAE = "";
                            this.aF1RespuestaDetalle[nContador].CAEA = "";
                            this.aF1RespuestaDetalle[nContador].CodAutorizacion = oRespuestaDetalleItem.CodAutorizacion;
                            this.aF1RespuestaDetalle[nContador].EmisionTipo = oRespuestaDetalleItem.EmisionTipo;
                            if (oRespuestaDetalleItem.EmisionTipo == "CAE")
                            {
                                this.aF1RespuestaDetalle[nContador].CAE = oRespuestaDetalleItem.CodAutorizacion;
                            }
                            else
                            {
                                this.aF1RespuestaDetalle[nContador].CAEA = oRespuestaDetalleItem.CodAutorizacion;
                            }
                            this.aF1RespuestaDetalle[nContador].CAEFchVto = oRespuestaDetalleItem.FchVto;
                            this.aF1RespuestaDetalle[nContador].CbteDesde = (int) oRespuestaDetalleItem.CbteDesde;
                            this.aF1RespuestaDetalle[nContador].CbteFch = oRespuestaDetalleItem.CbteFch;
                            this.aF1RespuestaDetalle[nContador].CbteHasta = (int) oRespuestaDetalleItem.CbteHasta;
                            this.aF1RespuestaDetalle[nContador].concepto = oRespuestaDetalleItem.Concepto;
                            this.aF1RespuestaDetalle[nContador].DocNro = oRespuestaDetalleItem.DocNro;
                            this.aF1RespuestaDetalle[nContador].DocTipo = oRespuestaDetalleItem.DocTipo;
                            this.aF1RespuestaDetalle[nContador].Resultado = oRespuestaDetalleItem.Resultado;
                            int v1 = this.F1CabeceraCantReg - 1;
                            if (oRespuestaDetalleItem.Observaciones == null)
                            {
                                this.aF1RespuestaDetalle[nContador].ObservacionItemCantidad = 0;
                            }
                            else
                            {
                                this.aF1RespuestaDetalle[nContador].ObservacionItemCantidad = oRespuestaDetalleItem.Observaciones.Length;
                                if (oRespuestaDetalleItem.Observaciones.Length >= nLimite2)
                                {
                                    int v2 = this.F1RespuestaDetalleObservacionItemCantidad - 1;
                                    this.aF1RespuestaDetalleObs = (F1DetalleRespuestaObs[,]) Microsoft.VisualBasic.CompilerServices.Utils.CopyArray((Array) this.aF1RespuestaDetalleObs, new F1DetalleRespuestaObs[v1 + 1, v2 + 1]);
                                    int VB_t_i4_L13 = this.F1RespuestaDetalleObservacionItemCantidad - 1;
                                    for (nContador2 = 0; nContador2 <= VB_t_i4_L13; nContador2++)
                                    {
                                        this.aF1RespuestaDetalleObs[nContador, nContador2].code = oRespuestaDetalleItem.Observaciones[nContador2].Code;
                                        this.aF1RespuestaDetalleObs[nContador, nContador2].msg = oRespuestaDetalleItem.Observaciones[nContador2].Msg;
                                    }
                                }
                            }
                            this.indice = 0;
                            if (oRespuestaDetalleItem.CbtesAsoc == null)
                            {
                                this.F1DetalleCbtesAsocItemCantidad = 0;
                            }
                            else
                            {
                                this.F1DetalleCbtesAsocItemCantidad = oRespuestaDetalleItem.CbtesAsoc.Length;
                            }
                            if (this.F1DetalleCbtesAsocItemCantidad != 0)
                            {
                                value2 = this.F1DetalleCbtesAsocItemCantidad;
                                int VB_t_i4_L14 = this.F1DetalleCbtesAsocItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L14; nContador2++)
                                {
                                    WSAFIPFE.f1AFIP.CbteAsoc oPedidoItemCbteAsoc = oRespuestaDetalleItem.CbtesAsoc[nContador];
                                    this.IndiceItem = nContador2;
                                    this.F1DetalleCbtesAsocNro = (int) oPedidoItemCbteAsoc.Nro;
                                    this.F1DetalleCbtesAsocPtoVta = oPedidoItemCbteAsoc.PtoVta;
                                    this.F1DetalleCbtesAsocTipo = oPedidoItemCbteAsoc.Tipo;
                                }
                            }
                            if (oRespuestaDetalleItem.Iva == null)
                            {
                                this.F1DetalleIvaItemCantidad = 0;
                            }
                            else
                            {
                                this.F1DetalleIvaItemCantidad = oRespuestaDetalleItem.Iva.Length;
                            }
                            if (this.F1DetalleIvaItemCantidad != 0)
                            {
                                value2 = this.F1DetalleIvaItemCantidad;
                                int VB_t_i4_L15 = this.F1DetalleIvaItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L15; nContador2++)
                                {
                                    WSAFIPFE.f1AFIP.AlicIva oPedidoItemIva = oRespuestaDetalleItem.Iva[nContador2];
                                    this.IndiceItem = nContador2;
                                    this.F1DetalleIvaBaseImp = oPedidoItemIva.BaseImp;
                                    this.F1DetalleIvaId = oPedidoItemIva.Id;
                                    this.F1DetalleIvaImporte = oPedidoItemIva.Importe;
                                }
                            }
                            if (oRespuestaDetalleItem.Opcionales == null)
                            {
                                this.F1DetalleOpcionalItemCantidad = 0;
                            }
                            else
                            {
                                this.F1DetalleOpcionalItemCantidad = oRespuestaDetalleItem.Opcionales.Length;
                            }
                            if (this.F1DetalleOpcionalItemCantidad != 0)
                            {
                                value2 = this.F1DetalleOpcionalItemCantidad;
                                int VB_t_i4_L16 = this.F1DetalleOpcionalItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L16; nContador2++)
                                {
                                    WSAFIPFE.f1AFIP.Opcional oPedidoItemOpcional = oRespuestaDetalleItem.Opcionales[nContador];
                                    this.IndiceItem = nContador2;
                                    this.F1DetalleOpcionalId = oPedidoItemOpcional.Id;
                                    this.F1DetalleOpcionalValor = oPedidoItemOpcional.Valor;
                                }
                            }
                            if (oRespuestaDetalleItem.Tributos == null)
                            {
                                this.F1DetalleTributoItemCantidad = 0;
                            }
                            else
                            {
                                this.F1DetalleTributoItemCantidad = oRespuestaDetalleItem.Tributos.Length;
                            }
                            if (this.F1DetalleTributoItemCantidad != 0)
                            {
                                value2 = this.F1DetalleTributoItemCantidad;
                                int VB_t_i4_L17 = this.F1DetalleTributoItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L17; nContador2++)
                                {
                                    WSAFIPFE.f1AFIP.Tributo oPedidoItemTributo = oRespuestaDetalleItem.Tributos[nContador];
                                    this.IndiceItem = nContador2;
                                    this.F1DetalleTributoAlic = oPedidoItemTributo.Alic;
                                    this.F1DetalleTributoBaseImp = oPedidoItemTributo.BaseImp;
                                    this.F1DetalleTributoDesc = oPedidoItemTributo.Desc;
                                    this.F1DetalleTributoId = oPedidoItemTributo.Id;
                                    this.F1DetalleTributoImporte = oPedidoItemTributo.Importe;
                                }
                            }
                            this.F1DetalleConcepto = oRespuestaDetalleItem.Concepto;
                            this.F1DetalleDocNro = Conversions.ToString(oRespuestaDetalleItem.DocNro);
                            this.F1DetalleDocTipo = oRespuestaDetalleItem.DocTipo;
                            this.F1DetalleCbteFch = oRespuestaDetalleItem.CbteFch;
                            this.F1DetalleFchServDesde = oRespuestaDetalleItem.FchServDesde;
                            this.F1DetalleFchServHasta = oRespuestaDetalleItem.FchServHasta;
                            this.F1DetalleFchVtoPago = oRespuestaDetalleItem.FchVtoPago;
                            this.F1DetalleImpIva = oRespuestaDetalleItem.ImpIVA;
                            this.F1DetalleImpNeto = oRespuestaDetalleItem.ImpNeto;
                            this.F1DetalleImpOpEx = oRespuestaDetalleItem.ImpOpEx;
                            this.F1DetalleImpTotal = oRespuestaDetalleItem.ImpTotal;
                            this.F1DetalleImpTotalConc = oRespuestaDetalleItem.ImpTotConc;
                            this.F1DetalleImpTrib = oRespuestaDetalleItem.ImpTrib;
                            this.F1DetalleMonCotiz = oRespuestaDetalleItem.MonCotiz;
                            this.F1DetalleMonId = oRespuestaDetalleItem.MonId;
                            this.F1DetalleCbteDesde = (int) oRespuestaDetalleItem.CbteDesde;
                            this.F1DetalleCbteDesde = (int) oRespuestaDetalleItem.CbteHasta;
                            bResultado = true;
                        }
                    }
                    this.strUltimoMensajeError = this.f1ErrorMsg1;
                }
                return bResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return bResultado;
        }

        public int F1CompTotXRequest()
        {
            int mResultado;
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            bool bResultado = true;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            if (this.Modo == modoFiscal.Test)
            {
                if (this.f1TicketValido)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.f1AFIPTest.FERegXReqResponse oRespuesta = servicio.FECompTotXRequest(autorizacion);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIPTest.FERegXReqResponse));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception2)
                            {
                                ProjectData.SetProjectError(exception2);
                                Exception miEx = exception2;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        this.IndiceItem = 0;
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                        }
                        else
                        {
                            int nContador;
                            int value;
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            mResultado = oRespuesta.RegXReq;
                            bResultado = true;
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                    }
                    return mResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return mResultado;
            }
            if (this.f1TicketValido)
            {
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.f1DireccionServicioURL;
                    WSAFIPFE.f1AFIP.FERegXReqResponse oRespuesta = servicio.FECompTotXRequest(autorizacion);
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIP.FERegXReqResponse));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            Exception miEx = exception4;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    this.IndiceItem = 0;
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                    }
                    else
                    {
                        int nContador;
                        int value;
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L4 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L6 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        mResultado = oRespuesta.RegXReq;
                        bResultado = true;
                    }
                    this.strUltimoMensajeError = this.f1ErrorMsg1;
                }
                return mResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return mResultado;
        }

        public int F1CompUltimoAutorizado(int iPtoVta, int iCbteTipo)
        {
            int mResultado;
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            bool bResultado = true;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            if (this.Modo == modoFiscal.Test)
            {
                if (this.f1TicketValido)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.f1AFIPTest.FERecuperaLastCbteResponse oRespuesta = servicio.FECompUltimoAutorizado(autorizacion, iPtoVta, iCbteTipo);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIPTest.FERecuperaLastCbteResponse));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception2)
                            {
                                ProjectData.SetProjectError(exception2);
                                Exception miEx = exception2;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        this.IndiceItem = 0;
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                        }
                        else
                        {
                            int nContador;
                            int value;
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            mResultado = oRespuesta.CbteNro;
                            bResultado = true;
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                    }
                    return mResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return mResultado;
            }
            if (this.f1TicketValido)
            {
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.f1DireccionServicioURL;
                    WSAFIPFE.f1AFIP.FERecuperaLastCbteResponse oRespuesta = servicio.FECompUltimoAutorizado(autorizacion, iPtoVta, iCbteTipo);
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIP.FERecuperaLastCbteResponse));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            Exception miEx = exception4;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    this.IndiceItem = 0;
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                    }
                    else
                    {
                        int nContador;
                        int value;
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L4 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L6 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        mResultado = oRespuesta.CbteNro;
                        bResultado = true;
                    }
                    this.strUltimoMensajeError = this.f1ErrorMsg1;
                }
                return mResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return mResultado;
        }

        public bool f1Dummy()
        {
            bool bResultado = true;
            this.strf1RespuestaDummyDbServer = "";
            this.strf1RespuestaDummyAuthServer = "";
            this.strf1RespuestaDummyDbServer = "";
            if (this.Modo == modoFiscal.Test)
            {
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.f1DireccionServicioURL;
                        WSAFIPFE.f1AFIPTest.DummyResponse oRespuesta = servicio.FEDummy();
                        this.strf1RespuestaDummyDbServer = oRespuesta.DbServer;
                        this.strf1RespuestaDummyAuthServer = oRespuesta.AuthServer;
                        this.strf1RespuestaDummyAppServer = oRespuesta.AppServer;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 6;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            if (bResultado)
            {
                try
                {
                    WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.f1DireccionServicioURL;
                    WSAFIPFE.f1AFIP.DummyResponse oRespuesta = servicio.FEDummy();
                    this.strf1RespuestaDummyDbServer = oRespuesta.DbServer;
                    this.strf1RespuestaDummyAuthServer = oRespuesta.AuthServer;
                    this.strf1RespuestaDummyAppServer = oRespuesta.AppServer;
                }
                catch (Exception exception2)
                {
                    ProjectData.SetProjectError(exception2);
                    Exception ex = exception2;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 6;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        internal bool f1ObtenerTicket()
        {
            this.strUltimaRespuestaXML = "";
            this.strUltimoPedidoXML = "";
            this.strUltimoPedidoFirmadoXML = "";
            this.Identificador = "0";
            bool bResultado = false;
            if (((this.f1LicenciaValidaCae | this.f1LicenciaValidaCaea) & this.get_LicenciaFechaValida(DateTime.Today)) | (this.Modo == modoFiscal.Test))
            {
                string strDireccionServicio = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
                if (this.Modo == modoFiscal.Fiscal)
                {
                    strDireccionServicio = this.DireccionServicio;
                }
                ticket oTicket = new ticket();
                if (this.ProxyUserName != "")
                {
                    oTicket.ProxyDomain = this.ProxyDomain;
                    oTicket.ProxyHost = this.ProxyHost;
                    oTicket.ProxyPort = this.ProxyPort;
                    oTicket.ProxyUserName = this.ProxyUserName;
                    oTicket.ProxyUserPassword = this.ProxyUserPassword;
                }
                string strServicio = "wsfe";
                try
                {
                    string strTicketRespuesta = oTicket.ObtenerLoginTicketResponse(strServicio, strDireccionServicio, this.RutaArchivoCertificado, this.Modo, Conversions.ToLong(this.Identificador));
                    this.strUltimoPedidoXML = oTicket.UltimoPedidoXML.OuterXml;
                    this.strUltimoPedidoFirmadoXML = oTicket.UltimoPedidoFirmadoXML;
                    this.strUltimaRespuestaXML = strTicketRespuesta;
                    if (oTicket.lastErrorNumero == 0)
                    {
                        this.Identificador = oTicket.UniqueId.ToString();
                        this.f1token = oTicket.Token;
                        this.f1sign = oTicket.Sign;
                        this.tf1TicketHora = oTicket.GenerationTime;
                        this.tf1TicketHoraVencimiento = oTicket.ExpirationTime;
                        this.strUltimoMensajeError = "";
                        this.iUltimoNumeroError = 0;
                        bResultado = true;
                    }
                    else
                    {
                        this.strUltimoMensajeError = oTicket.lastErrorMensaje;
                        this.iUltimoNumeroError = oTicket.lastErrorNumero;
                    }
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 1;
                    ProjectData.ClearProjectError();
                }
            }
            else
            {
                bResultado = false;
                this.strUltimoMensajeError = "Licencia no v\x00e1lida";
            }
            this.bf1TicketValido = bResultado;
            return bResultado;
        }

        public bool f1ObtenerTicketAcceso()
        {
            return this.f1ObtenerTicket();
        }

        public double F1ParamGetCotizacion(string strMonId)
        {
            double mResultado;
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            bool bResultado = true;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.strF1RespuestaCAEA = "";
            this.iF1RespuestaMonedaCotiz = 0.0;
            this.strF1RespuestaMonedaFchCotiz = "";
            this.strF1RespuestaMonedaId = "";
            if (this.Modo == modoFiscal.Test)
            {
                if (this.f1TicketValido)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.f1AFIPTest.FECotizacionResponse oRespuesta = servicio.FEParamGetCotizacion(autorizacion, strMonId);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIPTest.FECotizacionResponse));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception2)
                            {
                                ProjectData.SetProjectError(exception2);
                                Exception miEx = exception2;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        this.IndiceItem = 0;
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                        }
                        else
                        {
                            int nContador;
                            int value;
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            if (oRespuesta.ResultGet == null)
                            {
                                this.iUltimoNumeroError = 0x65;
                                this.strUltimoMensajeError = "Sin detalle en la respuesta";
                                bResultado = false;
                            }
                            else
                            {
                                this.iF1RespuestaMonedaCotiz = oRespuesta.ResultGet.MonCotiz;
                                this.strF1RespuestaMonedaFchCotiz = oRespuesta.ResultGet.FchCotiz;
                                this.strF1RespuestaMonedaId = oRespuesta.ResultGet.MonId;
                                mResultado = this.iF1RespuestaMonedaCotiz;
                            }
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                    }
                    return mResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return mResultado;
            }
            if (this.f1TicketValido)
            {
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.f1DireccionServicioURL;
                    WSAFIPFE.f1AFIP.FECotizacionResponse oRespuesta = servicio.FEParamGetCotizacion(autorizacion, strMonId);
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.f1AFIP.FECotizacionResponse));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            Exception miEx = exception4;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    this.IndiceItem = 0;
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                    }
                    else
                    {
                        int nContador;
                        int value;
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L4 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L6 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        if (oRespuesta.ResultGet == null)
                        {
                            this.iUltimoNumeroError = 0x65;
                            this.strUltimoMensajeError = "Sin detalle en la respuesta";
                            bResultado = false;
                        }
                        else
                        {
                            this.iF1RespuestaMonedaCotiz = oRespuesta.ResultGet.MonCotiz;
                            this.strF1RespuestaMonedaFchCotiz = oRespuesta.ResultGet.FchCotiz;
                            this.strF1RespuestaMonedaId = oRespuesta.ResultGet.MonId;
                            mResultado = this.iF1RespuestaMonedaCotiz;
                        }
                    }
                    this.strUltimoMensajeError = this.f1ErrorMsg1;
                }
                return mResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return mResultado;
        }

        public bool f1ParamGetPtosVenta()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.if1PtosVentaItemCantidad = 0;
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            if (this.f1TicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.f1AFIPTest.FEPtoVentaResponse oRespuesta = servicio.FEParamGetPtosVenta(autorizacion);
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            this.strUltimoMensajeError = this.f1ErrorMsg1;
                            this.iUltimoNumeroError = this.f1ErrorCode1;
                            if (oRespuesta.ResultGet == null)
                            {
                                this.if1PtosVentaItemCantidad = 0;
                                value = this.f1PtosVentaItemCantidad;
                                this.af1PtosVenta = new f1PtosVenta[(value - 1) + 1];
                                int VB_t_i4_L4 = this.f1PtosVentaItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                                {
                                    this.af1PtosVenta[nContador].nro = oRespuesta.ResultGet[nContador].Nro;
                                    this.af1PtosVenta[nContador].EmisionTipo = oRespuesta.ResultGet[nContador].EmisionTipo;
                                    this.af1PtosVenta[nContador].Bloqueado = oRespuesta.ResultGet[nContador].Bloqueado;
                                    this.af1PtosVenta[nContador].fchBaja = oRespuesta.ResultGet[nContador].FchBaja;
                                }
                                return bResultado;
                            }
                            this.if1PtosVentaItemCantidad = oRespuesta.ResultGet.Length;
                            value = this.f1PtosVentaItemCantidad;
                            this.af1PtosVenta = new f1PtosVenta[(value - 1) + 1];
                            int VB_t_i4_L5 = this.f1PtosVentaItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.af1PtosVenta[nContador].nro = oRespuesta.ResultGet[nContador].Nro;
                                this.af1PtosVenta[nContador].EmisionTipo = oRespuesta.ResultGet[nContador].EmisionTipo;
                                this.af1PtosVenta[nContador].Bloqueado = oRespuesta.ResultGet[nContador].Bloqueado;
                                this.af1PtosVenta[nContador].fchBaja = oRespuesta.ResultGet[nContador].FchBaja;
                            }
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.f1DireccionServicioURL;
                        WSAFIPFE.f1AFIP.FEPtoVentaResponse oRespuesta = servicio.FEParamGetPtosVenta(autorizacion);
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L6 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L7 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L8 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L9 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                        this.iUltimoNumeroError = this.f1ErrorCode1;
                        if (oRespuesta.ResultGet == null)
                        {
                            this.if1PtosVentaItemCantidad = 0;
                            value = this.f1PtosVentaItemCantidad;
                            this.af1PtosVenta = new f1PtosVenta[(value - 1) + 1];
                            int VB_t_i4_L10 = this.f1PtosVentaItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L10; nContador++)
                            {
                                this.af1PtosVenta[nContador].nro = oRespuesta.ResultGet[nContador].Nro;
                                this.af1PtosVenta[nContador].EmisionTipo = oRespuesta.ResultGet[nContador].EmisionTipo;
                                this.af1PtosVenta[nContador].Bloqueado = oRespuesta.ResultGet[nContador].Bloqueado;
                                this.af1PtosVenta[nContador].fchBaja = oRespuesta.ResultGet[nContador].FchBaja;
                            }
                            return bResultado;
                        }
                        this.if1PtosVentaItemCantidad = oRespuesta.ResultGet.Length;
                        value = this.f1PtosVentaItemCantidad;
                        this.af1PtosVenta = new f1PtosVenta[(value - 1) + 1];
                        int VB_t_i4_L11 = this.f1PtosVentaItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L11; nContador++)
                        {
                            this.af1PtosVenta[nContador].nro = oRespuesta.ResultGet[nContador].Nro;
                            this.af1PtosVenta[nContador].EmisionTipo = oRespuesta.ResultGet[nContador].EmisionTipo;
                            this.af1PtosVenta[nContador].Bloqueado = oRespuesta.ResultGet[nContador].Bloqueado;
                            this.af1PtosVenta[nContador].fchBaja = oRespuesta.ResultGet[nContador].FchBaja;
                        }
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool f1ParamGetTiposCbte()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.if1TiposCbteItemCantidad = 0;
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            if (this.f1TicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.f1AFIPTest.CbteTipoResponse oRespuesta = servicio.FEParamGetTiposCbte(autorizacion);
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            this.strUltimoMensajeError = this.f1ErrorMsg1;
                            this.iUltimoNumeroError = this.f1ErrorCode1;
                            this.if1TiposCbteItemCantidad = oRespuesta.ResultGet.Length;
                            value = this.f1TiposCbteItemCantidad;
                            this.af1TiposCbte = new f1TiposCbte[(value - 1) + 1];
                            int VB_t_i4_L4 = this.f1TiposCbteItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                            {
                                this.af1TiposCbte[nContador].id = oRespuesta.ResultGet[nContador].Id;
                                this.af1TiposCbte[nContador].desc = oRespuesta.ResultGet[nContador].Desc;
                                this.af1TiposCbte[nContador].fchDesde = oRespuesta.ResultGet[nContador].FchDesde;
                                this.af1TiposCbte[nContador].fchHasta = oRespuesta.ResultGet[nContador].FchHasta;
                            }
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.f1DireccionServicioURL;
                        WSAFIPFE.f1AFIP.CbteTipoResponse oRespuesta = servicio.FEParamGetTiposCbte(autorizacion);
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L6 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L8 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                        this.iUltimoNumeroError = this.f1ErrorCode1;
                        this.if1TiposCbteItemCantidad = oRespuesta.ResultGet.Length;
                        value = this.f1TiposCbteItemCantidad;
                        this.af1TiposCbte = new f1TiposCbte[(value - 1) + 1];
                        int VB_t_i4_L9 = this.f1TiposCbteItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                        {
                            this.af1TiposCbte[nContador].id = oRespuesta.ResultGet[nContador].Id;
                            this.af1TiposCbte[nContador].desc = oRespuesta.ResultGet[nContador].Desc;
                            this.af1TiposCbte[nContador].fchDesde = oRespuesta.ResultGet[nContador].FchDesde;
                            this.af1TiposCbte[nContador].fchHasta = oRespuesta.ResultGet[nContador].FchHasta;
                        }
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool f1ParamGetTiposConcepto()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.if1TiposConceptoItemCantidad = 0;
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            if (this.f1TicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.f1AFIPTest.ConceptoTipoResponse oRespuesta = servicio.FEParamGetTiposConcepto(autorizacion);
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            this.strUltimoMensajeError = this.f1ErrorMsg1;
                            this.iUltimoNumeroError = this.f1ErrorCode1;
                            this.if1TiposConceptoItemCantidad = oRespuesta.ResultGet.Length;
                            value = this.f1TiposConceptoItemCantidad;
                            this.af1TiposConcepto = new f1TiposConcepto[(value - 1) + 1];
                            int VB_t_i4_L4 = this.f1TiposConceptoItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                            {
                                this.af1TiposConcepto[nContador].id = oRespuesta.ResultGet[nContador].Id;
                                this.af1TiposConcepto[nContador].desc = oRespuesta.ResultGet[nContador].Desc;
                                this.af1TiposConcepto[nContador].fchDesde = oRespuesta.ResultGet[nContador].FchDesde;
                                this.af1TiposConcepto[nContador].fchHasta = oRespuesta.ResultGet[nContador].FchHasta;
                            }
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.f1DireccionServicioURL;
                        WSAFIPFE.f1AFIP.ConceptoTipoResponse oRespuesta = servicio.FEParamGetTiposConcepto(autorizacion);
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L6 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L8 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                        this.iUltimoNumeroError = this.f1ErrorCode1;
                        this.if1TiposConceptoItemCantidad = oRespuesta.ResultGet.Length;
                        value = this.f1TiposConceptoItemCantidad;
                        this.af1TiposConcepto = new f1TiposConcepto[(value - 1) + 1];
                        int VB_t_i4_L9 = this.f1TiposConceptoItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                        {
                            this.af1TiposConcepto[nContador].id = oRespuesta.ResultGet[nContador].Id;
                            this.af1TiposConcepto[nContador].desc = oRespuesta.ResultGet[nContador].Desc;
                            this.af1TiposConcepto[nContador].fchDesde = oRespuesta.ResultGet[nContador].FchDesde;
                            this.af1TiposConcepto[nContador].fchHasta = oRespuesta.ResultGet[nContador].FchHasta;
                        }
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool f1ParamGetTiposDoc()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.if1TiposDocItemCantidad = 0;
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            if (this.f1TicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.f1AFIPTest.DocTipoResponse oRespuesta = servicio.FEParamGetTiposDoc(autorizacion);
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            this.strUltimoMensajeError = this.f1ErrorMsg1;
                            this.iUltimoNumeroError = this.f1ErrorCode1;
                            this.if1TiposDocItemCantidad = oRespuesta.ResultGet.Length;
                            value = this.f1TiposDocItemCantidad;
                            this.af1TiposDoc = new f1TiposDoc[(value - 1) + 1];
                            int VB_t_i4_L4 = this.f1TiposDocItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                            {
                                this.af1TiposDoc[nContador].id = oRespuesta.ResultGet[nContador].Id;
                                this.af1TiposDoc[nContador].desc = oRespuesta.ResultGet[nContador].Desc;
                                this.af1TiposDoc[nContador].fchDesde = oRespuesta.ResultGet[nContador].FchDesde;
                                this.af1TiposDoc[nContador].fchHasta = oRespuesta.ResultGet[nContador].FchHasta;
                            }
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.f1DireccionServicioURL;
                        WSAFIPFE.f1AFIP.DocTipoResponse oRespuesta = servicio.FEParamGetTiposDoc(autorizacion);
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L6 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L8 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                        this.iUltimoNumeroError = this.f1ErrorCode1;
                        this.if1TiposDocItemCantidad = oRespuesta.ResultGet.Length;
                        value = this.f1TiposDocItemCantidad;
                        this.af1TiposDoc = new f1TiposDoc[(value - 1) + 1];
                        int VB_t_i4_L9 = this.f1TiposDocItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                        {
                            this.af1TiposDoc[nContador].id = oRespuesta.ResultGet[nContador].Id;
                            this.af1TiposDoc[nContador].desc = oRespuesta.ResultGet[nContador].Desc;
                            this.af1TiposDoc[nContador].fchDesde = oRespuesta.ResultGet[nContador].FchDesde;
                            this.af1TiposDoc[nContador].fchHasta = oRespuesta.ResultGet[nContador].FchHasta;
                        }
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool f1ParamGetTiposIva()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.if1TiposIvaItemCantidad = 0;
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            if (this.f1TicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.f1AFIPTest.IvaTipoResponse oRespuesta = servicio.FEParamGetTiposIva(autorizacion);
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            this.strUltimoMensajeError = this.f1ErrorMsg1;
                            this.iUltimoNumeroError = this.f1ErrorCode1;
                            this.if1TiposIvaItemCantidad = oRespuesta.ResultGet.Length;
                            value = this.f1TiposIvaItemCantidad;
                            this.af1TiposIva = new f1TiposIva[(value - 1) + 1];
                            int VB_t_i4_L4 = this.f1TiposIvaItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                            {
                                this.af1TiposIva[nContador].id = Conversions.ToInteger(oRespuesta.ResultGet[nContador].Id);
                                this.af1TiposIva[nContador].desc = oRespuesta.ResultGet[nContador].Desc;
                                this.af1TiposIva[nContador].fchDesde = oRespuesta.ResultGet[nContador].FchDesde;
                                this.af1TiposIva[nContador].fchHasta = oRespuesta.ResultGet[nContador].FchHasta;
                            }
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.f1DireccionServicioURL;
                        WSAFIPFE.f1AFIP.IvaTipoResponse oRespuesta = servicio.FEParamGetTiposIva(autorizacion);
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L6 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L8 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                        this.iUltimoNumeroError = this.f1ErrorCode1;
                        this.if1TiposIvaItemCantidad = oRespuesta.ResultGet.Length;
                        value = this.f1TiposIvaItemCantidad;
                        this.af1TiposIva = new f1TiposIva[(value - 1) + 1];
                        int VB_t_i4_L9 = this.f1TiposIvaItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                        {
                            this.af1TiposIva[nContador].id = Conversions.ToInteger(oRespuesta.ResultGet[nContador].Id);
                            this.af1TiposIva[nContador].desc = oRespuesta.ResultGet[nContador].Desc;
                            this.af1TiposIva[nContador].fchDesde = oRespuesta.ResultGet[nContador].FchDesde;
                            this.af1TiposIva[nContador].fchHasta = oRespuesta.ResultGet[nContador].FchHasta;
                        }
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool f1ParamGetTiposMoneda()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.if1TiposMonedaItemCantidad = 0;
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            if (this.f1TicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.f1AFIPTest.MonedaResponse oRespuesta = servicio.FEParamGetTiposMonedas(autorizacion);
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            this.strUltimoMensajeError = this.f1ErrorMsg1;
                            this.iUltimoNumeroError = this.f1ErrorCode1;
                            this.if1TiposMonedaItemCantidad = oRespuesta.ResultGet.Length;
                            value = this.f1TiposMonedaItemCantidad;
                            this.af1TiposMoneda = new f1TiposMoneda[(value - 1) + 1];
                            int VB_t_i4_L4 = this.f1TiposMonedaItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                            {
                                this.af1TiposMoneda[nContador].id = oRespuesta.ResultGet[nContador].Id;
                                this.af1TiposMoneda[nContador].desc = oRespuesta.ResultGet[nContador].Desc;
                                this.af1TiposMoneda[nContador].fchDesde = oRespuesta.ResultGet[nContador].FchDesde;
                                this.af1TiposMoneda[nContador].fchHasta = oRespuesta.ResultGet[nContador].FchHasta;
                            }
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.f1DireccionServicioURL;
                        WSAFIPFE.f1AFIP.MonedaResponse oRespuesta = servicio.FEParamGetTiposMonedas(autorizacion);
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L6 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L8 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                        this.iUltimoNumeroError = this.f1ErrorCode1;
                        this.if1TiposMonedaItemCantidad = oRespuesta.ResultGet.Length;
                        value = this.f1TiposMonedaItemCantidad;
                        this.af1TiposMoneda = new f1TiposMoneda[(value - 1) + 1];
                        int VB_t_i4_L9 = this.f1TiposMonedaItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                        {
                            this.af1TiposMoneda[nContador].id = oRespuesta.ResultGet[nContador].Id;
                            this.af1TiposMoneda[nContador].desc = oRespuesta.ResultGet[nContador].Desc;
                            this.af1TiposMoneda[nContador].fchDesde = oRespuesta.ResultGet[nContador].FchDesde;
                            this.af1TiposMoneda[nContador].fchHasta = oRespuesta.ResultGet[nContador].FchHasta;
                        }
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool f1ParamGetTiposOpcional()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.if1TiposOpcionalItemCantidad = 0;
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            if (this.f1TicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.f1AFIPTest.OpcionalTipoResponse oRespuesta = servicio.FEParamGetTiposOpcional(autorizacion);
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            this.strUltimoMensajeError = this.f1ErrorMsg1;
                            this.iUltimoNumeroError = this.f1ErrorCode1;
                            this.if1TiposOpcionalItemCantidad = oRespuesta.ResultGet.Length;
                            value = this.f1TiposOpcionalItemCantidad;
                            this.af1TiposOpcional = new f1TiposOpcional[(value - 1) + 1];
                            int VB_t_i4_L4 = this.f1TiposOpcionalItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                            {
                                this.af1TiposOpcional[nContador].id = Conversions.ToInteger(oRespuesta.ResultGet[nContador].Id);
                                this.af1TiposOpcional[nContador].desc = oRespuesta.ResultGet[nContador].Desc;
                                this.af1TiposOpcional[nContador].fchDesde = oRespuesta.ResultGet[nContador].FchDesde;
                                this.af1TiposOpcional[nContador].fchHasta = oRespuesta.ResultGet[nContador].FchHasta;
                            }
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.f1DireccionServicioURL;
                        WSAFIPFE.f1AFIP.OpcionalTipoResponse oRespuesta = servicio.FEParamGetTiposOpcional(autorizacion);
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L6 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L8 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                        this.iUltimoNumeroError = this.f1ErrorCode1;
                        this.if1TiposOpcionalItemCantidad = oRespuesta.ResultGet.Length;
                        value = this.f1TiposOpcionalItemCantidad;
                        this.af1TiposOpcional = new f1TiposOpcional[(value - 1) + 1];
                        int VB_t_i4_L9 = this.f1TiposOpcionalItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                        {
                            this.af1TiposOpcional[nContador].id = Conversions.ToInteger(oRespuesta.ResultGet[nContador].Id);
                            this.af1TiposOpcional[nContador].desc = oRespuesta.ResultGet[nContador].Desc;
                            this.af1TiposOpcional[nContador].fchDesde = oRespuesta.ResultGet[nContador].FchDesde;
                            this.af1TiposOpcional[nContador].fchHasta = oRespuesta.ResultGet[nContador].FchHasta;
                        }
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool f1ParamGetTiposTributo()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.if1TiposTributoItemCantidad = 0;
            this.if1ErrorItemCantidad = 0;
            this.if1EventItemCantidad = 0;
            if (this.f1TicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.f1AFIPTest.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIPTest.FEAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.f1token;
                        autorizacion.Sign = this.f1sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.f1AFIPTest.Service servicio = new WSAFIPFE.f1AFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.f1AFIPTest.FETributoResponse oRespuesta = servicio.FEParamGetTiposTributos(autorizacion);
                            if (oRespuesta.Errors == null)
                            {
                                this.if1ErrorItemCantidad = 0;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L0 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                                value = this.f1ErrorItemCantidad;
                                this.af1Error = new f1Error[(value - 1) + 1];
                                int VB_t_i4_L1 = this.f1ErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                    this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                                }
                            }
                            if (oRespuesta.Events == null)
                            {
                                this.if1EventItemCantidad = 0;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            else
                            {
                                this.if1EventItemCantidad = oRespuesta.Events.Length;
                                value = this.f1EventItemCantidad;
                                this.af1Event = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.f1EventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                    this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                                }
                            }
                            this.strUltimoMensajeError = this.f1ErrorMsg1;
                            this.iUltimoNumeroError = this.f1ErrorCode1;
                            this.if1TiposTributoItemCantidad = oRespuesta.ResultGet.Length;
                            value = this.f1TiposTributoItemCantidad;
                            this.af1TiposTributo = new f1TiposTributo[(value - 1) + 1];
                            int VB_t_i4_L4 = this.f1TiposTributoItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                            {
                                this.af1TiposTributo[nContador].id = oRespuesta.ResultGet[nContador].Id;
                                this.af1TiposTributo[nContador].desc = oRespuesta.ResultGet[nContador].Desc;
                                this.af1TiposTributo[nContador].fchDesde = oRespuesta.ResultGet[nContador].FchDesde;
                                this.af1TiposTributo[nContador].fchHasta = oRespuesta.ResultGet[nContador].FchHasta;
                            }
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.f1AFIP.FEAuthRequest autorizacion = new WSAFIPFE.f1AFIP.FEAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.f1token;
                    autorizacion.Sign = this.f1sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.f1AFIP.Service servicio = new WSAFIPFE.f1AFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.f1DireccionServicioURL;
                        WSAFIPFE.f1AFIP.FETributoResponse oRespuesta = servicio.FEParamGetTiposTributos(autorizacion);
                        if (oRespuesta.Errors == null)
                        {
                            this.if1ErrorItemCantidad = 0;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L5 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1ErrorItemCantidad = oRespuesta.Errors.Length;
                            value = this.f1ErrorItemCantidad;
                            this.af1Error = new f1Error[(value - 1) + 1];
                            int VB_t_i4_L6 = this.f1ErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.af1Error[nContador].code = oRespuesta.Errors[nContador].Code;
                                this.af1Error[nContador].msg = oRespuesta.Errors[nContador].Msg;
                            }
                        }
                        if (oRespuesta.Events == null)
                        {
                            this.if1EventItemCantidad = 0;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        else
                        {
                            this.if1EventItemCantidad = oRespuesta.Events.Length;
                            value = this.f1EventItemCantidad;
                            this.af1Event = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L8 = this.f1EventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                            {
                                this.af1Event[nContador].code = oRespuesta.Events[nContador].Code;
                                this.af1Event[nContador].msg = oRespuesta.Events[nContador].Msg;
                            }
                        }
                        this.strUltimoMensajeError = this.f1ErrorMsg1;
                        this.iUltimoNumeroError = this.f1ErrorCode1;
                        this.if1TiposTributoItemCantidad = oRespuesta.ResultGet.Length;
                        value = this.f1TiposTributoItemCantidad;
                        this.af1TiposTributo = new f1TiposTributo[(value - 1) + 1];
                        int VB_t_i4_L9 = this.f1TiposTributoItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                        {
                            this.af1TiposTributo[nContador].id = oRespuesta.ResultGet[nContador].Id;
                            this.af1TiposTributo[nContador].desc = oRespuesta.ResultGet[nContador].Desc;
                            this.af1TiposTributo[nContador].fchDesde = oRespuesta.ResultGet[nContador].FchDesde;
                            this.af1TiposTributo[nContador].fchHasta = oRespuesta.ResultGet[nContador].FchHasta;
                        }
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool FEAuthRequest(int pPuntoVenta, TipoComprobante pTipoComprobante, string cIdentificador)
        {
            return this.Registrar(pPuntoVenta, pTipoComprobante, cIdentificador);
        }

        public bool FEAutRequestAFIP(string cIdentificador)
        {
            int nContador;
            this.iPerCode = 0;
            this.strPermsg = "";
            bool bResultado = true;
            int nLimite = this.FECabeceraCantReg;
            if (this.Modo == modoFiscal.Test)
            {
                if (this.TicketValido)
                {
                    WSAFIPFE.afipTest.FEAuthRequest autorizacion = new WSAFIPFE.afipTest.FEAuthRequest();
                    try
                    {
                        autorizacion.cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.token;
                        autorizacion.Sign = this.sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.afipTest.FERequest oPedido = new WSAFIPFE.afipTest.FERequest();
                        WSAFIPFE.afipTest.FECabeceraRequest oPedidoCabecera = new WSAFIPFE.afipTest.FECabeceraRequest();
                        WSAFIPFE.afipTest.FEDetalleRequest[] opedidoitems = new WSAFIPFE.afipTest.FEDetalleRequest[(nLimite - 1) + 1];
                        if (cIdentificador.Trim() == "")
                        {
                            oPedidoCabecera.id = 0L;
                        }
                        else
                        {
                            oPedidoCabecera.id = Conversions.ToLong(cIdentificador);
                        }
                        oPedidoCabecera.cantidadreg = this.FECabeceraCantReg;
                        oPedidoCabecera.presta_serv = this.FECabeceraPresta_serv;
                        oPedido.Fecr = oPedidoCabecera;
                        int VB_t_i4_L0 = nLimite - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                        {
                            WSAFIPFE.afipTest.FEDetalleRequest oPedidoitem = new WSAFIPFE.afipTest.FEDetalleRequest();
                            oPedidoitem.cbt_desde = this.aFEDetalle[nContador].cbt_desde;
                            oPedidoitem.cbt_hasta = this.aFEDetalle[nContador].cbt_hasta;
                            oPedidoitem.fecha_cbte = this.aFEDetalle[nContador].fecha_cbte;
                            oPedidoitem.fecha_serv_desde = this.aFEDetalle[nContador].fecha_serv_desde;
                            oPedidoitem.fecha_serv_hasta = this.aFEDetalle[nContador].fecha_serv_hasta;
                            oPedidoitem.fecha_venc_pago = this.aFEDetalle[nContador].fecha_venc_pago;
                            oPedidoitem.imp_neto = this.aFEDetalle[nContador].imp_neto;
                            oPedidoitem.imp_op_ex = this.aFEDetalle[nContador].imp_op_ex;
                            oPedidoitem.imp_tot_conc = this.aFEDetalle[nContador].imp_tot_conc;
                            oPedidoitem.imp_total = this.aFEDetalle[nContador].imp_total;
                            oPedidoitem.impto_liq = this.aFEDetalle[nContador].impto_liq;
                            oPedidoitem.impto_liq_rni = this.aFEDetalle[nContador].impto_liq_rni;
                            oPedidoitem.nro_doc = this.aFEDetalle[nContador].nro_doc;
                            oPedidoitem.punto_vta = this.aFEDetalle[nContador].punto_vta;
                            oPedidoitem.tipo_cbte = (int) this.aFEDetalle[nContador].tipo_cbte;
                            oPedidoitem.tipo_doc = (int) this.aFEDetalle[nContador].tipo_doc;
                            opedidoitems[nContador] = oPedidoitem;
                        }
                        oPedido.Fedr = opedidoitems;
                        WSAFIPFE.afipTest.Service servicio = new WSAFIPFE.afipTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        if (this.ArchivoXMLEnviado != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.afipTest.FERequest));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                                writer1.Serialize((TextWriter) file1, oPedido);
                                file1.Close();
                            }
                            catch (Exception exception2)
                            {
                                ProjectData.SetProjectError(exception2);
                                Exception miEx = exception2;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        WSAFIPFE.afipTest.FEResponse oRespuesta = servicio.FEAutRequest(autorizacion, oPedido);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.afipTest.FEResponse));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception3)
                            {
                                ProjectData.SetProjectError(exception3);
                                Exception miEx = exception3;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                        }
                        else
                        {
                            WSAFIPFE.afipTest.FECabeceraResponse oRespuestaDetalle = oRespuesta.FecResp;
                            if (oRespuestaDetalle == null)
                            {
                                this.iFERespuestaCantidadReg = 0;
                                bResultado = false;
                            }
                            else
                            {
                                this.iFERespuestaCantidadReg = oRespuestaDetalle.cantidadreg;
                                int value = this.FERespuestaCantidadReg;
                                this.aFERespuestaDetalle = new FEDetalleRespuesta[(value - 1) + 1];
                                this.iFERespuestaPresta_serv = oRespuestaDetalle.presta_serv;
                                this.uFERespuestaCuit = oRespuestaDetalle.cuit;
                                this.uFERespuestaId = oRespuestaDetalle.id;
                                this.strFERespuestaFecha_cae = oRespuestaDetalle.fecha_cae;
                                this.strFERespuestaMotivo = oRespuestaDetalle.motivo;
                                this.strFERespuestaReproceso = oRespuestaDetalle.reproceso;
                                this.strFERespuestaResultado = oRespuestaDetalle.resultado;
                                int VB_t_i4_L1 = oRespuesta.FedResp.Length - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    WSAFIPFE.afipTest.FEDetalleResponse oRespuestaDetalleItem = oRespuesta.FedResp[nContador];
                                    this.aFERespuestaDetalle[nContador].cae = oRespuestaDetalleItem.cae;
                                    if (oRespuestaDetalleItem.cae == "NULL")
                                    {
                                        bResultado = false;
                                    }
                                    this.aFERespuestaDetalle[nContador].cbt_desde = oRespuestaDetalleItem.cbt_desde;
                                    this.aFERespuestaDetalle[nContador].cbt_hasta = oRespuestaDetalleItem.cbt_hasta;
                                    this.aFERespuestaDetalle[nContador].fecha_cbte = oRespuestaDetalleItem.fecha_cbte;
                                    this.aFERespuestaDetalle[nContador].fecha_serv_desde = oRespuestaDetalleItem.fecha_serv_desde;
                                    this.aFERespuestaDetalle[nContador].fecha_serv_hasta = oRespuestaDetalleItem.fecha_serv_hasta;
                                    this.aFERespuestaDetalle[nContador].fecha_venc_pago = oRespuestaDetalleItem.fecha_venc_pago;
                                    this.aFERespuestaDetalle[nContador].fecha_vto = oRespuestaDetalleItem.fecha_vto;
                                    this.aFERespuestaDetalle[nContador].imp_neto = oRespuestaDetalleItem.imp_neto;
                                    this.aFERespuestaDetalle[nContador].imp_op_ex = oRespuestaDetalleItem.imp_op_ex;
                                    this.aFERespuestaDetalle[nContador].imp_tot_conc = oRespuestaDetalleItem.imp_tot_conc;
                                    this.aFERespuestaDetalle[nContador].imp_total = oRespuestaDetalleItem.imp_total;
                                    this.aFERespuestaDetalle[nContador].impto_liq = oRespuestaDetalleItem.impto_liq;
                                    this.aFERespuestaDetalle[nContador].impto_liq_rni = oRespuestaDetalleItem.impto_liq_rni;
                                    this.aFERespuestaDetalle[nContador].motivo = oRespuestaDetalleItem.motivo;
                                    this.aFERespuestaDetalle[nContador].nro_doc = oRespuestaDetalleItem.nro_doc;
                                    this.aFERespuestaDetalle[nContador].punto_vta = oRespuestaDetalleItem.punto_vta;
                                    this.aFERespuestaDetalle[nContador].resultado = oRespuestaDetalleItem.resultado;
                                    this.aFERespuestaDetalle[nContador].tipo_cbte = (TipoComprobante) oRespuestaDetalleItem.tipo_cbte;
                                    this.aFERespuestaDetalle[nContador].tipo_doc = (TipoDocumento) oRespuestaDetalleItem.tipo_doc;
                                }
                            }
                        }
                        if (bResultado && (this.FERespuestaResultado != "A"))
                        {
                            bResultado = false;
                        }
                        this.strPermsg = oRespuesta.RError.perrmsg;
                        this.iPerCode = oRespuesta.RError.percode;
                        this.strUltimoMensajeError = this.Permsg;
                        this.iUltimoNumeroError = 0x3e8;
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.TicketValido)
            {
                WSAFIPFE.afip.FEAuthRequest autorizacion = new WSAFIPFE.afip.FEAuthRequest();
                try
                {
                    autorizacion.cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.token;
                    autorizacion.Sign = this.sign;
                }
                catch (Exception exception4)
                {
                    ProjectData.SetProjectError(exception4);
                    Exception ex = exception4;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.afip.FERequest oPedido = new WSAFIPFE.afip.FERequest();
                    WSAFIPFE.afip.FECabeceraRequest oPedidoCabecera = new WSAFIPFE.afip.FECabeceraRequest();
                    WSAFIPFE.afip.FEDetalleRequest[] opedidoitems = new WSAFIPFE.afip.FEDetalleRequest[(nLimite - 1) + 1];
                    if (cIdentificador.Trim() == "")
                    {
                        oPedidoCabecera.id = 0L;
                    }
                    else
                    {
                        oPedidoCabecera.id = Conversions.ToLong(cIdentificador);
                    }
                    oPedidoCabecera.cantidadreg = this.FECabeceraCantReg;
                    oPedidoCabecera.presta_serv = this.FECabeceraPresta_serv;
                    oPedido.Fecr = oPedidoCabecera;
                    int VB_t_i4_L2 = nLimite - 1;
                    for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                    {
                        WSAFIPFE.afip.FEDetalleRequest oPedidoitem = new WSAFIPFE.afip.FEDetalleRequest();
                        oPedidoitem.cbt_desde = this.aFEDetalle[nContador].cbt_desde;
                        oPedidoitem.cbt_hasta = this.aFEDetalle[nContador].cbt_hasta;
                        oPedidoitem.fecha_cbte = this.aFEDetalle[nContador].fecha_cbte;
                        oPedidoitem.fecha_serv_desde = this.aFEDetalle[nContador].fecha_serv_desde;
                        oPedidoitem.fecha_serv_hasta = this.aFEDetalle[nContador].fecha_serv_hasta;
                        oPedidoitem.fecha_venc_pago = this.aFEDetalle[nContador].fecha_venc_pago;
                        oPedidoitem.imp_neto = this.aFEDetalle[nContador].imp_neto;
                        oPedidoitem.imp_op_ex = this.aFEDetalle[nContador].imp_op_ex;
                        oPedidoitem.imp_tot_conc = this.aFEDetalle[nContador].imp_tot_conc;
                        oPedidoitem.imp_total = this.aFEDetalle[nContador].imp_total;
                        oPedidoitem.impto_liq = this.aFEDetalle[nContador].impto_liq;
                        oPedidoitem.impto_liq_rni = this.aFEDetalle[nContador].impto_liq_rni;
                        oPedidoitem.nro_doc = this.aFEDetalle[nContador].nro_doc;
                        oPedidoitem.punto_vta = this.aFEDetalle[nContador].punto_vta;
                        oPedidoitem.tipo_cbte = (int) this.aFEDetalle[nContador].tipo_cbte;
                        oPedidoitem.tipo_doc = (int) this.aFEDetalle[nContador].tipo_doc;
                        opedidoitems[nContador] = oPedidoitem;
                    }
                    oPedido.Fedr = opedidoitems;
                    WSAFIPFE.afip.Service servicio = new WSAFIPFE.afip.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.DireccionServicioURL;
                    if (this.TimeOut != 0)
                    {
                        servicio.Timeout = this.TimeOut;
                    }
                    if (this.ArchivoXMLEnviado != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.afip.FERequest));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                            writer1.Serialize((TextWriter) file1, oPedido);
                            file1.Close();
                        }
                        catch (Exception exception5)
                        {
                            ProjectData.SetProjectError(exception5);
                            Exception miEx = exception5;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    WSAFIPFE.afip.FEResponse oRespuesta = servicio.FEAutRequest(autorizacion, oPedido);
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.afip.FEResponse));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception6)
                        {
                            ProjectData.SetProjectError(exception6);
                            Exception miEx = exception6;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                    }
                    else
                    {
                        WSAFIPFE.afip.FECabeceraResponse oRespuestaDetalle = oRespuesta.FecResp;
                        if (oRespuestaDetalle == null)
                        {
                            this.iFERespuestaCantidadReg = 0;
                            bResultado = false;
                        }
                        else
                        {
                            this.iFERespuestaCantidadReg = oRespuestaDetalle.cantidadreg;
                            int value = this.FERespuestaCantidadReg;
                            this.aFERespuestaDetalle = new FEDetalleRespuesta[(value - 1) + 1];
                            this.iFERespuestaPresta_serv = oRespuestaDetalle.presta_serv;
                            this.uFERespuestaCuit = oRespuestaDetalle.cuit;
                            this.uFERespuestaId = oRespuestaDetalle.id;
                            this.strFERespuestaFecha_cae = oRespuestaDetalle.fecha_cae;
                            this.strFERespuestaMotivo = oRespuestaDetalle.motivo;
                            this.strFERespuestaReproceso = oRespuestaDetalle.reproceso;
                            this.strFERespuestaResultado = oRespuestaDetalle.resultado;
                            int VB_t_i4_L3 = oRespuesta.FedResp.Length - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                            {
                                WSAFIPFE.afip.FEDetalleResponse oRespuestaDetalleItem = oRespuesta.FedResp[nContador];
                                this.aFERespuestaDetalle[nContador].cae = oRespuestaDetalleItem.cae;
                                if (oRespuestaDetalleItem.cae == "NULL")
                                {
                                    bResultado = false;
                                }
                                this.aFERespuestaDetalle[nContador].cbt_desde = oRespuestaDetalleItem.cbt_desde;
                                this.aFERespuestaDetalle[nContador].cbt_hasta = oRespuestaDetalleItem.cbt_hasta;
                                this.aFERespuestaDetalle[nContador].fecha_cbte = oRespuestaDetalleItem.fecha_cbte;
                                this.aFERespuestaDetalle[nContador].fecha_serv_desde = oRespuestaDetalleItem.fecha_serv_desde;
                                this.aFERespuestaDetalle[nContador].fecha_serv_hasta = oRespuestaDetalleItem.fecha_serv_hasta;
                                this.aFERespuestaDetalle[nContador].fecha_venc_pago = oRespuestaDetalleItem.fecha_venc_pago;
                                this.aFERespuestaDetalle[nContador].fecha_vto = oRespuestaDetalleItem.fecha_vto;
                                this.aFERespuestaDetalle[nContador].imp_neto = oRespuestaDetalleItem.imp_neto;
                                this.aFERespuestaDetalle[nContador].imp_op_ex = oRespuestaDetalleItem.imp_op_ex;
                                this.aFERespuestaDetalle[nContador].imp_tot_conc = oRespuestaDetalleItem.imp_tot_conc;
                                this.aFERespuestaDetalle[nContador].imp_total = oRespuestaDetalleItem.imp_total;
                                this.aFERespuestaDetalle[nContador].impto_liq = oRespuestaDetalleItem.impto_liq;
                                this.aFERespuestaDetalle[nContador].impto_liq_rni = oRespuestaDetalleItem.impto_liq_rni;
                                this.aFERespuestaDetalle[nContador].motivo = oRespuestaDetalleItem.motivo;
                                this.aFERespuestaDetalle[nContador].nro_doc = oRespuestaDetalleItem.nro_doc;
                                this.aFERespuestaDetalle[nContador].punto_vta = oRespuestaDetalleItem.punto_vta;
                                this.aFERespuestaDetalle[nContador].resultado = oRespuestaDetalleItem.resultado;
                                this.aFERespuestaDetalle[nContador].tipo_cbte = (TipoComprobante) oRespuestaDetalleItem.tipo_cbte;
                                this.aFERespuestaDetalle[nContador].tipo_doc = (TipoDocumento) oRespuestaDetalleItem.tipo_doc;
                            }
                        }
                    }
                    if (bResultado && (this.FERespuestaResultado != "A"))
                    {
                        bResultado = false;
                    }
                    this.strPermsg = oRespuesta.RError.perrmsg;
                    this.iPerCode = oRespuesta.RError.percode;
                    this.strUltimoMensajeError = this.Permsg;
                    this.iUltimoNumeroError = 0x3e8;
                }
                return bResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return bResultado;
        }

        public bool FEConsultaCAERequest(string cCuit, TipoComprobante iTipoComprobante, int iPuntoVenta, int iNumero, double mTotal, string cCae, string cFecha)
        {
            bool bResultado = false;
            if (this.TicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.afipTest.FEAuthRequest autorizacion = new WSAFIPFE.afipTest.FEAuthRequest();
                    try
                    {
                        autorizacion.cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.token;
                        autorizacion.Sign = this.sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 5;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.afipTest.FEConsultaCAEReq oParametro = new WSAFIPFE.afipTest.FEConsultaCAEReq();
                            WSAFIPFE.afipTest.Service servicio = new WSAFIPFE.afipTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            oParametro.cae = cCae;
                            oParametro.cbt_nro = iNumero;
                            oParametro.fecha_cbte = cFecha;
                            oParametro.imp_total = mTotal;
                            oParametro.punto_vta = iPuntoVenta;
                            oParametro.tipo_cbte = (int) iTipoComprobante;
                            if (servicio.FEConsultaCAERequest(autorizacion, oParametro).Resultado == 1)
                            {
                                return true;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x10;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.afip.FEAuthRequest autorizacion = new WSAFIPFE.afip.FEAuthRequest();
                try
                {
                    autorizacion.cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.token;
                    autorizacion.Sign = this.sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 5;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (!bResultado)
                {
                    return bResultado;
                }
                try
                {
                    WSAFIPFE.afip.FEConsultaCAEReq oParametro = new WSAFIPFE.afip.FEConsultaCAEReq();
                    WSAFIPFE.afip.Service servicio = new WSAFIPFE.afip.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.DireccionServicioURL;
                    if (this.TimeOut != 0)
                    {
                        servicio.Timeout = this.TimeOut;
                    }
                    oParametro.cae = cCae;
                    oParametro.cbt_nro = iNumero;
                    oParametro.fecha_cbte = cFecha;
                    oParametro.imp_total = mTotal;
                    oParametro.punto_vta = iPuntoVenta;
                    oParametro.tipo_cbte = (int) iTipoComprobante;
                    if (servicio.FEConsultaCAERequest(autorizacion, oParametro).Resultado == 1)
                    {
                        return true;
                    }
                    bResultado = false;
                }
                catch (Exception exception4)
                {
                    ProjectData.SetProjectError(exception4);
                    Exception ex = exception4;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 0x10;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        public int FERecuperaLastCMPRequest(int iPuntoVenta, TipoComprobante iTipoComprobante)
        {
            return this.RecuperaLastCPM(iPuntoVenta, iTipoComprobante);
        }

        public int FERecuperaQTYRequest()
        {
            int nResultado = 0;
            bool bResultado = true;
            if (this.TicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    nResultado = 0;
                    WSAFIPFE.afipTest.FEAuthRequest autorizacion = new WSAFIPFE.afipTest.FEAuthRequest();
                    try
                    {
                        autorizacion.cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.token;
                        autorizacion.Sign = this.sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 5;
                        this.strUltimoMensajeError = ex.Message;
                        nResultado = 0;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.afipTest.Service servicio = new WSAFIPFE.afipTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            nResultado = servicio.FERecuperaQTYRequest(autorizacion).qty.value;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x10;
                            nResultado = 0;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return nResultado;
                }
                WSAFIPFE.afip.FEAuthRequest autorizacion = new WSAFIPFE.afip.FEAuthRequest();
                try
                {
                    autorizacion.cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.token;
                    autorizacion.Sign = this.sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 5;
                    this.strUltimoMensajeError = ex.Message;
                    nResultado = 0;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (!bResultado)
                {
                    return nResultado;
                }
                try
                {
                    WSAFIPFE.afip.Service servicio = new WSAFIPFE.afip.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.DireccionServicioURL;
                    if (this.TimeOut != 0)
                    {
                        servicio.Timeout = this.TimeOut;
                    }
                    nResultado = servicio.FERecuperaQTYRequest(autorizacion).qty.value;
                }
                catch (Exception exception4)
                {
                    ProjectData.SetProjectError(exception4);
                    Exception ex = exception4;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 0x10;
                    nResultado = 0;
                    ProjectData.ClearProjectError();
                }
            }
            return nResultado;
        }

        public string FEUltNroRequest()
        {
            long nResultado = 0L;
            bool bResultado = true;
            this.strPermsg = "";
            this.iPerCode = 0;
            this.strUltimoMensajeError = "";
            this.iUltimoNumeroError = 0;
            if (this.TicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    nResultado = 0L;
                    WSAFIPFE.afipTest.FEAuthRequest autorizacion = new WSAFIPFE.afipTest.FEAuthRequest();
                    try
                    {
                        autorizacion.cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.token;
                        autorizacion.Sign = this.sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 5;
                        this.strUltimoMensajeError = ex.Message;
                        nResultado = 0L;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.afipTest.FERequest oParametro = new WSAFIPFE.afipTest.FERequest();
                            WSAFIPFE.afipTest.Service servicio = new WSAFIPFE.afipTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.afipTest.FEUltNroResponse oRespuesta = servicio.FEUltNroRequest(autorizacion);
                            nResultado = oRespuesta.nro.value;
                            this.strPermsg = oRespuesta.RError.perrmsg;
                            this.iPerCode = oRespuesta.RError.percode;
                            this.strUltimoMensajeError = oRespuesta.RError.perrmsg;
                            this.iUltimoNumeroError = oRespuesta.RError.percode;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x10;
                            nResultado = 0L;
                            ProjectData.ClearProjectError();
                        }
                    }
                }
                else
                {
                    WSAFIPFE.afip.FEAuthRequest autorizacion = new WSAFIPFE.afip.FEAuthRequest();
                    try
                    {
                        autorizacion.cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.token;
                        autorizacion.Sign = this.sign;
                    }
                    catch (Exception exception3)
                    {
                        ProjectData.SetProjectError(exception3);
                        Exception ex = exception3;
                        this.iUltimoNumeroError = 5;
                        this.strUltimoMensajeError = ex.Message;
                        nResultado = 0L;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.afip.FERequest oParametro = new WSAFIPFE.afip.FERequest();
                            WSAFIPFE.afip.Service servicio = new WSAFIPFE.afip.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            servicio.Url = this.DireccionServicioURL;
                            if (this.TimeOut != 0)
                            {
                                servicio.Timeout = this.TimeOut;
                            }
                            WSAFIPFE.afip.FEUltNroResponse oRespuesta = servicio.FEUltNroRequest(autorizacion);
                            nResultado = oRespuesta.nro.value;
                            this.strPermsg = oRespuesta.RError.perrmsg;
                            this.iPerCode = oRespuesta.RError.percode;
                            this.strUltimoMensajeError = oRespuesta.RError.perrmsg;
                            this.iUltimoNumeroError = oRespuesta.RError.percode;
                        }
                        catch (Exception exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            Exception ex = exception4;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x10;
                            nResultado = 0L;
                            ProjectData.ClearProjectError();
                        }
                    }
                }
            }
            return nResultado.ToString();
        }

        public bool fxAutorizarComprobante()
        {
            bool bResultado = true;
            this.fxIndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ifxListaItemCantidad = 0;
            this.ifxErrorItemCantidad = 0;
            this.ifxEventItemCantidad = 0;
            this.lfxRespuestaCAE = 0L;
            this.ifxRespuestaNumeroPuntoVenta = 0;
            this.lfxRespuestaNumeroComprobante = 0L;
            this.dfxRespuestaFechaEmision = new DateTime();
            this.ifxRespuestaCodigoTipoComprobante = 0;
            this.dfxRespuestaFechaVencimientoCAE = new DateTime();
            if (this.fxTicketValido & ((this.Modo == modoFiscal.Test) | ((this.Modo == modoFiscal.Fiscal) & this.fxLicenciaValidaCAE)))
            {
                int nContador2;
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.fxAFIPTest.AuthRequestType autorizacion = new WSAFIPFE.fxAFIPTest.AuthRequestType();
                    try
                    {
                        autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                        autorizacion.token = this.fxtoken;
                        autorizacion.sign = this.fxsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.fxAFIPTest.ComprobanteType oPedido = new WSAFIPFE.fxAFIPTest.ComprobanteType();
                            WSAFIPFE.fxAFIPTest.MTXCAService servicio = new WSAFIPFE.fxAFIPTest.MTXCAService();
                            WSAFIPFE.fxAFIPTest.CodigoDescripcionType oEvento = null;
                            WSAFIPFE.fxAFIPTest.ComprobanteCAEResponseType oRespuesta = null;
                            WSAFIPFE.fxAFIPTest.CodigoDescripcionType[] oObservaciones = null;
                            WSAFIPFE.fxAFIPTest.CodigoDescripcionType[] oErrores = null;
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            value = (int) Math.Round(this.fxItemCantidad);
                            WSAFIPFE.fxAFIPTest.ComprobanteAsociadoType[] oPedidoItemCbteAsocs = new WSAFIPFE.fxAFIPTest.ComprobanteAsociadoType[1];
                            WSAFIPFE.fxAFIPTest.SubtotalIVAType[] oPedidoItemIvas = new WSAFIPFE.fxAFIPTest.SubtotalIVAType[1];
                            WSAFIPFE.fxAFIPTest.OtroTributoType[] oPedidoItemTributos = new WSAFIPFE.fxAFIPTest.OtroTributoType[1];
                            WSAFIPFE.fxAFIPTest.ItemType[] oPedidoitems = new WSAFIPFE.fxAFIPTest.ItemType[1];
                            if (this.fxFechaServicioDesde == "20010101")
                            {
                                this.fxFechaServicioDesdeNO = true;
                            }
                            if (this.fxFechaServicioHasta == "20010101")
                            {
                                this.fxFechaServicioHastaNO = true;
                            }
                            if (this.fxFechaVencimiento == "20010101")
                            {
                                this.fxFechaVencimientoNO = true;
                            }
                            if (this.fxFechaVencimientoPago == "20010101")
                            {
                                this.fxFechaVencimientoPagoNO = true;
                            }
                            if (this.fxCodigoAutorizacion == "0")
                            {
                                this.fxCodigoAutorizacionNO = true;
                            }
                            if (this.fxCodigoTipoAutorizacion == "")
                            {
                                this.fxCodigoTipoAutorizacionNO = true;
                            }
                            oPedido.codigoAutorizacionSpecified = !this.fxCodigoAutorizacionNO;
                            oPedido.codigoTipoAutorizacionSpecified = !this.fxCodigoTipoAutorizacionNO;
                            oPedido.codigoTipoDocumentoSpecified = !this.fxCodigoTipoDocumentoNO;
                            oPedido.fechaServicioHastaSpecified = !this.fxFechaServicioHastaNO;
                            oPedido.fechaEmisionSpecified = !this.fxFechaEmisionNO;
                            oPedido.fechaServicioDesdeSpecified = !this.fxFechaServicioDesdeNO;
                            oPedido.fechaServicioHastaSpecified = !this.fxFechaServicioHastaNO;
                            oPedido.fechaVencimientoPagoSpecified = !this.fxFechaVencimientoPagoNO;
                            oPedido.fechaVencimientoSpecified = !this.fxFechaVencimientoNO;
                            oPedido.importeExentoSpecified = !this.fxImporteExentoNO;
                            oPedido.importeGravadoSpecified = !this.fxImporteGravadoNO;
                            oPedido.importeNoGravadoSpecified = !this.fxImporteNoGravadoNO;
                            oPedido.importeOtrosTributosSpecified = !this.fxImporteOtrosTributosNO;
                            oPedido.numeroDocumentoSpecified = !this.fxNumeroDocumentoNO;
                            oPedido.codigoAutorizacion = Conversions.ToLong(this.fxCodigoAutorizacion);
                            oPedido.codigoConcepto = (short) this.fxCodigoConcepto;
                            oPedido.codigoMoneda = this.fxCodigoMoneda;
                            if (this.fxCodigoTipoAutorizacion == "A")
                            {
                                oPedido.codigoTipoAutorizacion = WSAFIPFE.fxAFIPTest.CodigoTipoAutorizacionSimpleType.A;
                            }
                            else
                            {
                                oPedido.codigoTipoAutorizacion = WSAFIPFE.fxAFIPTest.CodigoTipoAutorizacionSimpleType.E;
                            }
                            oPedido.codigoTipoComprobante = (short) this.fxCodigoTipoComprobante;
                            oPedido.codigoTipoDocumento = (short) this.fxCodigoTipoDocumento;
                            oPedido.cotizacionMoneda = new decimal(this.fxCotizacionMoneda);
                            oPedido.fechaEmision = DateTime.ParseExact(this.fxFechaEmision, "yyyyMMdd", null);
                            oPedido.fechaServicioDesde = DateTime.ParseExact(this.fxFechaServicioDesde, "yyyyMMdd", null);
                            oPedido.fechaServicioHasta = DateTime.ParseExact(this.fxFechaServicioHasta, "yyyyMMdd", null);
                            oPedido.fechaVencimiento = DateTime.ParseExact(this.fxFechaVencimiento, "yyyyMMdd", null);
                            oPedido.fechaVencimientoPago = DateTime.ParseExact(this.fxFechaVencimientoPago, "yyyyMMdd", null);
                            oPedido.importeExento = new decimal(this.fxImporteExento);
                            oPedido.importeGravado = new decimal(this.fxImporteGravado);
                            oPedido.importeNoGravado = new decimal(this.fxImporteNoGravado);
                            oPedido.importeOtrosTributos = new decimal(this.fxImporteOtrosTributos);
                            oPedido.importeSubtotal = new decimal(this.fxImporteSubTotal);
                            oPedido.importeTotal = new decimal(this.fxImporteTotal);
                            oPedido.numeroComprobante = this.fxNumeroComprobante;
                            oPedido.numeroDocumento = Conversions.ToLong(this.fxNumeroDocumento);
                            oPedido.numeroPuntoVenta = (short) this.fxNumeroPuntoVenta;
                            oPedido.observaciones = this.fxObservaciones;
                            if (this.fxComprobantesAsociadosItemCantidad == 0)
                            {
                                oPedidoItemCbteAsocs = null;
                            }
                            else
                            {
                                oPedidoItemCbteAsocs = new WSAFIPFE.fxAFIPTest.ComprobanteAsociadoType[(this.fxComprobantesAsociadosItemCantidad - 1) + 1];
                                int VB_t_i4_L0 = this.fxComprobantesAsociadosItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L0; nContador2++)
                                {
                                    WSAFIPFE.fxAFIPTest.ComprobanteAsociadoType oPedidoItemCbteAsoc = new WSAFIPFE.fxAFIPTest.ComprobanteAsociadoType();
                                    this.fxIndiceItem = nContador2;
                                    oPedidoItemCbteAsoc.codigoTipoComprobante = (short) this.fxComprobanteAsosiadoCodigoTipoComprobante;
                                    oPedidoItemCbteAsoc.numeroComprobante = this.fxComprobanteAsosiadoNumeroComprobante;
                                    oPedidoItemCbteAsoc.numeroPuntoVenta = (short) this.fxComprobanteAsosiadoNumeroPuntoVenta;
                                    oPedidoItemCbteAsocs[nContador2] = oPedidoItemCbteAsoc;
                                }
                            }
                            oPedido.arrayComprobantesAsociados = oPedidoItemCbteAsocs;
                            if (this.fxSubTotalesItemCantidad == 0)
                            {
                                oPedidoItemIvas = null;
                            }
                            else
                            {
                                oPedidoItemIvas = new WSAFIPFE.fxAFIPTest.SubtotalIVAType[(this.fxSubTotalesItemCantidad - 1) + 1];
                                int VB_t_i4_L1 = this.fxSubTotalesItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L1; nContador2++)
                                {
                                    WSAFIPFE.fxAFIPTest.SubtotalIVAType oPedidoItemIva = new WSAFIPFE.fxAFIPTest.SubtotalIVAType();
                                    this.fxIndiceItem = nContador2;
                                    oPedidoItemIva.codigo = (short) this.fxSubTotalesIvaCodigo;
                                    oPedidoItemIva.importe = new decimal(this.fxSubTotalesIvaImporte);
                                    oPedidoItemIvas[nContador2] = oPedidoItemIva;
                                }
                            }
                            oPedido.arraySubtotalesIVA = oPedidoItemIvas;
                            if (this.fxOtrosTributosItemCantidad == 0)
                            {
                                oPedidoItemTributos = null;
                            }
                            else
                            {
                                oPedidoItemTributos = new WSAFIPFE.fxAFIPTest.OtroTributoType[(this.fxOtrosTributosItemCantidad - 1) + 1];
                                int VB_t_i4_L2 = this.fxOtrosTributosItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L2; nContador2++)
                                {
                                    WSAFIPFE.fxAFIPTest.OtroTributoType oPedidoItemTributo = new WSAFIPFE.fxAFIPTest.OtroTributoType();
                                    this.fxIndiceItem = nContador2;
                                    oPedidoItemTributo.baseImponible = new decimal(this.fxOtrosTributosBaseImponible);
                                    oPedidoItemTributo.codigo = (short) this.fxOtrosTributosCodigo;
                                    oPedidoItemTributo.descripcion = this.fxOtrosTributosDescripcion;
                                    oPedidoItemTributo.importe = new decimal(this.fxOtrosTributosImporte);
                                    oPedidoItemTributos[nContador2] = oPedidoItemTributo;
                                }
                            }
                            oPedido.arrayOtrosTributos = oPedidoItemTributos;
                            if (this.fxItemsItemCantidad == 0)
                            {
                                oPedidoitems = null;
                            }
                            else
                            {
                                oPedidoitems = new WSAFIPFE.fxAFIPTest.ItemType[(this.fxItemsItemCantidad - 1) + 1];
                                int VB_t_i4_L3 = this.fxItemsItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L3; nContador2++)
                                {
                                    WSAFIPFE.fxAFIPTest.ItemType oPedidoitem = new WSAFIPFE.fxAFIPTest.ItemType();
                                    this.fxIndiceItem = nContador2;
                                    oPedidoitem.cantidadSpecified = !this.fxItemCantidadNO;
                                    oPedidoitem.importeBonificacionSpecified = !this.fxItemImporteBonificacionNO;
                                    oPedidoitem.importeIVASpecified = !this.fxItemImporteIvaNO;
                                    oPedidoitem.precioUnitarioSpecified = !this.fxItemPrecioUnitarioNO;
                                    oPedidoitem.unidadesMtxSpecified = !this.fxItemUnidadesMtxNO;
                                    oPedidoitem.cantidad = new decimal(this.fxItemCantidad);
                                    oPedidoitem.codigo = this.fxItemCodigo;
                                    oPedidoitem.codigoCondicionIVA = (short) this.fxItemCodigoCondicionIva;
                                    oPedidoitem.codigoMtx = this.fxItemCodigoMtx;
                                    oPedidoitem.codigoUnidadMedida = (short) this.fxItemCodigoUnidadMedida;
                                    oPedidoitem.descripcion = this.fxItemDescripcion;
                                    oPedidoitem.importeBonificacion = new decimal(this.fxItemImporteBonificacion);
                                    oPedidoitem.importeItem = new decimal(this.fxItemImporteItem);
                                    oPedidoitem.importeIVA = new decimal(this.fxItemImporteIva);
                                    oPedidoitem.precioUnitario = new decimal(this.fxItemPrecioUnitario);
                                    oPedidoitem.unidadesMtx = this.fxItemUnidadesMtx;
                                    oPedidoitems[nContador2] = oPedidoitem;
                                }
                            }
                            oPedido.arrayItems = oPedidoitems;
                            if (this.ArchivoXMLEnviado != "")
                            {
                                try
                                {
                                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIPTest.ComprobanteType));
                                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                                    writer1.Serialize((TextWriter) file1, oPedido);
                                    file1.Close();
                                }
                                catch (Exception exception2)
                                {
                                    ProjectData.SetProjectError(exception2);
                                    Exception miEx = exception2;
                                    this.strArchivoXMLError = miEx.Message;
                                    ProjectData.ClearProjectError();
                                }
                            }
                            WSAFIPFE.fxAFIPTest.ResultadoSimpleType oresultado = servicio.autorizarComprobante(autorizacion, oPedido, ref oRespuesta, ref oObservaciones, ref oErrores, ref oEvento);
                            if (this.ArchivoXMLRecibido != "")
                            {
                                try
                                {
                                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIPTest.ComprobanteCAEResponseType));
                                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                    writer1.Serialize((TextWriter) file1, oRespuesta);
                                    file1.Close();
                                }
                                catch (Exception exception3)
                                {
                                    ProjectData.SetProjectError(exception3);
                                    Exception miEx = exception3;
                                    this.strArchivoXMLError = miEx.Message;
                                    ProjectData.ClearProjectError();
                                }
                            }
                            if (oEvento == null)
                            {
                                this.ifxEventItemCantidad = 0;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[1];
                            }
                            else
                            {
                                this.ifxEventItemCantidad = 1;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L4 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            if (oErrores == null)
                            {
                                this.ifxErrorItemCantidad = 0;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[1];
                            }
                            else
                            {
                                this.ifxErrorItemCantidad = 1;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[(value - 1) + 1];
                                int VB_t_i4_L5 = this.fxErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                                {
                                    this.afxError[nContador].code = oErrores[nContador].codigo;
                                    this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                }
                            }
                            if (oObservaciones == null)
                            {
                                this.ifxObervacionItemCantidad = 0;
                                value = this.fxObervacionItemCantidad;
                                this.afxObervacion = new fxObservacion[1];
                            }
                            else
                            {
                                this.ifxObervacionItemCantidad = 1;
                                value = this.fxObervacionItemCantidad;
                                this.afxObervacion = new fxObservacion[(value - 1) + 1];
                                int VB_t_i4_L6 = this.fxObervacionItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                                {
                                    this.afxObervacion[nContador].codigo = oObservaciones[nContador].codigo;
                                    this.afxObervacion[nContador].descripcion = oObservaciones[nContador].descripcion;
                                }
                            }
                            this.strfxRespuestaResultado = oresultado.ToString();
                            if (oRespuesta == null)
                            {
                                bResultado = false;
                            }
                            else
                            {
                                this.lfxRespuestaCAE = oRespuesta.CAE;
                                this.ifxRespuestaNumeroPuntoVenta = oRespuesta.numeroPuntoVenta;
                                this.lfxRespuestaNumeroComprobante = oRespuesta.numeroComprobante;
                                this.dfxRespuestaFechaEmision = oRespuesta.fechaEmision;
                                this.ifxRespuestaCodigoTipoComprobante = oRespuesta.codigoTipoComprobante;
                                this.dfxRespuestaFechaVencimientoCAE = oRespuesta.fechaVencimientoCAE;
                            }
                        }
                        catch (SoapException exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            SoapException ex1 = exception4;
                            bResultado = false;
                            this.strfxRespuestaResultado = "R";
                            this.gstrErrorMensaje = ex1.Message;
                            this.gstrErrorCodigo = ex1.Code.ToString();
                            this.ifxErrorItemCantidad = 1;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L7 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.afxError[nContador].msg = ex1.Message;
                                this.afxError[nContador].code = 0;
                            }
                            this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                            this.iUltimoNumeroError = 13;
                            ProjectData.ClearProjectError();
                        }
                        catch (Exception exception5)
                        {
                            ProjectData.SetProjectError(exception5);
                            Exception ex = exception5;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                }
                else
                {
                    WSAFIPFE.fxAFIP.AuthRequestType autorizacion = new WSAFIPFE.fxAFIP.AuthRequestType();
                    try
                    {
                        autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                        autorizacion.token = this.fxtoken;
                        autorizacion.sign = this.fxsign;
                    }
                    catch (Exception exception6)
                    {
                        ProjectData.SetProjectError(exception6);
                        Exception ex = exception6;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.fxAFIP.ComprobanteType oPedido = new WSAFIPFE.fxAFIP.ComprobanteType();
                            WSAFIPFE.fxAFIP.MTXCAService servicio = new WSAFIPFE.fxAFIP.MTXCAService();
                            WSAFIPFE.fxAFIP.CodigoDescripcionType oEvento = null;
                            WSAFIPFE.fxAFIP.ComprobanteCAEResponseType oRespuesta = null;
                            WSAFIPFE.fxAFIP.CodigoDescripcionType[] oObservaciones = null;
                            WSAFIPFE.fxAFIP.CodigoDescripcionType[] oErrores = null;
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            servicio.Url = this.fxDireccionServicioURL;
                            value = (int) Math.Round(this.fxItemCantidad);
                            WSAFIPFE.fxAFIP.ComprobanteAsociadoType[] oPedidoItemCbteAsocs = new WSAFIPFE.fxAFIP.ComprobanteAsociadoType[1];
                            WSAFIPFE.fxAFIP.SubtotalIVAType[] oPedidoItemIvas = new WSAFIPFE.fxAFIP.SubtotalIVAType[1];
                            WSAFIPFE.fxAFIP.OtroTributoType[] oPedidoItemTributos = new WSAFIPFE.fxAFIP.OtroTributoType[1];
                            WSAFIPFE.fxAFIP.ItemType[] oPedidoitems = new WSAFIPFE.fxAFIP.ItemType[1];
                            if (this.fxFechaServicioDesde == "20010101")
                            {
                                this.fxFechaServicioDesdeNO = true;
                            }
                            if (this.fxFechaServicioHasta == "20010101")
                            {
                                this.fxFechaServicioHastaNO = true;
                            }
                            if (this.fxFechaVencimiento == "20010101")
                            {
                                this.fxFechaVencimientoNO = true;
                            }
                            if (this.fxFechaVencimientoPago == "20010101")
                            {
                                this.fxFechaVencimientoPagoNO = true;
                            }
                            if (this.fxCodigoAutorizacion == "0")
                            {
                                this.fxCodigoAutorizacionNO = true;
                            }
                            if (this.fxCodigoTipoAutorizacion == "")
                            {
                                this.fxCodigoTipoAutorizacionNO = true;
                            }
                            oPedido.codigoAutorizacionSpecified = !this.fxCodigoAutorizacionNO;
                            oPedido.codigoTipoAutorizacionSpecified = !this.fxCodigoTipoAutorizacionNO;
                            oPedido.codigoTipoDocumentoSpecified = !this.fxCodigoTipoDocumentoNO;
                            oPedido.fechaServicioHastaSpecified = !this.fxFechaServicioHastaNO;
                            oPedido.fechaEmisionSpecified = !this.fxFechaEmisionNO;
                            oPedido.fechaServicioDesdeSpecified = !this.fxFechaServicioDesdeNO;
                            oPedido.fechaServicioHastaSpecified = !this.fxFechaServicioHastaNO;
                            oPedido.fechaVencimientoPagoSpecified = !this.fxFechaVencimientoPagoNO;
                            oPedido.fechaVencimientoSpecified = !this.fxFechaVencimientoNO;
                            oPedido.importeExentoSpecified = !this.fxImporteExentoNO;
                            oPedido.importeGravadoSpecified = !this.fxImporteGravadoNO;
                            oPedido.importeNoGravadoSpecified = !this.fxImporteNoGravadoNO;
                            oPedido.importeOtrosTributosSpecified = !this.fxImporteOtrosTributosNO;
                            oPedido.numeroDocumentoSpecified = !this.fxNumeroDocumentoNO;
                            oPedido.codigoAutorizacion = Conversions.ToLong(this.fxCodigoAutorizacion);
                            oPedido.codigoConcepto = (short) this.fxCodigoConcepto;
                            oPedido.codigoMoneda = this.fxCodigoMoneda;
                            if (this.fxCodigoTipoAutorizacion == "A")
                            {
                                oPedido.codigoTipoAutorizacion = WSAFIPFE.fxAFIP.CodigoTipoAutorizacionSimpleType.A;
                            }
                            else
                            {
                                oPedido.codigoTipoAutorizacion = WSAFIPFE.fxAFIP.CodigoTipoAutorizacionSimpleType.E;
                            }
                            oPedido.codigoTipoComprobante = (short) this.fxCodigoTipoComprobante;
                            oPedido.codigoTipoDocumento = (short) this.fxCodigoTipoDocumento;
                            oPedido.cotizacionMoneda = new decimal(this.fxCotizacionMoneda);
                            oPedido.fechaEmision = DateTime.ParseExact(this.fxFechaEmision, "yyyyMMdd", null);
                            oPedido.fechaServicioDesde = DateTime.ParseExact(this.fxFechaServicioDesde, "yyyyMMdd", null);
                            oPedido.fechaServicioHasta = DateTime.ParseExact(this.fxFechaServicioHasta, "yyyyMMdd", null);
                            oPedido.fechaVencimiento = DateTime.ParseExact(this.fxFechaVencimiento, "yyyyMMdd", null);
                            oPedido.fechaVencimientoPago = DateTime.ParseExact(this.fxFechaVencimientoPago, "yyyyMMdd", null);
                            oPedido.importeExento = new decimal(this.fxImporteExento);
                            oPedido.importeGravado = new decimal(this.fxImporteGravado);
                            oPedido.importeNoGravado = new decimal(this.fxImporteNoGravado);
                            oPedido.importeOtrosTributos = new decimal(this.fxImporteOtrosTributos);
                            oPedido.importeSubtotal = new decimal(this.fxImporteSubTotal);
                            oPedido.importeTotal = new decimal(this.fxImporteTotal);
                            oPedido.numeroComprobante = this.fxNumeroComprobante;
                            oPedido.numeroDocumento = Conversions.ToLong(this.fxNumeroDocumento);
                            oPedido.numeroPuntoVenta = (short) this.fxNumeroPuntoVenta;
                            oPedido.observaciones = this.fxObservaciones;
                            if (this.fxComprobantesAsociadosItemCantidad == 0)
                            {
                                oPedidoItemCbteAsocs = null;
                            }
                            else
                            {
                                oPedidoItemCbteAsocs = new WSAFIPFE.fxAFIP.ComprobanteAsociadoType[(this.fxComprobantesAsociadosItemCantidad - 1) + 1];
                                int VB_t_i4_L8 = this.fxComprobantesAsociadosItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L8; nContador2++)
                                {
                                    WSAFIPFE.fxAFIP.ComprobanteAsociadoType oPedidoItemCbteAsoc = new WSAFIPFE.fxAFIP.ComprobanteAsociadoType();
                                    this.fxIndiceItem = nContador2;
                                    oPedidoItemCbteAsoc.codigoTipoComprobante = (short) this.fxComprobanteAsosiadoCodigoTipoComprobante;
                                    oPedidoItemCbteAsoc.numeroComprobante = this.fxComprobanteAsosiadoNumeroComprobante;
                                    oPedidoItemCbteAsoc.numeroPuntoVenta = (short) this.fxComprobanteAsosiadoNumeroPuntoVenta;
                                    oPedidoItemCbteAsocs[nContador2] = oPedidoItemCbteAsoc;
                                }
                            }
                            oPedido.arrayComprobantesAsociados = oPedidoItemCbteAsocs;
                            if (this.fxSubTotalesItemCantidad == 0)
                            {
                                oPedidoItemIvas = null;
                            }
                            else
                            {
                                oPedidoItemIvas = new WSAFIPFE.fxAFIP.SubtotalIVAType[(this.fxSubTotalesItemCantidad - 1) + 1];
                                int VB_t_i4_L9 = this.fxSubTotalesItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L9; nContador2++)
                                {
                                    WSAFIPFE.fxAFIP.SubtotalIVAType oPedidoItemIva = new WSAFIPFE.fxAFIP.SubtotalIVAType();
                                    this.fxIndiceItem = nContador2;
                                    oPedidoItemIva.codigo = (short) this.fxSubTotalesIvaCodigo;
                                    oPedidoItemIva.importe = new decimal(this.fxSubTotalesIvaImporte);
                                    oPedidoItemIvas[nContador2] = oPedidoItemIva;
                                }
                            }
                            oPedido.arraySubtotalesIVA = oPedidoItemIvas;
                            if (this.fxOtrosTributosItemCantidad == 0)
                            {
                                oPedidoItemTributos = null;
                            }
                            else
                            {
                                oPedidoItemTributos = new WSAFIPFE.fxAFIP.OtroTributoType[(this.fxOtrosTributosItemCantidad - 1) + 1];
                                int VB_t_i4_L10 = this.fxOtrosTributosItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L10; nContador2++)
                                {
                                    WSAFIPFE.fxAFIP.OtroTributoType oPedidoItemTributo = new WSAFIPFE.fxAFIP.OtroTributoType();
                                    this.fxIndiceItem = nContador2;
                                    oPedidoItemTributo.baseImponible = new decimal(this.fxOtrosTributosBaseImponible);
                                    oPedidoItemTributo.codigo = (short) this.fxOtrosTributosCodigo;
                                    oPedidoItemTributo.descripcion = this.fxOtrosTributosDescripcion;
                                    oPedidoItemTributo.importe = new decimal(this.fxOtrosTributosImporte);
                                    oPedidoItemTributos[nContador2] = oPedidoItemTributo;
                                }
                            }
                            oPedido.arrayOtrosTributos = oPedidoItemTributos;
                            if (this.fxItemsItemCantidad == 0)
                            {
                                oPedidoitems = null;
                            }
                            else
                            {
                                oPedidoitems = new WSAFIPFE.fxAFIP.ItemType[(this.fxItemsItemCantidad - 1) + 1];
                                int VB_t_i4_L11 = this.fxItemsItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L11; nContador2++)
                                {
                                    WSAFIPFE.fxAFIP.ItemType oPedidoitem = new WSAFIPFE.fxAFIP.ItemType();
                                    this.fxIndiceItem = nContador2;
                                    oPedidoitem.cantidadSpecified = !this.fxItemCantidadNO;
                                    oPedidoitem.importeBonificacionSpecified = !this.fxItemImporteBonificacionNO;
                                    oPedidoitem.importeIVASpecified = !this.fxItemImporteIvaNO;
                                    oPedidoitem.precioUnitarioSpecified = !this.fxItemPrecioUnitarioNO;
                                    oPedidoitem.unidadesMtxSpecified = !this.fxItemUnidadesMtxNO;
                                    oPedidoitem.cantidad = new decimal(this.fxItemCantidad);
                                    oPedidoitem.codigo = this.fxItemCodigo;
                                    oPedidoitem.codigoCondicionIVA = (short) this.fxItemCodigoCondicionIva;
                                    oPedidoitem.codigoMtx = this.fxItemCodigoMtx;
                                    oPedidoitem.codigoUnidadMedida = (short) this.fxItemCodigoUnidadMedida;
                                    oPedidoitem.descripcion = this.fxItemDescripcion;
                                    oPedidoitem.importeBonificacion = new decimal(this.fxItemImporteBonificacion);
                                    oPedidoitem.importeItem = new decimal(this.fxItemImporteItem);
                                    oPedidoitem.importeIVA = new decimal(this.fxItemImporteIva);
                                    oPedidoitem.precioUnitario = new decimal(this.fxItemPrecioUnitario);
                                    oPedidoitem.unidadesMtx = this.fxItemUnidadesMtx;
                                    oPedidoitems[nContador2] = oPedidoitem;
                                }
                            }
                            oPedido.arrayItems = oPedidoitems;
                            if (this.ArchivoXMLEnviado != "")
                            {
                                try
                                {
                                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIP.ComprobanteType));
                                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                                    writer1.Serialize((TextWriter) file1, oPedido);
                                    file1.Close();
                                }
                                catch (Exception exception7)
                                {
                                    ProjectData.SetProjectError(exception7);
                                    Exception miEx = exception7;
                                    this.strArchivoXMLError = miEx.Message;
                                    ProjectData.ClearProjectError();
                                }
                            }
                            WSAFIPFE.fxAFIP.ResultadoSimpleType oresultado = servicio.autorizarComprobante(autorizacion, oPedido, ref oRespuesta, ref oObservaciones, ref oErrores, ref oEvento);
                            if (this.ArchivoXMLRecibido != "")
                            {
                                try
                                {
                                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIP.ComprobanteCAEResponseType));
                                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                    writer1.Serialize((TextWriter) file1, oRespuesta);
                                    file1.Close();
                                }
                                catch (Exception exception8)
                                {
                                    ProjectData.SetProjectError(exception8);
                                    Exception miEx = exception8;
                                    this.strArchivoXMLError = miEx.Message;
                                    ProjectData.ClearProjectError();
                                }
                            }
                            if (oEvento == null)
                            {
                                this.ifxEventItemCantidad = 0;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[1];
                            }
                            else
                            {
                                this.ifxEventItemCantidad = 1;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L12 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L12; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            if (oErrores == null)
                            {
                                this.ifxErrorItemCantidad = 0;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[1];
                            }
                            else
                            {
                                this.ifxErrorItemCantidad = 1;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[(value - 1) + 1];
                                int VB_t_i4_L13 = this.fxErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L13; nContador++)
                                {
                                    this.afxError[nContador].code = oErrores[nContador].codigo;
                                    this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                }
                            }
                            if (oObservaciones == null)
                            {
                                this.ifxObervacionItemCantidad = 0;
                                value = this.fxObervacionItemCantidad;
                                this.afxObervacion = new fxObservacion[1];
                            }
                            else
                            {
                                this.ifxObervacionItemCantidad = 1;
                                value = this.fxObervacionItemCantidad;
                                this.afxObervacion = new fxObservacion[(value - 1) + 1];
                                int VB_t_i4_L14 = this.fxObervacionItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L14; nContador++)
                                {
                                    this.afxObervacion[nContador].codigo = oObservaciones[nContador].codigo;
                                    this.afxObervacion[nContador].descripcion = oObservaciones[nContador].descripcion;
                                }
                            }
                            this.strfxRespuestaResultado = oresultado.ToString();
                            if (oRespuesta == null)
                            {
                                bResultado = false;
                            }
                            else
                            {
                                this.lfxRespuestaCAE = oRespuesta.CAE;
                                this.ifxRespuestaNumeroPuntoVenta = oRespuesta.numeroPuntoVenta;
                                this.lfxRespuestaNumeroComprobante = oRespuesta.numeroComprobante;
                                this.dfxRespuestaFechaEmision = oRespuesta.fechaEmision;
                                this.ifxRespuestaCodigoTipoComprobante = oRespuesta.codigoTipoComprobante;
                                this.dfxRespuestaFechaVencimientoCAE = oRespuesta.fechaVencimientoCAE;
                            }
                        }
                        catch (SoapException exception9)
                        {
                            ProjectData.SetProjectError(exception9);
                            SoapException ex1 = exception9;
                            bResultado = false;
                            this.strfxRespuestaResultado = "R";
                            this.gstrErrorMensaje = ex1.Message;
                            this.gstrErrorCodigo = ex1.Code.ToString();
                            this.ifxErrorItemCantidad = 1;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L15 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L15; nContador++)
                            {
                                this.afxError[nContador].msg = ex1.Message;
                                this.afxError[nContador].code = 0;
                            }
                            this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                            this.iUltimoNumeroError = 13;
                            ProjectData.ClearProjectError();
                        }
                        catch (Exception exception10)
                        {
                            ProjectData.SetProjectError(exception10);
                            Exception ex = exception10;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                }
            }
            else
            {
                bResultado = false;
                if ((this.fxTicketValido & (this.Modo == modoFiscal.Fiscal)) & !this.fxLicenciaValidaCAE)
                {
                    this.strUltimoMensajeError = "Licencia no v\x00e1lida";
                }
            }
            this.ccfxNoEspecificar = null;
            return bResultado;
        }

        public bool fxConsultarAlicutasIva()
        {
            return this.fxConsultarLista("ALICUOTASIVA");
        }

        public bool fxConsultarCAEA(string strCAEA)
        {
            this.ifxErrorItemCantidad = 0;
            this.ifxEventItemCantidad = 0;
            bool bResultado = true;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.ifxCAEAItemCantidad = 1;
            this.aFxCAEAs = new fxCAEA[1];
            this.aFxCAEAs[0].strFxRespuestaCAEA = "";
            this.aFxCAEAs[0].iFxRespuestaCAEAPeriodo = 0;
            this.aFxCAEAs[0].iFxRespuestaCAEAOrden = 0;
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaDesde = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaHasta = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaTopeInforme = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaProceso = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.fxIndiceItem = 0;
            if (this.Modo == modoFiscal.Test)
            {
                if (this.fxTicketValido)
                {
                    WSAFIPFE.fxAFIPTest.AuthRequestType autorizacion = new WSAFIPFE.fxAFIPTest.AuthRequestType();
                    try
                    {
                        autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                        autorizacion.token = this.fxtoken;
                        autorizacion.sign = this.fxsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.fxAFIPTest.SolicitudCAEAType oPedido = new WSAFIPFE.fxAFIPTest.SolicitudCAEAType();
                        WSAFIPFE.fxAFIPTest.CAEAResponseType oRespuesta = null;
                        WSAFIPFE.fxAFIPTest.CodigoDescripcionType oEvento = null;
                        WSAFIPFE.fxAFIPTest.CodigoDescripcionType[] oErrores = null;
                        WSAFIPFE.fxAFIPTest.MTXCAService servicio = new WSAFIPFE.fxAFIPTest.MTXCAService();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        long lCAEA = Conversions.ToLong(strCAEA);
                        try
                        {
                            int nContador;
                            int value;
                            oRespuesta = servicio.consultarCAEA(autorizacion, lCAEA, ref oErrores, ref oEvento);
                            if (this.ArchivoXMLRecibido != "")
                            {
                                try
                                {
                                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIPTest.CAEAResponseType));
                                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                    writer1.Serialize((TextWriter) file1, oRespuesta);
                                    file1.Close();
                                }
                                catch (Exception exception2)
                                {
                                    ProjectData.SetProjectError(exception2);
                                    Exception miEx = exception2;
                                    this.strArchivoXMLError = miEx.Message;
                                    ProjectData.ClearProjectError();
                                }
                            }
                            if (oErrores == null)
                            {
                                this.ifxErrorItemCantidad = 0;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[(value - 1) + 1];
                                int VB_t_i4_L0 = this.fxErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.afxError[nContador].code = oErrores[nContador].codigo;
                                    this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                }
                            }
                            else
                            {
                                this.ifxErrorItemCantidad = oErrores.Length;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[(value - 1) + 1];
                                int VB_t_i4_L1 = this.fxErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.afxError[nContador].code = oErrores[nContador].codigo;
                                    this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                }
                            }
                            this.strUltimoMensajeError = this.fxErrorMsg1;
                            this.iUltimoNumeroError = this.fxErrorCode1;
                            if (oEvento == null)
                            {
                                this.ifxEventItemCantidad = 0;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            else
                            {
                                this.ifxEventItemCantidad = 1;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            if (oRespuesta == null)
                            {
                                return false;
                            }
                            this.aFxCAEAs[this.fxIndiceItem].strFxRespuestaCAEA = Conversions.ToString(oRespuesta.CAEA);
                            this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAPeriodo = oRespuesta.periodo;
                            this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAOrden = oRespuesta.orden;
                            this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaHasta = oRespuesta.fechaHasta;
                            this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaDesde = oRespuesta.fechaDesde;
                            this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaTopeInforme = oRespuesta.fechaTopeInforme;
                            this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaProceso = oRespuesta.fechaProceso;
                            bResultado = true;
                        }
                        catch (SoapException exception3)
                        {
                            ProjectData.SetProjectError(exception3);
                            SoapException ex1 = exception3;
                            bResultado = false;
                            this.ifxErrorItemCantidad = 1;
                            int value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L4 = this.fxErrorItemCantidad - 1;
                            for (int ncontador = 0; ncontador <= VB_t_i4_L4; ncontador++)
                            {
                                this.afxError[ncontador].msg = ex1.Message;
                                this.afxError[ncontador].code = 0;
                            }
                            this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                            this.iUltimoNumeroError = 13;
                            ProjectData.ClearProjectError();
                        }
                        catch (Exception exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            Exception ex = exception4;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.fxTicketValido)
            {
                WSAFIPFE.fxAFIP.AuthRequestType autorizacion = new WSAFIPFE.fxAFIP.AuthRequestType();
                try
                {
                    autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                    autorizacion.token = this.fxtoken;
                    autorizacion.sign = this.fxsign;
                }
                catch (Exception exception5)
                {
                    ProjectData.SetProjectError(exception5);
                    Exception ex = exception5;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.fxAFIP.SolicitudCAEAType oPedido = new WSAFIPFE.fxAFIP.SolicitudCAEAType();
                    WSAFIPFE.fxAFIP.CAEAResponseType oRespuesta = null;
                    WSAFIPFE.fxAFIP.CodigoDescripcionType oEvento = null;
                    WSAFIPFE.fxAFIP.CodigoDescripcionType[] oErrores = null;
                    WSAFIPFE.fxAFIP.MTXCAService servicio = new WSAFIPFE.fxAFIP.MTXCAService();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.fxDireccionServicioURL;
                    long lCAEA = Conversions.ToLong(strCAEA);
                    try
                    {
                        int nContador;
                        int value;
                        oRespuesta = servicio.consultarCAEA(autorizacion, lCAEA, ref oErrores, ref oEvento);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIP.CAEAResponseType));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception6)
                            {
                                ProjectData.SetProjectError(exception6);
                                Exception miEx = exception6;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        if (oErrores == null)
                        {
                            this.ifxErrorItemCantidad = 0;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L5 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.afxError[nContador].code = oErrores[nContador].codigo;
                                this.afxError[nContador].msg = oErrores[nContador].descripcion;
                            }
                        }
                        else
                        {
                            this.ifxErrorItemCantidad = oErrores.Length;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L6 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.afxError[nContador].code = oErrores[nContador].codigo;
                                this.afxError[nContador].msg = oErrores[nContador].descripcion;
                            }
                        }
                        this.strUltimoMensajeError = this.fxErrorMsg1;
                        this.iUltimoNumeroError = this.fxErrorCode1;
                        if (oEvento == null)
                        {
                            this.ifxEventItemCantidad = 0;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.fxEventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.afxEvent[nContador].code = oEvento.codigo;
                                this.afxEvent[nContador].msg = oEvento.descripcion;
                            }
                        }
                        else
                        {
                            this.ifxEventItemCantidad = 1;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L8 = this.fxEventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                            {
                                this.afxEvent[nContador].code = oEvento.codigo;
                                this.afxEvent[nContador].msg = oEvento.descripcion;
                            }
                        }
                        if (oRespuesta == null)
                        {
                            return false;
                        }
                        this.aFxCAEAs[this.fxIndiceItem].strFxRespuestaCAEA = Conversions.ToString(oRespuesta.CAEA);
                        this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAPeriodo = oRespuesta.periodo;
                        this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAOrden = oRespuesta.orden;
                        this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaHasta = oRespuesta.fechaHasta;
                        this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaDesde = oRespuesta.fechaDesde;
                        this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaTopeInforme = oRespuesta.fechaTopeInforme;
                        this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaProceso = oRespuesta.fechaProceso;
                        bResultado = true;
                    }
                    catch (SoapException exception7)
                    {
                        ProjectData.SetProjectError(exception7);
                        SoapException ex1 = exception7;
                        bResultado = false;
                        this.ifxErrorItemCantidad = 1;
                        int value = this.fxErrorItemCantidad;
                        this.afxError = new fxError[(value - 1) + 1];
                        int VB_t_i4_L9 = this.fxErrorItemCantidad - 1;
                        for (int ncontador = 0; ncontador <= VB_t_i4_L9; ncontador++)
                        {
                            this.afxError[ncontador].msg = ex1.Message;
                            this.afxError[ncontador].code = 0;
                        }
                        this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                        this.iUltimoNumeroError = 13;
                        ProjectData.ClearProjectError();
                    }
                    catch (Exception exception8)
                    {
                        ProjectData.SetProjectError(exception8);
                        Exception ex = exception8;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return bResultado;
        }

        public bool fxConsultarCAEAEntreFechas(string strDesde, string strHasta)
        {
            this.ifxErrorItemCantidad = 0;
            this.ifxEventItemCantidad = 0;
            bool bResultado = true;
            DateTime dDesde = DateTime.ParseExact(strDesde, "yyyyMMdd", null);
            DateTime dHasta = DateTime.ParseExact(strHasta, "yyyyMMdd", null);
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.ifxCAEAItemCantidad = 1;
            this.aFxCAEAs = new fxCAEA[1];
            this.aFxCAEAs[0].strFxRespuestaCAEA = "";
            this.aFxCAEAs[0].iFxRespuestaCAEAPeriodo = 0;
            this.aFxCAEAs[0].iFxRespuestaCAEAOrden = 0;
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaDesde = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaHasta = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaTopeInforme = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaProceso = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.fxIndiceItem = 0;
            if (this.Modo == modoFiscal.Test)
            {
                if (this.fxTicketValido)
                {
                    WSAFIPFE.fxAFIPTest.AuthRequestType autorizacion = new WSAFIPFE.fxAFIPTest.AuthRequestType();
                    try
                    {
                        autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                        autorizacion.token = this.fxtoken;
                        autorizacion.sign = this.fxsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.fxAFIPTest.SolicitudCAEAType oPedido = new WSAFIPFE.fxAFIPTest.SolicitudCAEAType();
                        WSAFIPFE.fxAFIPTest.CAEAResponseType[] oRespuesta = null;
                        WSAFIPFE.fxAFIPTest.CodigoDescripcionType oEvento = null;
                        WSAFIPFE.fxAFIPTest.CodigoDescripcionType[] oErrores = null;
                        WSAFIPFE.fxAFIPTest.MTXCAService servicio = new WSAFIPFE.fxAFIPTest.MTXCAService();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        try
                        {
                            oRespuesta = servicio.consultarCAEAEntreFechas(autorizacion, dDesde, dHasta, ref oErrores, ref oEvento);
                            if (this.ArchivoXMLRecibido != "")
                            {
                                try
                                {
                                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIPTest.CAEAResponseType[]));
                                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                    writer1.Serialize((TextWriter) file1, oRespuesta);
                                    file1.Close();
                                }
                                catch (Exception exception2)
                                {
                                    ProjectData.SetProjectError(exception2);
                                    Exception miEx = exception2;
                                    this.strArchivoXMLError = miEx.Message;
                                    ProjectData.ClearProjectError();
                                }
                            }
                            if (oRespuesta == null)
                            {
                                bResultado = false;
                                this.iUltimoNumeroError = 100;
                                this.strUltimoMensajeError = "Sin respuesta";
                            }
                            else
                            {
                                int nContador;
                                int value;
                                if (oErrores == null)
                                {
                                    this.ifxErrorItemCantidad = 0;
                                    value = this.fxErrorItemCantidad;
                                    this.afxError = new fxError[(value - 1) + 1];
                                    int VB_t_i4_L0 = this.fxErrorItemCantidad - 1;
                                    for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                    {
                                        this.afxError[nContador].code = oErrores[nContador].codigo;
                                        this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                    }
                                }
                                else
                                {
                                    this.ifxErrorItemCantidad = oErrores.Length;
                                    value = this.fxErrorItemCantidad;
                                    this.afxError = new fxError[(value - 1) + 1];
                                    int VB_t_i4_L1 = this.fxErrorItemCantidad - 1;
                                    for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                    {
                                        this.afxError[nContador].code = oErrores[nContador].codigo;
                                        this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                    }
                                }
                                if (oEvento == null)
                                {
                                    this.ifxEventItemCantidad = 0;
                                    value = this.fxEventItemCantidad;
                                    this.afxEvent = new f1Event[(value - 1) + 1];
                                    int VB_t_i4_L2 = this.fxEventItemCantidad - 1;
                                    for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                    {
                                        this.afxEvent[nContador].code = oEvento.codigo;
                                        this.afxEvent[nContador].msg = oEvento.descripcion;
                                    }
                                }
                                else
                                {
                                    this.ifxEventItemCantidad = 1;
                                    value = this.fxEventItemCantidad;
                                    this.afxEvent = new f1Event[(value - 1) + 1];
                                    int VB_t_i4_L3 = this.fxEventItemCantidad - 1;
                                    for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                    {
                                        this.afxEvent[nContador].code = oEvento.codigo;
                                        this.afxEvent[nContador].msg = oEvento.descripcion;
                                    }
                                }
                                if (oRespuesta == null)
                                {
                                    this.iUltimoNumeroError = 0x65;
                                    this.strUltimoMensajeError = "Sin detalle en la respuesta";
                                    bResultado = false;
                                }
                                else
                                {
                                    this.ifxCAEAItemCantidad = oRespuesta.Length;
                                    value = this.fxCAEAItemCantidad - 1;
                                    this.aFxCAEAs = new fxCAEA[value + 1];
                                    int VB_t_i4_L4 = this.fxCAEAItemCantidad - 1;
                                    for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                                    {
                                        this.fxIndiceItem = nContador;
                                        this.aFxCAEAs[this.fxIndiceItem].strFxRespuestaCAEA = Conversions.ToString(oRespuesta[nContador].CAEA);
                                        this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAPeriodo = oRespuesta[nContador].periodo;
                                        this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAOrden = oRespuesta[nContador].orden;
                                        this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaHasta = oRespuesta[nContador].fechaHasta;
                                        this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaDesde = oRespuesta[nContador].fechaDesde;
                                        this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaTopeInforme = oRespuesta[nContador].fechaTopeInforme;
                                        this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaProceso = oRespuesta[nContador].fechaProceso;
                                    }
                                    bResultado = true;
                                }
                            }
                        }
                        catch (SoapException exception3)
                        {
                            ProjectData.SetProjectError(exception3);
                            SoapException ex1 = exception3;
                            bResultado = false;
                            this.ifxErrorItemCantidad = 1;
                            int value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L5 = this.fxErrorItemCantidad - 1;
                            for (int ncontador = 0; ncontador <= VB_t_i4_L5; ncontador++)
                            {
                                this.afxError[ncontador].msg = ex1.Message;
                                this.afxError[ncontador].code = 0;
                            }
                            this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                            this.iUltimoNumeroError = 13;
                            ProjectData.ClearProjectError();
                        }
                        catch (Exception exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            Exception ex = exception4;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                        this.strUltimoMensajeError = this.fxErrorMsg1;
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.fxTicketValido)
            {
                WSAFIPFE.fxAFIP.AuthRequestType autorizacion = new WSAFIPFE.fxAFIP.AuthRequestType();
                try
                {
                    autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                    autorizacion.token = this.fxtoken;
                    autorizacion.sign = this.fxsign;
                }
                catch (Exception exception5)
                {
                    ProjectData.SetProjectError(exception5);
                    Exception ex = exception5;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.fxAFIP.SolicitudCAEAType oPedido = new WSAFIPFE.fxAFIP.SolicitudCAEAType();
                    WSAFIPFE.fxAFIP.CAEAResponseType[] oRespuesta = null;
                    WSAFIPFE.fxAFIP.CodigoDescripcionType oEvento = null;
                    WSAFIPFE.fxAFIP.CodigoDescripcionType[] oErrores = null;
                    WSAFIPFE.fxAFIP.MTXCAService servicio = new WSAFIPFE.fxAFIP.MTXCAService();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.fxDireccionServicioURL;
                    try
                    {
                        oRespuesta = servicio.consultarCAEAEntreFechas(autorizacion, dDesde, dHasta, ref oErrores, ref oEvento);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIP.CAEAResponseType[]));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception6)
                            {
                                ProjectData.SetProjectError(exception6);
                                Exception miEx = exception6;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                        }
                        else
                        {
                            int nContador;
                            int value;
                            if (oErrores == null)
                            {
                                this.ifxErrorItemCantidad = 0;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[(value - 1) + 1];
                                int VB_t_i4_L6 = this.fxErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                                {
                                    this.afxError[nContador].code = oErrores[nContador].codigo;
                                    this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                }
                            }
                            else
                            {
                                this.ifxErrorItemCantidad = oErrores.Length;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[(value - 1) + 1];
                                int VB_t_i4_L7 = this.fxErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                                {
                                    this.afxError[nContador].code = oErrores[nContador].codigo;
                                    this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                }
                            }
                            if (oEvento == null)
                            {
                                this.ifxEventItemCantidad = 0;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L8 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            else
                            {
                                this.ifxEventItemCantidad = 1;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L9 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            if (oRespuesta == null)
                            {
                                this.iUltimoNumeroError = 0x65;
                                this.strUltimoMensajeError = "Sin detalle en la respuesta";
                                bResultado = false;
                            }
                            else
                            {
                                this.ifxCAEAItemCantidad = oRespuesta.Length;
                                value = this.fxCAEAItemCantidad - 1;
                                this.aFxCAEAs = new fxCAEA[value + 1];
                                int VB_t_i4_L10 = this.fxCAEAItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L10; nContador++)
                                {
                                    this.fxIndiceItem = nContador;
                                    this.aFxCAEAs[this.fxIndiceItem].strFxRespuestaCAEA = Conversions.ToString(oRespuesta[nContador].CAEA);
                                    this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAPeriodo = oRespuesta[nContador].periodo;
                                    this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAOrden = oRespuesta[nContador].orden;
                                    this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaHasta = oRespuesta[nContador].fechaHasta;
                                    this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaDesde = oRespuesta[nContador].fechaDesde;
                                    this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaTopeInforme = oRespuesta[nContador].fechaTopeInforme;
                                    this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaProceso = oRespuesta[nContador].fechaProceso;
                                }
                                bResultado = true;
                            }
                        }
                    }
                    catch (SoapException exception7)
                    {
                        ProjectData.SetProjectError(exception7);
                        SoapException ex1 = exception7;
                        bResultado = false;
                        this.ifxErrorItemCantidad = 1;
                        int value = this.fxErrorItemCantidad;
                        this.afxError = new fxError[(value - 1) + 1];
                        int VB_t_i4_L11 = this.fxErrorItemCantidad - 1;
                        for (int ncontador = 0; ncontador <= VB_t_i4_L11; ncontador++)
                        {
                            this.afxError[ncontador].msg = ex1.Message;
                            this.afxError[ncontador].code = 0;
                        }
                        this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                        this.iUltimoNumeroError = 13;
                        ProjectData.ClearProjectError();
                    }
                    catch (Exception exception8)
                    {
                        ProjectData.SetProjectError(exception8);
                        Exception ex = exception8;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    this.strUltimoMensajeError = this.fxErrorMsg1;
                }
                return bResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return bResultado;
        }

        public bool fxConsultarComprobante(int iPtoVta, int iCbteTipo, int iCbteNro)
        {
            int nContador;
            int nContador2;
            this.ifxErrorItemCantidad = 0;
            bool bResultado = true;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.ifxCAEAItemCantidad = 1;
            this.aFxCAEAs = new fxCAEA[1];
            this.aFxCAEAs[0].strFxRespuestaCAEA = "";
            this.aFxCAEAs[0].iFxRespuestaCAEAPeriodo = 0;
            this.aFxCAEAs[0].iFxRespuestaCAEAOrden = 0;
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaDesde = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaHasta = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaTopeInforme = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaProceso = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.fxIndiceItem = 0;
            if (this.Modo == modoFiscal.Test)
            {
                if (this.fxTicketValido)
                {
                    WSAFIPFE.fxAFIPTest.AuthRequestType autorizacion = new WSAFIPFE.fxAFIPTest.AuthRequestType();
                    try
                    {
                        autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                        autorizacion.token = this.fxtoken;
                        autorizacion.sign = this.fxsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (!bResultado)
                    {
                        return false;
                    }
                    WSAFIPFE.fxAFIPTest.ComprobanteType oRespuesta = null;
                    WSAFIPFE.fxAFIPTest.ConsultaComprobanteRequestType oPedido = new WSAFIPFE.fxAFIPTest.ConsultaComprobanteRequestType();
                    int value2 = 0;
                    WSAFIPFE.fxAFIPTest.CodigoDescripcionType[] oObservaciones = null;
                    WSAFIPFE.fxAFIPTest.CodigoDescripcionType[] oErrores = null;
                    WSAFIPFE.fxAFIPTest.CodigoDescripcionType oEvento = null;
                    oPedido.codigoTipoComprobante = (short) iCbteTipo;
                    oPedido.numeroComprobante = iCbteNro;
                    oPedido.numeroPuntoVenta = (short) iPtoVta;
                    WSAFIPFE.fxAFIPTest.MTXCAService servicio = new WSAFIPFE.fxAFIPTest.MTXCAService();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    if (this.ArchivoXMLEnviado != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIPTest.ConsultaComprobanteRequestType));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                            writer1.Serialize((TextWriter) file1, oPedido);
                            file1.Close();
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception miEx = exception2;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    try
                    {
                        oRespuesta = servicio.consultarComprobante(autorizacion, oPedido, ref oObservaciones, ref oErrores, ref oEvento);
                    }
                    catch (SoapException exception3)
                    {
                        ProjectData.SetProjectError(exception3);
                        SoapException ex1 = exception3;
                        bResultado = false;
                        this.ifxErrorItemCantidad = 1;
                        int VALUE = this.fxErrorItemCantidad;
                        this.afxError = new fxError[(VALUE - 1) + 1];
                        int VB_t_i4_L0 = this.fxErrorItemCantidad - 1;
                        nContador = 0;
                        while (nContador <= VB_t_i4_L0)
                        {
                            this.afxError[nContador].msg = ex1.Message;
                            this.afxError[nContador].code = 0;
                            nContador++;
                        }
                        this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                        this.iUltimoNumeroError = 13;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIPTest.ComprobanteType));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception5)
                        {
                            ProjectData.SetProjectError(exception5);
                            Exception miEx = exception5;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    this.indice = 0;
                    this.IndiceItem = 0;
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                    }
                    else if (oRespuesta == null)
                    {
                        this.strfxRespuestaResultado = "";
                        bResultado = false;
                    }
                    else
                    {
                        int value;
                        if (oErrores == null)
                        {
                            this.ifxErrorItemCantidad = 0;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L1 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.afxError[nContador].code = oErrores[nContador].codigo;
                                this.afxError[nContador].msg = oErrores[nContador].descripcion;
                            }
                        }
                        else
                        {
                            this.ifxErrorItemCantidad = oErrores.Length;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L2 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                            {
                                this.afxError[nContador].code = oErrores[nContador].codigo;
                                this.afxError[nContador].msg = oErrores[nContador].descripcion;
                            }
                        }
                        if (oEvento == null)
                        {
                            this.ifxEventItemCantidad = 0;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[(value - 1) + 1];
                        }
                        else
                        {
                            this.ifxEventItemCantidad = 1;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L3 = this.fxEventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                            {
                                this.afxEvent[nContador].code = oEvento.codigo;
                                this.afxEvent[nContador].msg = oEvento.descripcion;
                            }
                        }
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                        }
                        else
                        {
                            this.fxCodigoAutorizacion = oRespuesta.codigoAutorizacion.ToString();
                            this.fxCodigoConcepto = oRespuesta.codigoConcepto;
                            this.fxCodigoMoneda = oRespuesta.codigoMoneda;
                            this.fxCodigoTipoAutorizacion = oRespuesta.codigoTipoAutorizacion.ToString();
                            if (this.fxCodigoTipoAutorizacion == "E")
                            {
                                this.lfxRespuestaCAE = oRespuesta.codigoAutorizacion;
                            }
                            else
                            {
                                this.aFxCAEAs[0].strFxRespuestaCAEA = oRespuesta.codigoAutorizacion.ToString();
                            }
                            this.lfxCodigoAutorizacion = oRespuesta.codigoAutorizacion;
                            this.ifxRespuestaCodigoTipoComprobante = oRespuesta.codigoTipoComprobante;
                            this.lfxRespuestaCUIT = Conversions.ToLong("0");
                            this.lfxRespuestaNumeroComprobante = oRespuesta.numeroComprobante;
                            this.ifxRespuestaNumeroPuntoVenta = oRespuesta.numeroPuntoVenta;
                            this.strfxRespuestaResultado = "";
                            this.fxCodigoTipoComprobante = oRespuesta.codigoTipoComprobante;
                            this.fxCodigoTipoDocumento = oRespuesta.codigoTipoDocumento;
                            this.fxCotizacionMoneda = Convert.ToDouble(oRespuesta.cotizacionMoneda);
                            this.dfxFechaEmision = oRespuesta.fechaEmision;
                            this.dfxFechaServicioDesde = oRespuesta.fechaServicioDesde;
                            this.dfxFechaServicioHasta = oRespuesta.fechaServicioHasta;
                            this.dfxFechaVencimiento = oRespuesta.fechaVencimiento;
                            this.dfxFechaVencimientoPago = oRespuesta.fechaVencimientoPago;
                            this.fxImporteExento = Convert.ToDouble(oRespuesta.importeExento);
                            this.fxImporteGravado = Convert.ToDouble(oRespuesta.importeGravado);
                            this.fxImporteNoGravado = Convert.ToDouble(oRespuesta.importeNoGravado);
                            this.fxImporteOtrosTributos = Convert.ToDouble(oRespuesta.importeOtrosTributos);
                            this.fxImporteSubTotal = Convert.ToDouble(oRespuesta.importeSubtotal);
                            this.fxImporteTotal = Convert.ToDouble(oRespuesta.importeTotal);
                            this.fxNumeroComprobante = (int) oRespuesta.numeroComprobante;
                            this.fxNumeroDocumento = Conversions.ToString(oRespuesta.numeroDocumento);
                            this.fxNumeroPuntoVenta = oRespuesta.numeroPuntoVenta;
                            this.fxObservaciones = oRespuesta.observaciones;
                            this.fxCodigoAutorizacionNO = !oRespuesta.codigoAutorizacionSpecified;
                            this.fxCodigoTipoAutorizacionNO = !oRespuesta.codigoTipoAutorizacionSpecified;
                            this.fxCodigoTipoDocumentoNO = !oRespuesta.codigoTipoDocumentoSpecified;
                            this.fxFechaServicioHastaNO = !oRespuesta.fechaServicioHastaSpecified;
                            this.fxFechaEmisionNO = !oRespuesta.fechaEmisionSpecified;
                            this.fxFechaServicioDesdeNO = !oRespuesta.fechaServicioDesdeSpecified;
                            this.fxFechaServicioHastaNO = !oRespuesta.fechaServicioHastaSpecified;
                            this.fxFechaVencimientoPagoNO = !oRespuesta.fechaVencimientoPagoSpecified;
                            this.fxFechaVencimientoNO = !oRespuesta.fechaVencimientoSpecified;
                            this.fxImporteExentoNO = !oRespuesta.importeExentoSpecified;
                            this.fxImporteGravadoNO = !oRespuesta.importeGravadoSpecified;
                            this.fxImporteNoGravadoNO = !oRespuesta.importeNoGravadoSpecified;
                            this.fxImporteOtrosTributosNO = !oRespuesta.importeOtrosTributosSpecified;
                            this.fxNumeroDocumentoNO = !oRespuesta.numeroDocumentoSpecified;
                            if (oRespuesta.arrayComprobantesAsociados == null)
                            {
                                this.fxComprobantesAsociadosItemCantidad = 0;
                            }
                            else
                            {
                                this.fxComprobantesAsociadosItemCantidad = oRespuesta.arrayComprobantesAsociados.Length;
                            }
                            WSAFIPFE.fxAFIPTest.ComprobanteAsociadoType[] oPedidoItemCbteAsocs = new WSAFIPFE.fxAFIPTest.ComprobanteAsociadoType[(this.fxComprobantesAsociadosItemCantidad - 1) + 1];
                            int VB_t_i4_L4 = this.fxComprobantesAsociadosItemCantidad - 1;
                            for (nContador2 = 0; nContador2 <= VB_t_i4_L4; nContador2++)
                            {
                                WSAFIPFE.fxAFIPTest.ComprobanteAsociadoType oPedidoItemCbteAsoc = oRespuesta.arrayComprobantesAsociados[nContador2];
                                this.fxIndiceItem = nContador2;
                                this.fxComprobanteAsosiadoCodigoTipoComprobante = oPedidoItemCbteAsoc.codigoTipoComprobante;
                                this.fxComprobanteAsosiadoNumeroComprobante = (int) oPedidoItemCbteAsoc.numeroComprobante;
                                this.fxComprobanteAsosiadoNumeroPuntoVenta = oPedidoItemCbteAsoc.numeroPuntoVenta;
                            }
                            if (oRespuesta.arraySubtotalesIVA == null)
                            {
                                this.fxSubTotalesItemCantidad = 0;
                            }
                            else
                            {
                                this.fxSubTotalesItemCantidad = oRespuesta.arraySubtotalesIVA.Length;
                            }
                            WSAFIPFE.fxAFIPTest.SubtotalIVAType[] oSubTotales = new WSAFIPFE.fxAFIPTest.SubtotalIVAType[(this.fxSubTotalesItemCantidad - 1) + 1];
                            int VB_t_i4_L5 = this.fxSubTotalesItemCantidad - 1;
                            for (nContador2 = 0; nContador2 <= VB_t_i4_L5; nContador2++)
                            {
                                WSAFIPFE.fxAFIPTest.SubtotalIVAType oSubTotal = oRespuesta.arraySubtotalesIVA[nContador2];
                                this.fxIndiceItem = nContador2;
                                this.fxSubTotalesIvaCodigo = oSubTotal.codigo;
                                this.fxSubTotalesIvaImporte = Convert.ToDouble(oSubTotal.importe);
                            }
                            if (oRespuesta.arrayOtrosTributos == null)
                            {
                                this.fxOtrosTributosItemCantidad = 0;
                            }
                            else
                            {
                                this.fxOtrosTributosItemCantidad = oRespuesta.arrayOtrosTributos.Length;
                            }
                            WSAFIPFE.fxAFIPTest.OtroTributoType[] oOtrosTributos = new WSAFIPFE.fxAFIPTest.OtroTributoType[(this.fxOtrosTributosItemCantidad - 1) + 1];
                            int VB_t_i4_L6 = this.fxOtrosTributosItemCantidad - 1;
                            for (nContador2 = 0; nContador2 <= VB_t_i4_L6; nContador2++)
                            {
                                WSAFIPFE.fxAFIPTest.OtroTributoType oOtrosTributo = oRespuesta.arrayOtrosTributos[nContador2];
                                this.fxIndiceItem = nContador2;
                                this.fxOtrosTributosBaseImponible = Convert.ToDouble(oOtrosTributo.baseImponible);
                                this.fxOtrosTributosCodigo = oOtrosTributo.codigo;
                                this.fxOtrosTributosDescripcion = oOtrosTributo.descripcion;
                                this.fxOtrosTributosImporte = Convert.ToDouble(oOtrosTributo.importe);
                            }
                            if (oRespuesta.arrayItems == null)
                            {
                                this.fxItemsItemCantidad = 0;
                            }
                            else
                            {
                                this.fxItemsItemCantidad = oRespuesta.arrayItems.Length;
                            }
                            value2 = this.fxItemsItemCantidad;
                            int VB_t_i4_L7 = this.fxItemsItemCantidad - 1;
                            for (nContador2 = 0; nContador2 <= VB_t_i4_L7; nContador2++)
                            {
                                WSAFIPFE.fxAFIPTest.ItemType oItem = oRespuesta.arrayItems[nContador2];
                                this.fxIndiceItem = nContador2;
                                this.fxItemCantidad = Convert.ToDouble(oItem.cantidad);
                                this.fxItemCodigo = oItem.codigo;
                                this.fxItemCodigoMtx = oItem.codigoMtx;
                                this.fxItemDescripcion = oItem.descripcion;
                                this.fxItemImporteBonificacion = Convert.ToDouble(oItem.importeBonificacion);
                                this.fxItemImporteIva = Convert.ToDouble(oItem.importeIVA);
                                this.fxItemPrecioUnitario = Convert.ToDouble(oItem.precioUnitario);
                                this.fxItemUnidadesMtx = oItem.unidadesMtx;
                                this.fxItemImporteItem = Convert.ToDouble(oItem.importeItem);
                                this.fxItemCantidadNO = !oItem.cantidadSpecified;
                                this.fxItemImporteBonificacionNO = !oItem.importeBonificacionSpecified;
                                this.fxItemImporteIvaNO = !oItem.importeIVASpecified;
                                this.fxItemPrecioUnitarioNO = !oItem.precioUnitarioSpecified;
                                this.fxItemUnidadesMtxNO = !oItem.unidadesMtxSpecified;
                            }
                            bResultado = true;
                        }
                    }
                    this.strUltimoMensajeError = this.fxErrorMsg1;
                    return bResultado;
                }
                bResultado = false;
                this.strUltimoMensajeError = "ticket invalido";
                return bResultado;
            }
            if (this.fxTicketValido)
            {
                WSAFIPFE.fxAFIP.AuthRequestType autorizacion = new WSAFIPFE.fxAFIP.AuthRequestType();
                try
                {
                    autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                    autorizacion.token = this.fxtoken;
                    autorizacion.sign = this.fxsign;
                }
                catch (Exception exception6)
                {
                    ProjectData.SetProjectError(exception6);
                    Exception ex = exception6;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (!bResultado)
                {
                    return false;
                }
                WSAFIPFE.fxAFIP.ComprobanteType oRespuesta = null;
                WSAFIPFE.fxAFIP.ConsultaComprobanteRequestType oPedido = new WSAFIPFE.fxAFIP.ConsultaComprobanteRequestType();
                int value2 = 0;
                WSAFIPFE.fxAFIP.CodigoDescripcionType[] oObservaciones = null;
                WSAFIPFE.fxAFIP.CodigoDescripcionType[] oErrores = null;
                WSAFIPFE.fxAFIP.CodigoDescripcionType oEvento = null;
                oPedido.codigoTipoComprobante = (short) iCbteTipo;
                oPedido.numeroComprobante = iCbteNro;
                oPedido.numeroPuntoVenta = (short) iPtoVta;
                WSAFIPFE.fxAFIP.MTXCAService servicio = new WSAFIPFE.fxAFIP.MTXCAService();
                if (this.ProxyUserName != "")
                {
                    NetworkCredential cr = new NetworkCredential();
                    WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                    cr.Domain = this.ProxyDomain;
                    cr.Password = this.ProxyUserPassword;
                    cr.UserName = this.ProxyUserName;
                    pr.Credentials = cr;
                    servicio.Proxy = pr;
                }
                servicio.Url = this.fxDireccionServicioURL;
                if (this.ArchivoXMLEnviado != "")
                {
                    try
                    {
                        XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIP.ConsultaComprobanteRequestType));
                        StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                        writer1.Serialize((TextWriter) file1, oPedido);
                        file1.Close();
                    }
                    catch (Exception exception7)
                    {
                        ProjectData.SetProjectError(exception7);
                        Exception miEx = exception7;
                        this.strArchivoXMLError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                }
                try
                {
                    oRespuesta = servicio.consultarComprobante(autorizacion, oPedido, ref oObservaciones, ref oErrores, ref oEvento);
                }
                catch (SoapException exception8)
                {
                    ProjectData.SetProjectError(exception8);
                    SoapException ex1 = exception8;
                    bResultado = false;
                    this.ifxErrorItemCantidad = 1;
                    int VALUE = this.fxErrorItemCantidad;
                    this.afxError = new fxError[(VALUE - 1) + 1];
                    int VB_t_i4_L8 = this.fxErrorItemCantidad - 1;
                    nContador = 0;
                    while (nContador <= VB_t_i4_L8)
                    {
                        this.afxError[nContador].msg = ex1.Message;
                        this.afxError[nContador].code = 0;
                        nContador++;
                    }
                    this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                    this.iUltimoNumeroError = 13;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                catch (Exception exception9)
                {
                    ProjectData.SetProjectError(exception9);
                    Exception ex = exception9;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 0x204;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (this.ArchivoXMLRecibido != "")
                {
                    try
                    {
                        XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIP.ComprobanteType));
                        StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                        writer1.Serialize((TextWriter) file1, oRespuesta);
                        file1.Close();
                    }
                    catch (Exception exception10)
                    {
                        ProjectData.SetProjectError(exception10);
                        Exception miEx = exception10;
                        this.strArchivoXMLError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                }
                this.indice = 0;
                this.IndiceItem = 0;
                if (oRespuesta == null)
                {
                    bResultado = false;
                    this.iUltimoNumeroError = 100;
                    this.strUltimoMensajeError = "Sin respuesta";
                }
                else if (oRespuesta == null)
                {
                    this.strfxRespuestaResultado = "";
                    bResultado = false;
                }
                else
                {
                    int value;
                    if (oErrores == null)
                    {
                        this.ifxErrorItemCantidad = 0;
                        value = this.fxErrorItemCantidad;
                        this.afxError = new fxError[(value - 1) + 1];
                        int VB_t_i4_L9 = this.fxErrorItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                        {
                            this.afxError[nContador].code = oErrores[nContador].codigo;
                            this.afxError[nContador].msg = oErrores[nContador].descripcion;
                        }
                    }
                    else
                    {
                        this.ifxErrorItemCantidad = oErrores.Length;
                        value = this.fxErrorItemCantidad;
                        this.afxError = new fxError[(value - 1) + 1];
                        int VB_t_i4_L10 = this.fxErrorItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L10; nContador++)
                        {
                            this.afxError[nContador].code = oErrores[nContador].codigo;
                            this.afxError[nContador].msg = oErrores[nContador].descripcion;
                        }
                    }
                    if (oEvento == null)
                    {
                        this.ifxEventItemCantidad = 0;
                        value = this.fxEventItemCantidad;
                        this.afxEvent = new f1Event[(value - 1) + 1];
                    }
                    else
                    {
                        this.ifxEventItemCantidad = 1;
                        value = this.fxEventItemCantidad;
                        this.afxEvent = new f1Event[(value - 1) + 1];
                        int VB_t_i4_L11 = this.fxEventItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L11; nContador++)
                        {
                            this.afxEvent[nContador].code = oEvento.codigo;
                            this.afxEvent[nContador].msg = oEvento.descripcion;
                        }
                    }
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                    }
                    else
                    {
                        this.fxCodigoAutorizacion = oRespuesta.codigoAutorizacion.ToString();
                        this.fxCodigoConcepto = oRespuesta.codigoConcepto;
                        this.fxCodigoMoneda = oRespuesta.codigoMoneda;
                        this.fxCodigoTipoAutorizacion = oRespuesta.codigoTipoAutorizacion.ToString();
                        if (this.fxCodigoTipoAutorizacion == "E")
                        {
                            this.lfxRespuestaCAE = oRespuesta.codigoAutorizacion;
                        }
                        else
                        {
                            this.aFxCAEAs[0].strFxRespuestaCAEA = oRespuesta.codigoAutorizacion.ToString();
                        }
                        this.lfxCodigoAutorizacion = oRespuesta.codigoAutorizacion;
                        this.ifxRespuestaCodigoTipoComprobante = oRespuesta.codigoTipoComprobante;
                        this.lfxRespuestaCUIT = Conversions.ToLong("0");
                        this.lfxRespuestaNumeroComprobante = oRespuesta.numeroComprobante;
                        this.ifxRespuestaNumeroPuntoVenta = oRespuesta.numeroPuntoVenta;
                        this.strfxRespuestaResultado = "";
                        this.fxCodigoTipoComprobante = oRespuesta.codigoTipoComprobante;
                        this.fxCodigoTipoDocumento = oRespuesta.codigoTipoDocumento;
                        this.fxCotizacionMoneda = Convert.ToDouble(oRespuesta.cotizacionMoneda);
                        this.dfxFechaEmision = oRespuesta.fechaEmision;
                        this.dfxFechaServicioDesde = oRespuesta.fechaServicioDesde;
                        this.dfxFechaServicioHasta = oRespuesta.fechaServicioHasta;
                        this.dfxFechaVencimiento = oRespuesta.fechaVencimiento;
                        this.dfxFechaVencimientoPago = oRespuesta.fechaVencimientoPago;
                        this.fxImporteExento = Convert.ToDouble(oRespuesta.importeExento);
                        this.fxImporteGravado = Convert.ToDouble(oRespuesta.importeGravado);
                        this.fxImporteNoGravado = Convert.ToDouble(oRespuesta.importeNoGravado);
                        this.fxImporteOtrosTributos = Convert.ToDouble(oRespuesta.importeOtrosTributos);
                        this.fxImporteSubTotal = Convert.ToDouble(oRespuesta.importeSubtotal);
                        this.fxImporteTotal = Convert.ToDouble(oRespuesta.importeTotal);
                        this.fxNumeroComprobante = (int) oRespuesta.numeroComprobante;
                        this.fxNumeroDocumento = Conversions.ToString(oRespuesta.numeroDocumento);
                        this.fxNumeroPuntoVenta = oRespuesta.numeroPuntoVenta;
                        this.fxObservaciones = oRespuesta.observaciones;
                        this.fxCodigoAutorizacionNO = !oRespuesta.codigoAutorizacionSpecified;
                        this.fxCodigoTipoAutorizacionNO = !oRespuesta.codigoTipoAutorizacionSpecified;
                        this.fxCodigoTipoDocumentoNO = !oRespuesta.codigoTipoDocumentoSpecified;
                        this.fxFechaServicioHastaNO = !oRespuesta.fechaServicioHastaSpecified;
                        this.fxFechaEmisionNO = !oRespuesta.fechaEmisionSpecified;
                        this.fxFechaServicioDesdeNO = !oRespuesta.fechaServicioDesdeSpecified;
                        this.fxFechaServicioHastaNO = !oRespuesta.fechaServicioHastaSpecified;
                        this.fxFechaVencimientoPagoNO = !oRespuesta.fechaVencimientoPagoSpecified;
                        this.fxFechaVencimientoNO = !oRespuesta.fechaVencimientoSpecified;
                        this.fxImporteExentoNO = !oRespuesta.importeExentoSpecified;
                        this.fxImporteGravadoNO = !oRespuesta.importeGravadoSpecified;
                        this.fxImporteNoGravadoNO = !oRespuesta.importeNoGravadoSpecified;
                        this.fxImporteOtrosTributosNO = !oRespuesta.importeOtrosTributosSpecified;
                        this.fxNumeroDocumentoNO = !oRespuesta.numeroDocumentoSpecified;
                        if (oRespuesta.arrayComprobantesAsociados == null)
                        {
                            this.fxComprobantesAsociadosItemCantidad = 0;
                        }
                        else
                        {
                            this.fxComprobantesAsociadosItemCantidad = oRespuesta.arrayComprobantesAsociados.Length;
                        }
                        WSAFIPFE.fxAFIP.ComprobanteAsociadoType[] oPedidoItemCbteAsocs = new WSAFIPFE.fxAFIP.ComprobanteAsociadoType[(this.fxComprobantesAsociadosItemCantidad - 1) + 1];
                        int VB_t_i4_L12 = this.fxComprobantesAsociadosItemCantidad - 1;
                        for (nContador2 = 0; nContador2 <= VB_t_i4_L12; nContador2++)
                        {
                            WSAFIPFE.fxAFIP.ComprobanteAsociadoType oPedidoItemCbteAsoc = oRespuesta.arrayComprobantesAsociados[nContador2];
                            this.fxIndiceItem = nContador2;
                            this.fxComprobanteAsosiadoCodigoTipoComprobante = oPedidoItemCbteAsoc.codigoTipoComprobante;
                            this.fxComprobanteAsosiadoNumeroComprobante = (int) oPedidoItemCbteAsoc.numeroComprobante;
                            this.fxComprobanteAsosiadoNumeroPuntoVenta = oPedidoItemCbteAsoc.numeroPuntoVenta;
                        }
                        if (oRespuesta.arraySubtotalesIVA == null)
                        {
                            this.fxSubTotalesItemCantidad = 0;
                        }
                        else
                        {
                            this.fxSubTotalesItemCantidad = oRespuesta.arraySubtotalesIVA.Length;
                        }
                        WSAFIPFE.fxAFIP.SubtotalIVAType[] oSubTotales = new WSAFIPFE.fxAFIP.SubtotalIVAType[(this.fxSubTotalesItemCantidad - 1) + 1];
                        int VB_t_i4_L13 = this.fxSubTotalesItemCantidad - 1;
                        for (nContador2 = 0; nContador2 <= VB_t_i4_L13; nContador2++)
                        {
                            WSAFIPFE.fxAFIP.SubtotalIVAType oSubTotal = oRespuesta.arraySubtotalesIVA[nContador2];
                            this.fxIndiceItem = nContador2;
                            this.fxSubTotalesIvaCodigo = oSubTotal.codigo;
                            this.fxSubTotalesIvaImporte = Convert.ToDouble(oSubTotal.importe);
                        }
                        if (oRespuesta.arrayOtrosTributos == null)
                        {
                            this.fxOtrosTributosItemCantidad = 0;
                        }
                        else
                        {
                            this.fxOtrosTributosItemCantidad = oRespuesta.arrayOtrosTributos.Length;
                        }
                        WSAFIPFE.fxAFIP.OtroTributoType[] oOtrosTributos = new WSAFIPFE.fxAFIP.OtroTributoType[(this.fxOtrosTributosItemCantidad - 1) + 1];
                        int VB_t_i4_L14 = this.fxOtrosTributosItemCantidad - 1;
                        for (nContador2 = 0; nContador2 <= VB_t_i4_L14; nContador2++)
                        {
                            WSAFIPFE.fxAFIP.OtroTributoType oOtrosTributo = oRespuesta.arrayOtrosTributos[nContador2];
                            this.fxIndiceItem = nContador2;
                            this.fxOtrosTributosBaseImponible = Convert.ToDouble(oOtrosTributo.baseImponible);
                            this.fxOtrosTributosCodigo = oOtrosTributo.codigo;
                            this.fxOtrosTributosDescripcion = oOtrosTributo.descripcion;
                            this.fxOtrosTributosImporte = Convert.ToDouble(oOtrosTributo.importe);
                        }
                        if (oRespuesta.arrayItems == null)
                        {
                            this.fxItemsItemCantidad = 0;
                        }
                        else
                        {
                            this.fxItemsItemCantidad = oRespuesta.arrayItems.Length;
                        }
                        value2 = this.fxItemsItemCantidad;
                        int VB_t_i4_L15 = this.fxItemsItemCantidad - 1;
                        for (nContador2 = 0; nContador2 <= VB_t_i4_L15; nContador2++)
                        {
                            WSAFIPFE.fxAFIP.ItemType oItem = oRespuesta.arrayItems[nContador2];
                            this.fxIndiceItem = nContador2;
                            this.fxItemCantidad = Convert.ToDouble(oItem.cantidad);
                            this.fxItemCodigo = oItem.codigo;
                            this.fxItemCodigoMtx = oItem.codigoMtx;
                            this.fxItemDescripcion = oItem.descripcion;
                            this.fxItemImporteBonificacion = Convert.ToDouble(oItem.importeBonificacion);
                            this.fxItemImporteIva = Convert.ToDouble(oItem.importeIVA);
                            this.fxItemPrecioUnitario = Convert.ToDouble(oItem.precioUnitario);
                            this.fxItemUnidadesMtx = oItem.unidadesMtx;
                            this.fxItemImporteItem = Convert.ToDouble(oItem.importeItem);
                            this.fxItemCantidadNO = !oItem.cantidadSpecified;
                            this.fxItemImporteBonificacionNO = !oItem.importeBonificacionSpecified;
                            this.fxItemImporteIvaNO = !oItem.importeIVASpecified;
                            this.fxItemPrecioUnitarioNO = !oItem.precioUnitarioSpecified;
                            this.fxItemUnidadesMtxNO = !oItem.unidadesMtxSpecified;
                        }
                        bResultado = true;
                    }
                }
                this.strUltimoMensajeError = this.fxErrorMsg1;
                return bResultado;
            }
            bResultado = false;
            this.strUltimoMensajeError = "ticket invalido";
            return bResultado;
        }

        public bool fxConsultarCondicionesIva()
        {
            return this.fxConsultarLista("CONDICIONESIVA");
        }

        internal bool fxConsultarLista(string strTipo)
        {
            bool bResultado = true;
            this.fxIndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ifxListaItemCantidad = 0;
            this.ifxErrorItemCantidad = 0;
            this.ifxEventItemCantidad = 0;
            strTipo = strTipo.ToUpper();
            if (this.fxTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.fxAFIPTest.AuthRequestType autorizacion = new WSAFIPFE.fxAFIPTest.AuthRequestType();
                    try
                    {
                        autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                        autorizacion.token = this.fxtoken;
                        autorizacion.sign = this.fxsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.fxAFIPTest.MTXCAService servicio = new WSAFIPFE.fxAFIPTest.MTXCAService();
                            WSAFIPFE.fxAFIPTest.CodigoDescripcionType oEvento = null;
                            WSAFIPFE.fxAFIPTest.PuntoVentaType[] oRespuesta3 = null;
                            WSAFIPFE.fxAFIPTest.CodigoDescripcionStringType[] oRespuesta2 = null;
                            WSAFIPFE.fxAFIPTest.CodigoDescripcionType[] oRespuesta = null;
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            string VB_t_string_L0 = strTipo;
                            if (VB_t_string_L0 == "TIPOSCOMPROBANTE")
                            {
                                oRespuesta = servicio.consultarTiposComprobante(autorizacion, ref oEvento);
                            }
                            else if (VB_t_string_L0 == "TIPOSDOCUMENTO")
                            {
                                oRespuesta = servicio.consultarTiposDocumento(autorizacion, ref oEvento);
                            }
                            else if (VB_t_string_L0 == "ALICUOTASIVA")
                            {
                                oRespuesta = servicio.consultarAlicuotasIVA(autorizacion, ref oEvento);
                            }
                            else if (VB_t_string_L0 == "CONDICIONESIVA")
                            {
                                oRespuesta = servicio.consultarCondicionesIVA(autorizacion, ref oEvento);
                            }
                            else if (VB_t_string_L0 == "UNIDADESMEDIDA")
                            {
                                oRespuesta = servicio.consultarUnidadesMedida(autorizacion, ref oEvento);
                            }
                            else if (VB_t_string_L0 == "MONEDAS")
                            {
                                oRespuesta2 = servicio.consultarMonedas(autorizacion, ref oEvento);
                            }
                            else if (VB_t_string_L0 == "PUNTOSVENTA")
                            {
                                oRespuesta3 = servicio.consultarPuntosVenta(autorizacion, ref oEvento);
                            }
                            else if (VB_t_string_L0 == "PUNTOSVENTACAE")
                            {
                                oRespuesta3 = servicio.consultarPuntosVentaCAE(autorizacion, ref oEvento);
                            }
                            else if (VB_t_string_L0 == "PUNTOSVENTACAEA")
                            {
                                oRespuesta3 = servicio.consultarPuntosVentaCAEA(autorizacion, ref oEvento);
                            }
                            else if (VB_t_string_L0 == "TIPOSTRIBUTO")
                            {
                                oRespuesta = servicio.consultarTiposTributo(autorizacion, ref oEvento);
                            }
                            else
                            {
                                oRespuesta = null;
                            }
                            this.afxError = new fxError[1];
                            if (oEvento == null)
                            {
                                this.ifxEventItemCantidad = 0;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[1];
                            }
                            else
                            {
                                this.ifxEventItemCantidad = 1;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L0 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            if (oRespuesta == null)
                            {
                                if (oRespuesta2 == null)
                                {
                                    if (oRespuesta3 == null)
                                    {
                                        this.ifxListaItemCantidad = 0;
                                        value = this.fxListaItemCantidad;
                                        this.afxLista = new fxLista[1];
                                    }
                                    else
                                    {
                                        this.ifxListaItemCantidad = oRespuesta3.Length;
                                        value = this.fxListaItemCantidad;
                                        this.afxLista = new fxLista[(value - 1) + 1];
                                        int VB_t_i4_L1 = this.fxListaItemCantidad - 1;
                                        for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                        {
                                            this.afxLista[nContador].codigo = oRespuesta3[nContador].numeroPuntoVenta;
                                            this.afxLista[nContador].descripcion = oRespuesta3[nContador].bloqueado.ToString();
                                            this.afxLista[nContador].fecha1 = oRespuesta3[nContador].fechaBaja.ToString();
                                            this.afxLista[nContador].fecha2 = oRespuesta3[nContador].fechaBajaSpecified.ToString();
                                        }
                                    }
                                }
                                else
                                {
                                    this.ifxListaItemCantidad = oRespuesta2.Length;
                                    value = this.fxListaItemCantidad;
                                    this.afxLista = new fxLista[(value - 1) + 1];
                                    int VB_t_i4_L2 = this.fxListaItemCantidad - 1;
                                    for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                    {
                                        this.afxLista[nContador].codigo2 = oRespuesta2[nContador].codigo;
                                        this.afxLista[nContador].descripcion = oRespuesta2[nContador].descripcion;
                                    }
                                }
                            }
                            else
                            {
                                this.ifxListaItemCantidad = oRespuesta.Length;
                                value = this.fxListaItemCantidad;
                                this.afxLista = new fxLista[(value - 1) + 1];
                                int VB_t_i4_L3 = this.fxListaItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.afxLista[nContador].codigo = oRespuesta[nContador].codigo;
                                    this.afxLista[nContador].descripcion = oRespuesta[nContador].descripcion;
                                }
                            }
                            this.strUltimoMensajeError = this.fxErrorMsg1;
                            this.iUltimoNumeroError = this.fxErrorCode1;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.fxAFIP.AuthRequestType autorizacion = new WSAFIPFE.fxAFIP.AuthRequestType();
                try
                {
                    autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                    autorizacion.token = this.fxtoken;
                    autorizacion.sign = this.fxsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.fxAFIP.MTXCAService servicio = new WSAFIPFE.fxAFIP.MTXCAService();
                        WSAFIPFE.fxAFIP.CodigoDescripcionType oEvento = null;
                        WSAFIPFE.fxAFIP.PuntoVentaType[] oRespuesta3 = null;
                        WSAFIPFE.fxAFIP.CodigoDescripcionStringType[] oRespuesta2 = null;
                        WSAFIPFE.fxAFIP.CodigoDescripcionType[] oRespuesta = null;
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.fxDireccionServicioURL;
                        string VB_t_string_L1 = strTipo;
                        if (VB_t_string_L1 == "TIPOSCOMPROBANTE")
                        {
                            oRespuesta = servicio.consultarTiposComprobante(autorizacion, ref oEvento);
                        }
                        else if (VB_t_string_L1 == "TIPOSDOCUMENTO")
                        {
                            oRespuesta = servicio.consultarTiposDocumento(autorizacion, ref oEvento);
                        }
                        else if (VB_t_string_L1 == "ALICUOTASIVA")
                        {
                            oRespuesta = servicio.consultarAlicuotasIVA(autorizacion, ref oEvento);
                        }
                        else if (VB_t_string_L1 == "CONDICIONESIVA")
                        {
                            oRespuesta = servicio.consultarCondicionesIVA(autorizacion, ref oEvento);
                        }
                        else if (VB_t_string_L1 == "UNIDADESMEDIDA")
                        {
                            oRespuesta = servicio.consultarUnidadesMedida(autorizacion, ref oEvento);
                        }
                        else if (VB_t_string_L1 == "MONEDAS")
                        {
                            oRespuesta2 = servicio.consultarMonedas(autorizacion, ref oEvento);
                        }
                        else if (VB_t_string_L1 == "PUNTOSVENTA")
                        {
                            oRespuesta3 = servicio.consultarPuntosVenta(autorizacion, ref oEvento);
                        }
                        else if (VB_t_string_L1 == "PUNTOSVENTACAE")
                        {
                            oRespuesta3 = servicio.consultarPuntosVentaCAE(autorizacion, ref oEvento);
                        }
                        else if (VB_t_string_L1 == "PUNTOSVENTACAEA")
                        {
                            oRespuesta3 = servicio.consultarPuntosVentaCAEA(autorizacion, ref oEvento);
                        }
                        else if (VB_t_string_L1 == "TIPOSTRIBUTO")
                        {
                            oRespuesta = servicio.consultarTiposTributo(autorizacion, ref oEvento);
                        }
                        else
                        {
                            oRespuesta = null;
                        }
                        this.afxError = new fxError[1];
                        if (oEvento == null)
                        {
                            this.ifxEventItemCantidad = 0;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[1];
                        }
                        else
                        {
                            this.ifxEventItemCantidad = 1;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L4 = this.fxEventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                            {
                                this.afxEvent[nContador].code = oEvento.codigo;
                                this.afxEvent[nContador].msg = oEvento.descripcion;
                            }
                        }
                        if (oRespuesta == null)
                        {
                            if (oRespuesta2 == null)
                            {
                                if (oRespuesta3 == null)
                                {
                                    this.ifxListaItemCantidad = 0;
                                    value = this.fxListaItemCantidad;
                                    this.afxLista = new fxLista[1];
                                }
                                else
                                {
                                    this.ifxListaItemCantidad = oRespuesta3.Length;
                                    value = this.fxListaItemCantidad;
                                    this.afxLista = new fxLista[(value - 1) + 1];
                                    int VB_t_i4_L5 = this.fxListaItemCantidad - 1;
                                    for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                                    {
                                        this.afxLista[nContador].codigo = oRespuesta3[nContador].numeroPuntoVenta;
                                        this.afxLista[nContador].descripcion = oRespuesta3[nContador].bloqueado.ToString();
                                        this.afxLista[nContador].fecha1 = oRespuesta3[nContador].fechaBaja.ToString();
                                        this.afxLista[nContador].fecha2 = oRespuesta3[nContador].fechaBajaSpecified.ToString();
                                    }
                                }
                            }
                            else
                            {
                                this.ifxListaItemCantidad = oRespuesta2.Length;
                                value = this.fxListaItemCantidad;
                                this.afxLista = new fxLista[(value - 1) + 1];
                                int VB_t_i4_L6 = this.fxListaItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                                {
                                    this.afxLista[nContador].codigo2 = oRespuesta2[nContador].codigo;
                                    this.afxLista[nContador].descripcion = oRespuesta2[nContador].descripcion;
                                }
                            }
                        }
                        else
                        {
                            this.ifxListaItemCantidad = oRespuesta.Length;
                            value = this.fxListaItemCantidad;
                            this.afxLista = new fxLista[(value - 1) + 1];
                            int VB_t_i4_L7 = this.fxListaItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.afxLista[nContador].codigo = oRespuesta[nContador].codigo;
                                this.afxLista[nContador].descripcion = oRespuesta[nContador].descripcion;
                            }
                        }
                        this.strUltimoMensajeError = this.fxErrorMsg1;
                        this.iUltimoNumeroError = this.fxErrorCode1;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool fxConsultarMonedas()
        {
            return this.fxConsultarLista("MONEDAS");
        }

        public bool fxconsultarPtosVtaCAEANoInformados(string strCAEA)
        {
            this.ifxErrorItemCantidad = 0;
            this.ifxEventItemCantidad = 0;
            bool bResultado = true;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.strfxRespuestaResultado = "";
            this.iFxRespuestaCAEAItemCantidad = 0;
            this.aFxRespuestaDetalleCAEA = new FxDetalleRespuestaCAEA[1];
            if (this.Modo == modoFiscal.Test)
            {
                if (this.fxTicketValido)
                {
                    WSAFIPFE.fxAFIPTest.AuthRequestType autorizacion = new WSAFIPFE.fxAFIPTest.AuthRequestType();
                    try
                    {
                        autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                        autorizacion.token = this.fxtoken;
                        autorizacion.sign = this.fxsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.fxAFIPTest.PuntoVentaType[] oRespuesta = null;
                        WSAFIPFE.fxAFIPTest.CodigoDescripcionType oEvento = null;
                        WSAFIPFE.fxAFIPTest.CodigoDescripcionType[] oErrores = null;
                        WSAFIPFE.fxAFIPTest.MTXCAService servicio = new WSAFIPFE.fxAFIPTest.MTXCAService();
                        long lCAEA = Conversions.ToLong(strCAEA);
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        try
                        {
                            int nContador;
                            int value;
                            oRespuesta = servicio.consultarPtosVtaCAEANoInformados(autorizacion, lCAEA, ref oErrores, ref oEvento);
                            if (this.ArchivoXMLRecibido != "")
                            {
                                try
                                {
                                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIPTest.PuntoVentaType));
                                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                    writer1.Serialize((TextWriter) file1, oRespuesta);
                                    file1.Close();
                                }
                                catch (Exception exception2)
                                {
                                    ProjectData.SetProjectError(exception2);
                                    Exception miEx = exception2;
                                    this.strArchivoXMLError = miEx.Message;
                                    ProjectData.ClearProjectError();
                                }
                            }
                            if (oErrores == null)
                            {
                                this.ifxErrorItemCantidad = 0;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[(value - 1) + 1];
                                int VB_t_i4_L0 = this.fxErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.afxError[nContador].code = oErrores[nContador].codigo;
                                    this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                }
                            }
                            else
                            {
                                this.ifxErrorItemCantidad = oErrores.Length;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[(value - 1) + 1];
                                int VB_t_i4_L1 = this.fxErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.afxError[nContador].code = oErrores[nContador].codigo;
                                    this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                }
                            }
                            this.strUltimoMensajeError = this.fxErrorMsg1;
                            this.iUltimoNumeroError = this.fxErrorCode1;
                            if (oEvento == null)
                            {
                                this.ifxEventItemCantidad = 0;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            else
                            {
                                this.ifxEventItemCantidad = 1;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            if (oRespuesta == null)
                            {
                                bResultado = false;
                            }
                            else
                            {
                                bResultado = true;
                                this.iFxRespuestaCAEAItemCantidad = oRespuesta.Length;
                                value = this.iFxRespuestaCAEAItemCantidad;
                                this.aFxRespuestaDetalleCAEA = new FxDetalleRespuestaCAEA[(value - 1) + 1];
                                int VB_t_i4_L4 = this.FxRespuestaCAEAItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                                {
                                    this.aFxRespuestaDetalleCAEA[nContador].Bloqueado = Conversions.ToString((int) oRespuesta[nContador].bloqueado);
                                    this.aFxRespuestaDetalleCAEA[nContador].NumeroPuntoDeventa = oRespuesta[nContador].numeroPuntoVenta;
                                    this.aFxRespuestaDetalleCAEA[nContador].Fechabaja = oRespuesta[nContador].fechaBaja;
                                }
                            }
                        }
                        catch (SoapException exception3)
                        {
                            ProjectData.SetProjectError(exception3);
                            SoapException ex1 = exception3;
                            bResultado = false;
                            this.ifxErrorItemCantidad = 1;
                            int value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L5 = this.fxErrorItemCantidad - 1;
                            for (int ncontador = 0; ncontador <= VB_t_i4_L5; ncontador++)
                            {
                                this.afxError[ncontador].msg = ex1.Message;
                                this.afxError[ncontador].code = 0;
                            }
                            this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                            this.iUltimoNumeroError = 13;
                            ProjectData.ClearProjectError();
                        }
                        catch (Exception exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            Exception ex = exception4;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                        this.strUltimoMensajeError = this.fxErrorMsg1;
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.fxTicketValido)
            {
                WSAFIPFE.fxAFIP.AuthRequestType autorizacion = new WSAFIPFE.fxAFIP.AuthRequestType();
                try
                {
                    autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                    autorizacion.token = this.fxtoken;
                    autorizacion.sign = this.fxsign;
                }
                catch (Exception exception5)
                {
                    ProjectData.SetProjectError(exception5);
                    Exception ex = exception5;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.fxAFIP.PuntoVentaType[] oRespuesta = null;
                    WSAFIPFE.fxAFIP.CodigoDescripcionType oEvento = null;
                    WSAFIPFE.fxAFIP.CodigoDescripcionType[] oErrores = null;
                    WSAFIPFE.fxAFIP.MTXCAService servicio = new WSAFIPFE.fxAFIP.MTXCAService();
                    long lCAEA = Conversions.ToLong(strCAEA);
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.fxDireccionServicioURL;
                    try
                    {
                        int nContador;
                        int value;
                        oRespuesta = servicio.consultarPtosVtaCAEANoInformados(autorizacion, lCAEA, ref oErrores, ref oEvento);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIP.PuntoVentaType));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception6)
                            {
                                ProjectData.SetProjectError(exception6);
                                Exception miEx = exception6;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        if (oErrores == null)
                        {
                            this.ifxErrorItemCantidad = 0;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L6 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.afxError[nContador].code = oErrores[nContador].codigo;
                                this.afxError[nContador].msg = oErrores[nContador].descripcion;
                            }
                        }
                        else
                        {
                            this.ifxErrorItemCantidad = oErrores.Length;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L7 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.afxError[nContador].code = oErrores[nContador].codigo;
                                this.afxError[nContador].msg = oErrores[nContador].descripcion;
                            }
                        }
                        this.strUltimoMensajeError = this.fxErrorMsg1;
                        this.iUltimoNumeroError = this.fxErrorCode1;
                        if (oEvento == null)
                        {
                            this.ifxEventItemCantidad = 0;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L8 = this.fxEventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                            {
                                this.afxEvent[nContador].code = oEvento.codigo;
                                this.afxEvent[nContador].msg = oEvento.descripcion;
                            }
                        }
                        else
                        {
                            this.ifxEventItemCantidad = 1;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L9 = this.fxEventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                            {
                                this.afxEvent[nContador].code = oEvento.codigo;
                                this.afxEvent[nContador].msg = oEvento.descripcion;
                            }
                        }
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                        }
                        else
                        {
                            bResultado = true;
                            this.iFxRespuestaCAEAItemCantidad = oRespuesta.Length;
                            value = this.iFxRespuestaCAEAItemCantidad;
                            this.aFxRespuestaDetalleCAEA = new FxDetalleRespuestaCAEA[(value - 1) + 1];
                            int VB_t_i4_L10 = this.FxRespuestaCAEAItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L10; nContador++)
                            {
                                this.aFxRespuestaDetalleCAEA[nContador].Bloqueado = Conversions.ToString((int) oRespuesta[nContador].bloqueado);
                                this.aFxRespuestaDetalleCAEA[nContador].NumeroPuntoDeventa = oRespuesta[nContador].numeroPuntoVenta;
                                this.aFxRespuestaDetalleCAEA[nContador].Fechabaja = oRespuesta[nContador].fechaBaja;
                            }
                        }
                    }
                    catch (SoapException exception7)
                    {
                        ProjectData.SetProjectError(exception7);
                        SoapException ex1 = exception7;
                        bResultado = false;
                        this.ifxErrorItemCantidad = 1;
                        int value = this.fxErrorItemCantidad;
                        this.afxError = new fxError[(value - 1) + 1];
                        int VB_t_i4_L11 = this.fxErrorItemCantidad - 1;
                        for (int ncontador = 0; ncontador <= VB_t_i4_L11; ncontador++)
                        {
                            this.afxError[ncontador].msg = ex1.Message;
                            this.afxError[ncontador].code = 0;
                        }
                        this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                        this.iUltimoNumeroError = 13;
                        ProjectData.ClearProjectError();
                    }
                    catch (Exception exception8)
                    {
                        ProjectData.SetProjectError(exception8);
                        Exception ex = exception8;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    this.strUltimoMensajeError = this.fxErrorMsg1;
                }
                return bResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return bResultado;
        }

        public bool fxConsultarPuntosVenta()
        {
            return this.fxConsultarLista("PUNTOSVENTA");
        }

        public bool fxConsultarPuntosVentaCAE()
        {
            return this.fxConsultarLista("PUNTOSVENTACAE");
        }

        public bool fxConsultarPuntosVentaCAEA()
        {
            return this.fxConsultarLista("PUNTOSVENTACAEA");
        }

        public bool fxConsultarTiposComprobante()
        {
            return this.fxConsultarLista("TIPOSCOMPROBANTE");
        }

        public bool fxConsultarTiposDocumento()
        {
            return this.fxConsultarLista("TIPOSDOCUMENTO");
        }

        public bool fxConsultarTiposTributo()
        {
            return this.fxConsultarLista("TIPOSTRIBUTO");
        }

        public int fxConsultarUltimoComprobanteAutorizado(int iPtoVta, int iCbteTipo)
        {
            int mResultado;
            this.ifxErrorItemCantidad = 0;
            this.ifxEventItemCantidad = 0;
            bool bResultado = true;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            long lNumeroComprobante = 0L;
            bool bNumeroComprobante = false;
            if (this.Modo == modoFiscal.Test)
            {
                if (this.fxTicketValido)
                {
                    WSAFIPFE.fxAFIPTest.AuthRequestType autorizacion = new WSAFIPFE.fxAFIPTest.AuthRequestType();
                    try
                    {
                        autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                        autorizacion.token = this.fxtoken;
                        autorizacion.sign = this.fxsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        int nContador;
                        int value;
                        WSAFIPFE.fxAFIPTest.ConsultaUltimoComprobanteAutorizadoRequestType oPedido = new WSAFIPFE.fxAFIPTest.ConsultaUltimoComprobanteAutorizadoRequestType();
                        WSAFIPFE.fxAFIPTest.CodigoDescripcionType oEvento = new WSAFIPFE.fxAFIPTest.CodigoDescripcionType();
                        WSAFIPFE.fxAFIPTest.CodigoDescripcionType[] oErrores = null;
                        WSAFIPFE.fxAFIPTest.MTXCAService servicio = new WSAFIPFE.fxAFIPTest.MTXCAService();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        oPedido.codigoTipoComprobante = (short) iCbteTipo;
                        oPedido.numeroPuntoVenta = (short) iPtoVta;
                        try
                        {
                            servicio.consultarUltimoComprobanteAutorizado(autorizacion, oPedido, ref lNumeroComprobante, ref bNumeroComprobante, ref oErrores, ref oEvento);
                        }
                        catch (SoapException exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            SoapException ex1 = exception2;
                            bResultado = false;
                            this.ifxErrorItemCantidad = 1;
                            int VALUE = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(VALUE - 1) + 1];
                            int VB_t_i4_L0 = this.fxErrorItemCantidad - 1;
                            for (int nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                            {
                                this.afxError[nContador].msg = ex1.Message;
                                this.afxError[nContador].code = 0;
                            }
                            this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                            this.iUltimoNumeroError = 13;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                        catch (Exception exception3)
                        {
                            ProjectData.SetProjectError(exception3);
                            Exception ex = exception3;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                        if (oEvento == null)
                        {
                            this.ifxEventItemCantidad = 0;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[1];
                        }
                        else
                        {
                            this.ifxEventItemCantidad = 1;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L1 = this.fxEventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.afxEvent[nContador].code = oEvento.codigo;
                                this.afxEvent[nContador].msg = oEvento.descripcion;
                            }
                        }
                        if (oErrores == null)
                        {
                            this.ifxErrorItemCantidad = 0;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[1];
                        }
                        else
                        {
                            this.ifxErrorItemCantidad = 1;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L2 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                            {
                                this.afxError[nContador].code = oErrores[nContador].codigo;
                                this.afxError[nContador].msg = oErrores[nContador].descripcion;
                            }
                        }
                        if (bNumeroComprobante)
                        {
                            mResultado = (int) lNumeroComprobante;
                        }
                        this.strUltimoMensajeError = this.fxErrorMsg1;
                    }
                    return mResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return mResultado;
            }
            if (this.fxTicketValido)
            {
                WSAFIPFE.fxAFIP.AuthRequestType autorizacion = new WSAFIPFE.fxAFIP.AuthRequestType();
                try
                {
                    autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                    autorizacion.token = this.fxtoken;
                    autorizacion.sign = this.fxsign;
                }
                catch (Exception exception4)
                {
                    ProjectData.SetProjectError(exception4);
                    Exception ex = exception4;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    int nContador;
                    int value;
                    WSAFIPFE.fxAFIP.ConsultaUltimoComprobanteAutorizadoRequestType oPedido = new WSAFIPFE.fxAFIP.ConsultaUltimoComprobanteAutorizadoRequestType();
                    WSAFIPFE.fxAFIP.CodigoDescripcionType oEvento = new WSAFIPFE.fxAFIP.CodigoDescripcionType();
                    WSAFIPFE.fxAFIP.CodigoDescripcionType[] oErrores = null;
                    WSAFIPFE.fxAFIP.MTXCAService servicio = new WSAFIPFE.fxAFIP.MTXCAService();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.fxDireccionServicioURL;
                    oPedido.codigoTipoComprobante = (short) iCbteTipo;
                    oPedido.numeroPuntoVenta = (short) iPtoVta;
                    try
                    {
                        servicio.consultarUltimoComprobanteAutorizado(autorizacion, oPedido, ref lNumeroComprobante, ref bNumeroComprobante, ref oErrores, ref oEvento);
                    }
                    catch (SoapException exception5)
                    {
                        ProjectData.SetProjectError(exception5);
                        SoapException ex1 = exception5;
                        bResultado = false;
                        this.ifxErrorItemCantidad = 1;
                        int VALUE = this.fxErrorItemCantidad;
                        this.afxError = new fxError[(VALUE - 1) + 1];
                        int VB_t_i4_L3 = this.fxErrorItemCantidad - 1;
                        for (int nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                        {
                            this.afxError[nContador].msg = ex1.Message;
                            this.afxError[nContador].code = 0;
                        }
                        this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                        this.iUltimoNumeroError = 13;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    catch (Exception exception6)
                    {
                        ProjectData.SetProjectError(exception6);
                        Exception ex = exception6;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (oEvento == null)
                    {
                        this.ifxEventItemCantidad = 0;
                        value = this.fxEventItemCantidad;
                        this.afxEvent = new f1Event[1];
                    }
                    else
                    {
                        this.ifxEventItemCantidad = 1;
                        value = this.fxEventItemCantidad;
                        this.afxEvent = new f1Event[(value - 1) + 1];
                        int VB_t_i4_L4 = this.fxEventItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                        {
                            this.afxEvent[nContador].code = oEvento.codigo;
                            this.afxEvent[nContador].msg = oEvento.descripcion;
                        }
                    }
                    if (oErrores == null)
                    {
                        this.ifxErrorItemCantidad = 0;
                        value = this.fxErrorItemCantidad;
                        this.afxError = new fxError[1];
                    }
                    else
                    {
                        this.ifxErrorItemCantidad = 1;
                        value = this.fxErrorItemCantidad;
                        this.afxError = new fxError[(value - 1) + 1];
                        int VB_t_i4_L5 = this.fxErrorItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                        {
                            this.afxError[nContador].code = oErrores[nContador].codigo;
                            this.afxError[nContador].msg = oErrores[nContador].descripcion;
                        }
                    }
                    if (bNumeroComprobante)
                    {
                        mResultado = (int) lNumeroComprobante;
                    }
                    this.strUltimoMensajeError = this.fxErrorMsg1;
                }
                return mResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return mResultado;
        }

        public bool fxConsultarUnidadesMedida()
        {
            return this.fxConsultarLista("UNIDADESMEDIDA");
        }

        public bool fxDummy()
        {
            bool bResultado = true;
            this.strfxRespuestaDummyDbServer = "";
            this.strfxRespuestaDummyAuthServer = "";
            this.strfxRespuestaDummyDbServer = "";
            if (this.Modo == modoFiscal.Test)
            {
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.fxAFIPTest.MTXCAService servicio = new WSAFIPFE.fxAFIPTest.MTXCAService();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.fxAFIPTest.DummyResponseType oRespuesta = servicio.dummy();
                        this.strfxRespuestaDummyDbServer = oRespuesta.dbserver;
                        this.strfxRespuestaDummyAuthServer = oRespuesta.authserver;
                        this.strfxRespuestaDummyAppServer = oRespuesta.appserver;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 6;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            if (bResultado)
            {
                try
                {
                    WSAFIPFE.fxAFIP.MTXCAService servicio = new WSAFIPFE.fxAFIP.MTXCAService();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.fxDireccionServicioURL;
                    WSAFIPFE.fxAFIP.DummyResponseType oRespuesta = servicio.dummy();
                    this.strfxRespuestaDummyDbServer = oRespuesta.dbserver;
                    this.strfxRespuestaDummyAuthServer = oRespuesta.authserver;
                    this.strfxRespuestaDummyAppServer = oRespuesta.appserver;
                }
                catch (Exception exception2)
                {
                    ProjectData.SetProjectError(exception2);
                    Exception ex = exception2;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 6;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        public bool fxInformarCAEANoUtilizado(string strCAEA)
        {
            this.ifxErrorItemCantidad = 0;
            this.ifxEventItemCantidad = 0;
            bool bResultado = true;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.strfxRespuestaResultado = "";
            if (this.Modo == modoFiscal.Test)
            {
                if (this.fxTicketValido)
                {
                    WSAFIPFE.fxAFIPTest.AuthRequestType autorizacion = new WSAFIPFE.fxAFIPTest.AuthRequestType();
                    try
                    {
                        autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                        autorizacion.token = this.fxtoken;
                        autorizacion.sign = this.fxsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.fxAFIPTest.ResultadoSimpleType oRespuesta = WSAFIPFE.fxAFIPTest.ResultadoSimpleType.A;
                        WSAFIPFE.fxAFIPTest.CodigoDescripcionType oEvento = null;
                        WSAFIPFE.fxAFIPTest.CodigoDescripcionType[] oErrores = null;
                        WSAFIPFE.fxAFIPTest.MTXCAService servicio = new WSAFIPFE.fxAFIPTest.MTXCAService();
                        long lCAEA = Conversions.ToLong(strCAEA);
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        try
                        {
                            DateTime dFecha;
                            int nContador;
                            int value;
                            servicio.informarCAEANoUtilizado(autorizacion, ref lCAEA, ref dFecha, ref oErrores, ref oEvento);
                            this.dfxRespuestaFechaEmision = dFecha;
                            if (this.ArchivoXMLRecibido != "")
                            {
                                try
                                {
                                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIPTest.ResultadoSimpleType));
                                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                    writer1.Serialize((TextWriter) file1, oRespuesta);
                                    file1.Close();
                                }
                                catch (Exception exception2)
                                {
                                    ProjectData.SetProjectError(exception2);
                                    Exception miEx = exception2;
                                    this.strArchivoXMLError = miEx.Message;
                                    ProjectData.ClearProjectError();
                                }
                            }
                            if (oErrores == null)
                            {
                                this.ifxErrorItemCantidad = 0;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[(value - 1) + 1];
                                int VB_t_i4_L0 = this.fxErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.afxError[nContador].code = oErrores[nContador].codigo;
                                    this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                }
                            }
                            else
                            {
                                this.ifxErrorItemCantidad = oErrores.Length;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[(value - 1) + 1];
                                int VB_t_i4_L1 = this.fxErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.afxError[nContador].code = oErrores[nContador].codigo;
                                    this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                }
                            }
                            this.strUltimoMensajeError = this.fxErrorMsg1;
                            this.iUltimoNumeroError = this.fxErrorCode1;
                            if (oEvento == null)
                            {
                                this.ifxEventItemCantidad = 0;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            else
                            {
                                this.ifxEventItemCantidad = 1;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            this.strfxRespuestaResultado = oRespuesta.ToString();
                            if (oRespuesta == WSAFIPFE.fxAFIPTest.ResultadoSimpleType.R)
                            {
                                bResultado = false;
                            }
                            else
                            {
                                bResultado = true;
                            }
                        }
                        catch (SoapException exception3)
                        {
                            ProjectData.SetProjectError(exception3);
                            SoapException ex1 = exception3;
                            bResultado = false;
                            this.ifxErrorItemCantidad = 1;
                            int value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L4 = this.fxErrorItemCantidad - 1;
                            for (int ncontador = 0; ncontador <= VB_t_i4_L4; ncontador++)
                            {
                                this.afxError[ncontador].msg = ex1.Message;
                                this.afxError[ncontador].code = 0;
                            }
                            this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                            this.iUltimoNumeroError = 13;
                            ProjectData.ClearProjectError();
                        }
                        catch (Exception exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            Exception ex = exception4;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                        this.strUltimoMensajeError = this.fxErrorMsg1;
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.fxTicketValido)
            {
                WSAFIPFE.fxAFIP.AuthRequestType autorizacion = new WSAFIPFE.fxAFIP.AuthRequestType();
                try
                {
                    autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                    autorizacion.token = this.fxtoken;
                    autorizacion.sign = this.fxsign;
                }
                catch (Exception exception5)
                {
                    ProjectData.SetProjectError(exception5);
                    Exception ex = exception5;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.fxAFIP.ResultadoSimpleType oRespuesta = WSAFIPFE.fxAFIP.ResultadoSimpleType.A;
                    WSAFIPFE.fxAFIP.CodigoDescripcionType oEvento = null;
                    WSAFIPFE.fxAFIP.CodigoDescripcionType[] oErrores = null;
                    WSAFIPFE.fxAFIP.MTXCAService servicio = new WSAFIPFE.fxAFIP.MTXCAService();
                    long lCAEA = Conversions.ToLong(strCAEA);
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.fxDireccionServicioURL;
                    try
                    {
                        DateTime dFecha;
                        int nContador;
                        int value;
                        servicio.informarCAEANoUtilizado(autorizacion, ref lCAEA, ref dFecha, ref oErrores, ref oEvento);
                        this.dfxRespuestaFechaEmision = dFecha;
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIP.ResultadoSimpleType));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception6)
                            {
                                ProjectData.SetProjectError(exception6);
                                Exception miEx = exception6;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        if (oErrores == null)
                        {
                            this.ifxErrorItemCantidad = 0;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L5 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.afxError[nContador].code = oErrores[nContador].codigo;
                                this.afxError[nContador].msg = oErrores[nContador].descripcion;
                            }
                        }
                        else
                        {
                            this.ifxErrorItemCantidad = oErrores.Length;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L6 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.afxError[nContador].code = oErrores[nContador].codigo;
                                this.afxError[nContador].msg = oErrores[nContador].descripcion;
                            }
                        }
                        this.strUltimoMensajeError = this.fxErrorMsg1;
                        this.iUltimoNumeroError = this.fxErrorCode1;
                        if (oEvento == null)
                        {
                            this.ifxEventItemCantidad = 0;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.fxEventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.afxEvent[nContador].code = oEvento.codigo;
                                this.afxEvent[nContador].msg = oEvento.descripcion;
                            }
                        }
                        else
                        {
                            this.ifxEventItemCantidad = 1;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L8 = this.fxEventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                            {
                                this.afxEvent[nContador].code = oEvento.codigo;
                                this.afxEvent[nContador].msg = oEvento.descripcion;
                            }
                        }
                        this.strfxRespuestaResultado = oRespuesta.ToString();
                        if (oRespuesta == WSAFIPFE.fxAFIP.ResultadoSimpleType.R)
                        {
                            bResultado = false;
                        }
                        else
                        {
                            bResultado = true;
                        }
                    }
                    catch (SoapException exception7)
                    {
                        ProjectData.SetProjectError(exception7);
                        SoapException ex1 = exception7;
                        bResultado = false;
                        this.ifxErrorItemCantidad = 1;
                        int value = this.fxErrorItemCantidad;
                        this.afxError = new fxError[(value - 1) + 1];
                        int VB_t_i4_L9 = this.fxErrorItemCantidad - 1;
                        for (int ncontador = 0; ncontador <= VB_t_i4_L9; ncontador++)
                        {
                            this.afxError[ncontador].msg = ex1.Message;
                            this.afxError[ncontador].code = 0;
                        }
                        this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                        this.iUltimoNumeroError = 13;
                        ProjectData.ClearProjectError();
                    }
                    catch (Exception exception8)
                    {
                        ProjectData.SetProjectError(exception8);
                        Exception ex = exception8;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    this.strUltimoMensajeError = this.fxErrorMsg1;
                }
                return bResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return bResultado;
        }

        public bool fxInformarCAEANoUtilizadoPtoVta(string strCAEA, int iPtoVta)
        {
            this.ifxErrorItemCantidad = 0;
            this.ifxEventItemCantidad = 0;
            bool bResultado = true;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.strfxRespuestaResultado = "";
            if (this.Modo == modoFiscal.Test)
            {
                if (this.fxTicketValido)
                {
                    WSAFIPFE.fxAFIPTest.AuthRequestType autorizacion = new WSAFIPFE.fxAFIPTest.AuthRequestType();
                    try
                    {
                        autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                        autorizacion.token = this.fxtoken;
                        autorizacion.sign = this.fxsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.fxAFIPTest.ResultadoSimpleType oRespuesta = WSAFIPFE.fxAFIPTest.ResultadoSimpleType.A;
                        WSAFIPFE.fxAFIPTest.CodigoDescripcionType oEvento = null;
                        WSAFIPFE.fxAFIPTest.CodigoDescripcionType[] oErrores = null;
                        WSAFIPFE.fxAFIPTest.MTXCAService servicio = new WSAFIPFE.fxAFIPTest.MTXCAService();
                        long lCAEA = Conversions.ToLong(strCAEA);
                        short sPuntoVenta = (short) iPtoVta;
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        try
                        {
                            DateTime dFecha;
                            int nContador;
                            int value;
                            oRespuesta = servicio.informarCAEANoUtilizadoPtoVta(autorizacion, ref lCAEA, ref sPuntoVenta, ref dFecha, ref oErrores, ref oEvento);
                            this.dfxRespuestaFechaEmision = dFecha;
                            if (this.ArchivoXMLRecibido != "")
                            {
                                try
                                {
                                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIPTest.ResultadoSimpleType));
                                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                    writer1.Serialize((TextWriter) file1, oRespuesta);
                                    file1.Close();
                                }
                                catch (Exception exception2)
                                {
                                    ProjectData.SetProjectError(exception2);
                                    Exception miEx = exception2;
                                    this.strArchivoXMLError = miEx.Message;
                                    ProjectData.ClearProjectError();
                                }
                            }
                            if (oErrores == null)
                            {
                                this.ifxErrorItemCantidad = 0;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[(value - 1) + 1];
                                int VB_t_i4_L0 = this.fxErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.afxError[nContador].code = oErrores[nContador].codigo;
                                    this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                }
                            }
                            else
                            {
                                this.ifxErrorItemCantidad = oErrores.Length;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[(value - 1) + 1];
                                int VB_t_i4_L1 = this.fxErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.afxError[nContador].code = oErrores[nContador].codigo;
                                    this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                }
                            }
                            this.strUltimoMensajeError = this.fxErrorMsg1;
                            this.iUltimoNumeroError = this.fxErrorCode1;
                            if (oEvento == null)
                            {
                                this.ifxEventItemCantidad = 0;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            else
                            {
                                this.ifxEventItemCantidad = 1;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            this.strfxRespuestaResultado = oRespuesta.ToString();
                            if (oRespuesta == WSAFIPFE.fxAFIPTest.ResultadoSimpleType.R)
                            {
                                bResultado = false;
                            }
                            else
                            {
                                bResultado = true;
                            }
                        }
                        catch (SoapException exception3)
                        {
                            ProjectData.SetProjectError(exception3);
                            SoapException ex1 = exception3;
                            bResultado = false;
                            this.ifxErrorItemCantidad = 1;
                            int value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L4 = this.fxErrorItemCantidad - 1;
                            for (int ncontador = 0; ncontador <= VB_t_i4_L4; ncontador++)
                            {
                                this.afxError[ncontador].msg = ex1.Message;
                                this.afxError[ncontador].code = 0;
                            }
                            this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                            this.iUltimoNumeroError = 13;
                            ProjectData.ClearProjectError();
                        }
                        catch (Exception exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            Exception ex = exception4;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                        this.strUltimoMensajeError = this.fxErrorMsg1;
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.fxTicketValido)
            {
                WSAFIPFE.fxAFIP.AuthRequestType autorizacion = new WSAFIPFE.fxAFIP.AuthRequestType();
                try
                {
                    autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                    autorizacion.token = this.fxtoken;
                    autorizacion.sign = this.fxsign;
                }
                catch (Exception exception5)
                {
                    ProjectData.SetProjectError(exception5);
                    Exception ex = exception5;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.fxAFIP.ResultadoSimpleType oRespuesta = WSAFIPFE.fxAFIP.ResultadoSimpleType.A;
                    WSAFIPFE.fxAFIP.CodigoDescripcionType oEvento = null;
                    WSAFIPFE.fxAFIP.CodigoDescripcionType[] oErrores = null;
                    WSAFIPFE.fxAFIP.MTXCAService servicio = new WSAFIPFE.fxAFIP.MTXCAService();
                    long lCAEA = Conversions.ToLong(strCAEA);
                    short sPuntoVenta = (short) iPtoVta;
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.fxDireccionServicioURL;
                    try
                    {
                        DateTime dFecha;
                        int nContador;
                        int value;
                        oRespuesta = servicio.informarCAEANoUtilizadoPtoVta(autorizacion, ref lCAEA, ref sPuntoVenta, ref dFecha, ref oErrores, ref oEvento);
                        this.dfxRespuestaFechaEmision = dFecha;
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIP.ResultadoSimpleType));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception6)
                            {
                                ProjectData.SetProjectError(exception6);
                                Exception miEx = exception6;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        if (oErrores == null)
                        {
                            this.ifxErrorItemCantidad = 0;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L5 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.afxError[nContador].code = oErrores[nContador].codigo;
                                this.afxError[nContador].msg = oErrores[nContador].descripcion;
                            }
                        }
                        else
                        {
                            this.ifxErrorItemCantidad = oErrores.Length;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L6 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.afxError[nContador].code = oErrores[nContador].codigo;
                                this.afxError[nContador].msg = oErrores[nContador].descripcion;
                            }
                        }
                        this.strUltimoMensajeError = this.fxErrorMsg1;
                        this.iUltimoNumeroError = this.fxErrorCode1;
                        if (oEvento == null)
                        {
                            this.ifxEventItemCantidad = 0;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.fxEventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.afxEvent[nContador].code = oEvento.codigo;
                                this.afxEvent[nContador].msg = oEvento.descripcion;
                            }
                        }
                        else
                        {
                            this.ifxEventItemCantidad = 1;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L8 = this.fxEventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                            {
                                this.afxEvent[nContador].code = oEvento.codigo;
                                this.afxEvent[nContador].msg = oEvento.descripcion;
                            }
                        }
                        this.strfxRespuestaResultado = oRespuesta.ToString();
                        if (oRespuesta == WSAFIPFE.fxAFIP.ResultadoSimpleType.R)
                        {
                            bResultado = false;
                        }
                        else
                        {
                            bResultado = true;
                        }
                    }
                    catch (SoapException exception7)
                    {
                        ProjectData.SetProjectError(exception7);
                        SoapException ex1 = exception7;
                        bResultado = false;
                        this.ifxErrorItemCantidad = 1;
                        int value = this.fxErrorItemCantidad;
                        this.afxError = new fxError[(value - 1) + 1];
                        int VB_t_i4_L9 = this.fxErrorItemCantidad - 1;
                        for (int ncontador = 0; ncontador <= VB_t_i4_L9; ncontador++)
                        {
                            this.afxError[ncontador].msg = ex1.Message;
                            this.afxError[ncontador].code = 0;
                        }
                        this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                        this.iUltimoNumeroError = 13;
                        ProjectData.ClearProjectError();
                    }
                    catch (Exception exception8)
                    {
                        ProjectData.SetProjectError(exception8);
                        Exception ex = exception8;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    this.strUltimoMensajeError = this.fxErrorMsg1;
                }
                return bResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return bResultado;
        }

        public bool fxInformarComprobanteCAEA()
        {
            bool bResultado = true;
            this.fxIndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ifxListaItemCantidad = 0;
            this.ifxErrorItemCantidad = 0;
            this.ifxEventItemCantidad = 0;
            this.lfxRespuestaCAE = 0L;
            this.ifxRespuestaNumeroPuntoVenta = 0;
            this.lfxRespuestaNumeroComprobante = 0L;
            this.dfxRespuestaFechaEmision = new DateTime();
            this.ifxRespuestaCodigoTipoComprobante = 0;
            this.dfxRespuestaFechaVencimientoCAE = new DateTime();
            DateTime dFechaProceso = DateTime.Today;
            this.ifxCAEAItemCantidad = 1;
            this.aFxCAEAs = new fxCAEA[1];
            this.aFxCAEAs[0].strFxRespuestaCAEA = "";
            this.aFxCAEAs[0].iFxRespuestaCAEAPeriodo = 0;
            this.aFxCAEAs[0].iFxRespuestaCAEAOrden = 0;
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaDesde = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaHasta = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaTopeInforme = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaProceso = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            if (this.fxTicketValido & ((this.Modo == modoFiscal.Test) | ((this.Modo == modoFiscal.Fiscal) & this.fxLicenciaValidaCAEA)))
            {
                int nContador2;
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.fxAFIPTest.AuthRequestType autorizacion = new WSAFIPFE.fxAFIPTest.AuthRequestType();
                    try
                    {
                        autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                        autorizacion.token = this.fxtoken;
                        autorizacion.sign = this.fxsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.fxAFIPTest.ComprobanteType oPedido = new WSAFIPFE.fxAFIPTest.ComprobanteType();
                            WSAFIPFE.fxAFIPTest.MTXCAService servicio = new WSAFIPFE.fxAFIPTest.MTXCAService();
                            WSAFIPFE.fxAFIPTest.CodigoDescripcionType oEvento = null;
                            WSAFIPFE.fxAFIPTest.ComprobanteCAEAResponseType oRespuesta = null;
                            WSAFIPFE.fxAFIPTest.CodigoDescripcionType[] oObservaciones = null;
                            WSAFIPFE.fxAFIPTest.CodigoDescripcionType[] oErrores = null;
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            value = (int) Math.Round(this.fxItemCantidad);
                            WSAFIPFE.fxAFIPTest.ComprobanteAsociadoType[] oPedidoItemCbteAsocs = new WSAFIPFE.fxAFIPTest.ComprobanteAsociadoType[1];
                            WSAFIPFE.fxAFIPTest.SubtotalIVAType[] oPedidoItemIvas = new WSAFIPFE.fxAFIPTest.SubtotalIVAType[1];
                            WSAFIPFE.fxAFIPTest.OtroTributoType[] oPedidoItemTributos = new WSAFIPFE.fxAFIPTest.OtroTributoType[1];
                            WSAFIPFE.fxAFIPTest.ItemType[] oPedidoitems = new WSAFIPFE.fxAFIPTest.ItemType[1];
                            if (this.fxFechaServicioDesde == "20010101")
                            {
                                this.fxFechaServicioDesdeNO = true;
                            }
                            if (this.fxFechaServicioHasta == "20010101")
                            {
                                this.fxFechaServicioHastaNO = true;
                            }
                            if (this.fxFechaVencimiento == "20010101")
                            {
                                this.fxFechaVencimientoNO = true;
                            }
                            if (this.fxFechaVencimientoPago == "20010101")
                            {
                                this.fxFechaVencimientoPagoNO = true;
                            }
                            if (this.fxCodigoAutorizacion == "0")
                            {
                                this.fxCodigoAutorizacionNO = true;
                            }
                            if (this.fxCodigoTipoAutorizacion == "")
                            {
                                this.fxCodigoTipoAutorizacionNO = true;
                            }
                            oPedido.codigoAutorizacionSpecified = !this.fxCodigoAutorizacionNO;
                            oPedido.codigoTipoAutorizacionSpecified = !this.fxCodigoTipoAutorizacionNO;
                            oPedido.codigoTipoDocumentoSpecified = !this.fxCodigoTipoDocumentoNO;
                            oPedido.fechaServicioHastaSpecified = !this.fxFechaServicioHastaNO;
                            oPedido.fechaEmisionSpecified = !this.fxFechaEmisionNO;
                            oPedido.fechaServicioDesdeSpecified = !this.fxFechaServicioDesdeNO;
                            oPedido.fechaServicioHastaSpecified = !this.fxFechaServicioHastaNO;
                            oPedido.fechaVencimientoPagoSpecified = !this.fxFechaVencimientoPagoNO;
                            oPedido.fechaVencimientoSpecified = !this.fxFechaVencimientoNO;
                            oPedido.importeExentoSpecified = !this.fxImporteExentoNO;
                            oPedido.importeGravadoSpecified = !this.fxImporteGravadoNO;
                            oPedido.importeNoGravadoSpecified = !this.fxImporteNoGravadoNO;
                            oPedido.importeOtrosTributosSpecified = !this.fxImporteOtrosTributosNO;
                            oPedido.numeroDocumentoSpecified = !this.fxNumeroDocumentoNO;
                            oPedido.codigoAutorizacion = Conversions.ToLong(this.fxCodigoAutorizacion);
                            oPedido.codigoConcepto = (short) this.fxCodigoConcepto;
                            oPedido.codigoMoneda = this.fxCodigoMoneda;
                            if (this.fxCodigoTipoAutorizacion == "E")
                            {
                                oPedido.codigoTipoAutorizacion = WSAFIPFE.fxAFIPTest.CodigoTipoAutorizacionSimpleType.E;
                            }
                            else
                            {
                                oPedido.codigoTipoAutorizacion = WSAFIPFE.fxAFIPTest.CodigoTipoAutorizacionSimpleType.A;
                            }
                            oPedido.codigoTipoComprobante = (short) this.fxCodigoTipoComprobante;
                            oPedido.codigoTipoDocumento = (short) this.fxCodigoTipoDocumento;
                            oPedido.cotizacionMoneda = new decimal(this.fxCotizacionMoneda);
                            oPedido.fechaEmision = DateTime.ParseExact(this.fxFechaEmision, "yyyyMMdd", null);
                            oPedido.fechaServicioDesde = DateTime.ParseExact(this.fxFechaServicioDesde, "yyyyMMdd", null);
                            oPedido.fechaServicioHasta = DateTime.ParseExact(this.fxFechaServicioHasta, "yyyyMMdd", null);
                            oPedido.fechaVencimiento = DateTime.ParseExact(this.fxFechaVencimiento, "yyyyMMdd", null);
                            oPedido.fechaVencimientoPago = DateTime.ParseExact(this.fxFechaVencimientoPago, "yyyyMMdd", null);
                            oPedido.importeExento = new decimal(this.fxImporteExento);
                            oPedido.importeGravado = new decimal(this.fxImporteGravado);
                            oPedido.importeNoGravado = new decimal(this.fxImporteNoGravado);
                            oPedido.importeOtrosTributos = new decimal(this.fxImporteOtrosTributos);
                            oPedido.importeSubtotal = new decimal(this.fxImporteSubTotal);
                            oPedido.importeTotal = new decimal(this.fxImporteTotal);
                            oPedido.numeroComprobante = this.fxNumeroComprobante;
                            oPedido.numeroDocumento = Conversions.ToLong(this.fxNumeroDocumento);
                            oPedido.numeroPuntoVenta = (short) this.fxNumeroPuntoVenta;
                            oPedido.observaciones = this.fxObservaciones;
                            if (this.fxComprobantesAsociadosItemCantidad == 0)
                            {
                                oPedidoItemCbteAsocs = null;
                            }
                            else
                            {
                                oPedidoItemCbteAsocs = new WSAFIPFE.fxAFIPTest.ComprobanteAsociadoType[(this.fxComprobantesAsociadosItemCantidad - 1) + 1];
                                int VB_t_i4_L0 = this.fxComprobantesAsociadosItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L0; nContador2++)
                                {
                                    WSAFIPFE.fxAFIPTest.ComprobanteAsociadoType oPedidoItemCbteAsoc = new WSAFIPFE.fxAFIPTest.ComprobanteAsociadoType();
                                    this.fxIndiceItem = nContador2;
                                    oPedidoItemCbteAsoc.codigoTipoComprobante = (short) this.fxComprobanteAsosiadoCodigoTipoComprobante;
                                    oPedidoItemCbteAsoc.numeroComprobante = this.fxComprobanteAsosiadoNumeroComprobante;
                                    oPedidoItemCbteAsoc.numeroPuntoVenta = (short) this.fxComprobanteAsosiadoNumeroPuntoVenta;
                                    oPedidoItemCbteAsocs[nContador2] = oPedidoItemCbteAsoc;
                                }
                            }
                            oPedido.arrayComprobantesAsociados = oPedidoItemCbteAsocs;
                            if (this.fxSubTotalesItemCantidad == 0)
                            {
                                oPedidoItemIvas = null;
                            }
                            else
                            {
                                oPedidoItemIvas = new WSAFIPFE.fxAFIPTest.SubtotalIVAType[(this.fxSubTotalesItemCantidad - 1) + 1];
                                int VB_t_i4_L1 = this.fxSubTotalesItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L1; nContador2++)
                                {
                                    WSAFIPFE.fxAFIPTest.SubtotalIVAType oPedidoItemIva = new WSAFIPFE.fxAFIPTest.SubtotalIVAType();
                                    this.fxIndiceItem = nContador2;
                                    oPedidoItemIva.codigo = (short) this.fxSubTotalesIvaCodigo;
                                    oPedidoItemIva.importe = new decimal(this.fxSubTotalesIvaImporte);
                                    oPedidoItemIvas[nContador2] = oPedidoItemIva;
                                }
                            }
                            oPedido.arraySubtotalesIVA = oPedidoItemIvas;
                            if (this.fxOtrosTributosItemCantidad == 0)
                            {
                                oPedidoItemTributos = null;
                            }
                            else
                            {
                                oPedidoItemTributos = new WSAFIPFE.fxAFIPTest.OtroTributoType[(this.fxOtrosTributosItemCantidad - 1) + 1];
                                int VB_t_i4_L2 = this.fxOtrosTributosItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L2; nContador2++)
                                {
                                    WSAFIPFE.fxAFIPTest.OtroTributoType oPedidoItemTributo = new WSAFIPFE.fxAFIPTest.OtroTributoType();
                                    this.fxIndiceItem = nContador2;
                                    oPedidoItemTributo.baseImponible = new decimal(this.fxOtrosTributosBaseImponible);
                                    oPedidoItemTributo.codigo = (short) this.fxOtrosTributosCodigo;
                                    oPedidoItemTributo.descripcion = this.fxOtrosTributosDescripcion;
                                    oPedidoItemTributo.importe = new decimal(this.fxOtrosTributosImporte);
                                    oPedidoItemTributos[nContador2] = oPedidoItemTributo;
                                }
                            }
                            oPedido.arrayOtrosTributos = oPedidoItemTributos;
                            if (this.fxItemsItemCantidad == 0)
                            {
                                oPedidoitems = null;
                            }
                            else
                            {
                                oPedidoitems = new WSAFIPFE.fxAFIPTest.ItemType[(this.fxItemsItemCantidad - 1) + 1];
                                int VB_t_i4_L3 = this.fxItemsItemCantidad - 1;
                                for (nContador2 = 0; nContador2 <= VB_t_i4_L3; nContador2++)
                                {
                                    WSAFIPFE.fxAFIPTest.ItemType oPedidoitem = new WSAFIPFE.fxAFIPTest.ItemType();
                                    this.fxIndiceItem = nContador2;
                                    oPedidoitem.cantidadSpecified = !this.fxItemCantidadNO;
                                    oPedidoitem.importeBonificacionSpecified = !this.fxItemImporteBonificacionNO;
                                    oPedidoitem.importeIVASpecified = !this.fxItemImporteIvaNO;
                                    oPedidoitem.precioUnitarioSpecified = !this.fxItemPrecioUnitarioNO;
                                    oPedidoitem.unidadesMtxSpecified = !this.fxItemUnidadesMtxNO;
                                    oPedidoitem.cantidad = new decimal(this.fxItemCantidad);
                                    oPedidoitem.codigo = this.fxItemCodigo;
                                    oPedidoitem.codigoCondicionIVA = (short) this.fxItemCodigoCondicionIva;
                                    oPedidoitem.codigoMtx = this.fxItemCodigoMtx;
                                    oPedidoitem.codigoUnidadMedida = (short) this.fxItemCodigoUnidadMedida;
                                    oPedidoitem.descripcion = this.fxItemDescripcion;
                                    oPedidoitem.importeBonificacion = new decimal(this.fxItemImporteBonificacion);
                                    oPedidoitem.importeItem = new decimal(this.fxItemImporteItem);
                                    oPedidoitem.importeIVA = new decimal(this.fxItemImporteIva);
                                    oPedidoitem.precioUnitario = new decimal(this.fxItemPrecioUnitario);
                                    oPedidoitem.unidadesMtx = this.fxItemUnidadesMtx;
                                    oPedidoitems[nContador2] = oPedidoitem;
                                }
                            }
                            oPedido.arrayItems = oPedidoitems;
                            if (this.ArchivoXMLEnviado != "")
                            {
                                try
                                {
                                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIPTest.ComprobanteType));
                                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                                    writer1.Serialize((TextWriter) file1, oPedido);
                                    file1.Close();
                                }
                                catch (Exception exception2)
                                {
                                    ProjectData.SetProjectError(exception2);
                                    Exception miEx = exception2;
                                    this.strArchivoXMLError = miEx.Message;
                                    ProjectData.ClearProjectError();
                                }
                            }
                            WSAFIPFE.fxAFIPTest.ResultadoSimpleType oresultado = servicio.informarComprobanteCAEA(autorizacion, oPedido, ref dFechaProceso, ref oRespuesta, ref oObservaciones, ref oErrores, ref oEvento);
                            if (this.ArchivoXMLRecibido != "")
                            {
                                try
                                {
                                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIPTest.ComprobanteCAEAResponseType));
                                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                    writer1.Serialize((TextWriter) file1, oRespuesta);
                                    file1.Close();
                                }
                                catch (Exception exception3)
                                {
                                    ProjectData.SetProjectError(exception3);
                                    Exception miEx = exception3;
                                    this.strArchivoXMLError = miEx.Message;
                                    ProjectData.ClearProjectError();
                                }
                            }
                            if (oEvento == null)
                            {
                                this.ifxEventItemCantidad = 0;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[1];
                            }
                            else
                            {
                                this.ifxEventItemCantidad = 1;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L4 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            if (oErrores == null)
                            {
                                this.ifxErrorItemCantidad = 0;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[1];
                            }
                            else
                            {
                                this.ifxErrorItemCantidad = 1;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[(value - 1) + 1];
                                int VB_t_i4_L5 = this.fxErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                                {
                                    this.afxError[nContador].code = oErrores[nContador].codigo;
                                    this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                }
                            }
                            if (oObservaciones == null)
                            {
                                this.ifxObervacionItemCantidad = 0;
                                value = this.fxObervacionItemCantidad;
                                this.afxObervacion = new fxObservacion[1];
                            }
                            else
                            {
                                this.ifxObervacionItemCantidad = 1;
                                value = this.fxObervacionItemCantidad;
                                this.afxObervacion = new fxObservacion[(value - 1) + 1];
                                int VB_t_i4_L6 = this.fxObervacionItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                                {
                                    this.afxObervacion[nContador].codigo = oObservaciones[nContador].codigo;
                                    this.afxObervacion[nContador].descripcion = oObservaciones[nContador].descripcion;
                                }
                            }
                            this.strfxRespuestaResultado = oresultado.ToString();
                            if (oRespuesta == null)
                            {
                                return false;
                            }
                            this.fxIndiceItem = 0;
                            this.aFxCAEAs[this.fxIndiceItem].strFxRespuestaCAEA = Conversions.ToString(oRespuesta.CAEA);
                            this.ifxRespuestaNumeroPuntoVenta = oRespuesta.numeroPuntoVenta;
                            this.lfxRespuestaNumeroComprobante = oRespuesta.numeroComprobante;
                            this.dfxRespuestaFechaEmision = dFechaProceso;
                            this.ifxRespuestaCodigoTipoComprobante = oRespuesta.codigoTipoComprobante;
                            this.dfxRespuestaFechaVencimientoCAE = dFechaProceso;
                        }
                        catch (SoapException exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            SoapException ex1 = exception4;
                            bResultado = false;
                            this.strfxRespuestaResultado = "R";
                            this.gstrErrorMensaje = ex1.Message;
                            this.gstrErrorCodigo = ex1.Code.ToString();
                            this.ifxErrorItemCantidad = 1;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L7 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.afxError[nContador].msg = ex1.Message;
                                this.afxError[nContador].code = 0;
                            }
                            this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                            this.iUltimoNumeroError = 13;
                            ProjectData.ClearProjectError();
                        }
                        catch (Exception exception5)
                        {
                            ProjectData.SetProjectError(exception5);
                            Exception ex = exception5;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.fxAFIP.AuthRequestType autorizacion = new WSAFIPFE.fxAFIP.AuthRequestType();
                try
                {
                    autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                    autorizacion.token = this.fxtoken;
                    autorizacion.sign = this.fxsign;
                }
                catch (Exception exception6)
                {
                    ProjectData.SetProjectError(exception6);
                    Exception ex = exception6;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.fxAFIP.ComprobanteType oPedido = new WSAFIPFE.fxAFIP.ComprobanteType();
                        WSAFIPFE.fxAFIP.MTXCAService servicio = new WSAFIPFE.fxAFIP.MTXCAService();
                        WSAFIPFE.fxAFIP.CodigoDescripcionType oEvento = null;
                        WSAFIPFE.fxAFIP.ComprobanteCAEAResponseType oRespuesta = null;
                        WSAFIPFE.fxAFIP.CodigoDescripcionType[] oObservaciones = null;
                        WSAFIPFE.fxAFIP.CodigoDescripcionType[] oErrores = null;
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.fxDireccionServicioURL;
                        value = (int) Math.Round(this.fxItemCantidad);
                        WSAFIPFE.fxAFIP.ComprobanteAsociadoType[] oPedidoItemCbteAsocs = new WSAFIPFE.fxAFIP.ComprobanteAsociadoType[1];
                        WSAFIPFE.fxAFIP.SubtotalIVAType[] oPedidoItemIvas = new WSAFIPFE.fxAFIP.SubtotalIVAType[1];
                        WSAFIPFE.fxAFIP.OtroTributoType[] oPedidoItemTributos = new WSAFIPFE.fxAFIP.OtroTributoType[1];
                        WSAFIPFE.fxAFIP.ItemType[] oPedidoitems = new WSAFIPFE.fxAFIP.ItemType[1];
                        if (this.fxFechaServicioDesde == "20010101")
                        {
                            this.fxFechaServicioDesdeNO = true;
                        }
                        if (this.fxFechaServicioHasta == "20010101")
                        {
                            this.fxFechaServicioHastaNO = true;
                        }
                        if (this.fxFechaVencimiento == "20010101")
                        {
                            this.fxFechaVencimientoNO = true;
                        }
                        if (this.fxFechaVencimientoPago == "20010101")
                        {
                            this.fxFechaVencimientoPagoNO = true;
                        }
                        if (this.fxCodigoAutorizacion == "0")
                        {
                            this.fxCodigoAutorizacionNO = true;
                        }
                        if (this.fxCodigoTipoAutorizacion == "")
                        {
                            this.fxCodigoTipoAutorizacionNO = true;
                        }
                        oPedido.codigoAutorizacionSpecified = !this.fxCodigoAutorizacionNO;
                        oPedido.codigoTipoAutorizacionSpecified = !this.fxCodigoTipoAutorizacionNO;
                        oPedido.codigoTipoDocumentoSpecified = !this.fxCodigoTipoDocumentoNO;
                        oPedido.fechaServicioHastaSpecified = !this.fxFechaServicioHastaNO;
                        oPedido.fechaEmisionSpecified = !this.fxFechaEmisionNO;
                        oPedido.fechaServicioDesdeSpecified = !this.fxFechaServicioDesdeNO;
                        oPedido.fechaServicioHastaSpecified = !this.fxFechaServicioHastaNO;
                        oPedido.fechaVencimientoPagoSpecified = !this.fxFechaVencimientoPagoNO;
                        oPedido.fechaVencimientoSpecified = !this.fxFechaVencimientoNO;
                        oPedido.importeExentoSpecified = !this.fxImporteExentoNO;
                        oPedido.importeGravadoSpecified = !this.fxImporteGravadoNO;
                        oPedido.importeNoGravadoSpecified = !this.fxImporteNoGravadoNO;
                        oPedido.importeOtrosTributosSpecified = !this.fxImporteOtrosTributosNO;
                        oPedido.numeroDocumentoSpecified = !this.fxNumeroDocumentoNO;
                        oPedido.codigoAutorizacion = Conversions.ToLong(this.fxCodigoAutorizacion);
                        oPedido.codigoConcepto = (short) this.fxCodigoConcepto;
                        oPedido.codigoMoneda = this.fxCodigoMoneda;
                        if (this.fxCodigoTipoAutorizacion == "E")
                        {
                            oPedido.codigoTipoAutorizacion = WSAFIPFE.fxAFIP.CodigoTipoAutorizacionSimpleType.E;
                        }
                        else
                        {
                            oPedido.codigoTipoAutorizacion = WSAFIPFE.fxAFIP.CodigoTipoAutorizacionSimpleType.A;
                        }
                        oPedido.codigoTipoComprobante = (short) this.fxCodigoTipoComprobante;
                        oPedido.codigoTipoDocumento = (short) this.fxCodigoTipoDocumento;
                        oPedido.cotizacionMoneda = new decimal(this.fxCotizacionMoneda);
                        oPedido.fechaEmision = DateTime.ParseExact(this.fxFechaEmision, "yyyyMMdd", null);
                        oPedido.fechaServicioDesde = DateTime.ParseExact(this.fxFechaServicioDesde, "yyyyMMdd", null);
                        oPedido.fechaServicioHasta = DateTime.ParseExact(this.fxFechaServicioHasta, "yyyyMMdd", null);
                        oPedido.fechaVencimiento = DateTime.ParseExact(this.fxFechaVencimiento, "yyyyMMdd", null);
                        oPedido.fechaVencimientoPago = DateTime.ParseExact(this.fxFechaVencimientoPago, "yyyyMMdd", null);
                        oPedido.importeExento = new decimal(this.fxImporteExento);
                        oPedido.importeGravado = new decimal(this.fxImporteGravado);
                        oPedido.importeNoGravado = new decimal(this.fxImporteNoGravado);
                        oPedido.importeOtrosTributos = new decimal(this.fxImporteOtrosTributos);
                        oPedido.importeSubtotal = new decimal(this.fxImporteSubTotal);
                        oPedido.importeTotal = new decimal(this.fxImporteTotal);
                        oPedido.numeroComprobante = this.fxNumeroComprobante;
                        oPedido.numeroDocumento = Conversions.ToLong(this.fxNumeroDocumento);
                        oPedido.numeroPuntoVenta = (short) this.fxNumeroPuntoVenta;
                        oPedido.observaciones = this.fxObservaciones;
                        if (this.fxComprobantesAsociadosItemCantidad == 0)
                        {
                            oPedidoItemCbteAsocs = null;
                        }
                        else
                        {
                            oPedidoItemCbteAsocs = new WSAFIPFE.fxAFIP.ComprobanteAsociadoType[(this.fxComprobantesAsociadosItemCantidad - 1) + 1];
                            int VB_t_i4_L8 = this.fxComprobantesAsociadosItemCantidad - 1;
                            for (nContador2 = 0; nContador2 <= VB_t_i4_L8; nContador2++)
                            {
                                WSAFIPFE.fxAFIP.ComprobanteAsociadoType oPedidoItemCbteAsoc = new WSAFIPFE.fxAFIP.ComprobanteAsociadoType();
                                this.fxIndiceItem = nContador2;
                                oPedidoItemCbteAsoc.codigoTipoComprobante = (short) this.fxComprobanteAsosiadoCodigoTipoComprobante;
                                oPedidoItemCbteAsoc.numeroComprobante = this.fxComprobanteAsosiadoNumeroComprobante;
                                oPedidoItemCbteAsoc.numeroPuntoVenta = (short) this.fxComprobanteAsosiadoNumeroPuntoVenta;
                                oPedidoItemCbteAsocs[nContador2] = oPedidoItemCbteAsoc;
                            }
                        }
                        oPedido.arrayComprobantesAsociados = oPedidoItemCbteAsocs;
                        if (this.fxSubTotalesItemCantidad == 0)
                        {
                            oPedidoItemIvas = null;
                        }
                        else
                        {
                            oPedidoItemIvas = new WSAFIPFE.fxAFIP.SubtotalIVAType[(this.fxSubTotalesItemCantidad - 1) + 1];
                            int VB_t_i4_L9 = this.fxSubTotalesItemCantidad - 1;
                            for (nContador2 = 0; nContador2 <= VB_t_i4_L9; nContador2++)
                            {
                                WSAFIPFE.fxAFIP.SubtotalIVAType oPedidoItemIva = new WSAFIPFE.fxAFIP.SubtotalIVAType();
                                this.fxIndiceItem = nContador2;
                                oPedidoItemIva.codigo = (short) this.fxSubTotalesIvaCodigo;
                                oPedidoItemIva.importe = new decimal(this.fxSubTotalesIvaImporte);
                                oPedidoItemIvas[nContador2] = oPedidoItemIva;
                            }
                        }
                        oPedido.arraySubtotalesIVA = oPedidoItemIvas;
                        if (this.fxOtrosTributosItemCantidad == 0)
                        {
                            oPedidoItemTributos = null;
                        }
                        else
                        {
                            oPedidoItemTributos = new WSAFIPFE.fxAFIP.OtroTributoType[(this.fxOtrosTributosItemCantidad - 1) + 1];
                            int VB_t_i4_L10 = this.fxOtrosTributosItemCantidad - 1;
                            for (nContador2 = 0; nContador2 <= VB_t_i4_L10; nContador2++)
                            {
                                WSAFIPFE.fxAFIP.OtroTributoType oPedidoItemTributo = new WSAFIPFE.fxAFIP.OtroTributoType();
                                this.fxIndiceItem = nContador2;
                                oPedidoItemTributo.baseImponible = new decimal(this.fxOtrosTributosBaseImponible);
                                oPedidoItemTributo.codigo = (short) this.fxOtrosTributosCodigo;
                                oPedidoItemTributo.descripcion = this.fxOtrosTributosDescripcion;
                                oPedidoItemTributo.importe = new decimal(this.fxOtrosTributosImporte);
                                oPedidoItemTributos[nContador2] = oPedidoItemTributo;
                            }
                        }
                        oPedido.arrayOtrosTributos = oPedidoItemTributos;
                        if (this.fxItemsItemCantidad == 0)
                        {
                            oPedidoitems = null;
                        }
                        else
                        {
                            oPedidoitems = new WSAFIPFE.fxAFIP.ItemType[(this.fxItemsItemCantidad - 1) + 1];
                            int VB_t_i4_L11 = this.fxItemsItemCantidad - 1;
                            for (nContador2 = 0; nContador2 <= VB_t_i4_L11; nContador2++)
                            {
                                WSAFIPFE.fxAFIP.ItemType oPedidoitem = new WSAFIPFE.fxAFIP.ItemType();
                                this.fxIndiceItem = nContador2;
                                oPedidoitem.cantidadSpecified = !this.fxItemCantidadNO;
                                oPedidoitem.importeBonificacionSpecified = !this.fxItemImporteBonificacionNO;
                                oPedidoitem.importeIVASpecified = !this.fxItemImporteIvaNO;
                                oPedidoitem.precioUnitarioSpecified = !this.fxItemPrecioUnitarioNO;
                                oPedidoitem.unidadesMtxSpecified = !this.fxItemUnidadesMtxNO;
                                oPedidoitem.cantidad = new decimal(this.fxItemCantidad);
                                oPedidoitem.codigo = this.fxItemCodigo;
                                oPedidoitem.codigoCondicionIVA = (short) this.fxItemCodigoCondicionIva;
                                oPedidoitem.codigoMtx = this.fxItemCodigoMtx;
                                oPedidoitem.codigoUnidadMedida = (short) this.fxItemCodigoUnidadMedida;
                                oPedidoitem.descripcion = this.fxItemDescripcion;
                                oPedidoitem.importeBonificacion = new decimal(this.fxItemImporteBonificacion);
                                oPedidoitem.importeItem = new decimal(this.fxItemImporteItem);
                                oPedidoitem.importeIVA = new decimal(this.fxItemImporteIva);
                                oPedidoitem.precioUnitario = new decimal(this.fxItemPrecioUnitario);
                                oPedidoitem.unidadesMtx = this.fxItemUnidadesMtx;
                                oPedidoitems[nContador2] = oPedidoitem;
                            }
                        }
                        oPedido.arrayItems = oPedidoitems;
                        if (this.ArchivoXMLEnviado != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIP.ComprobanteType));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                                writer1.Serialize((TextWriter) file1, oPedido);
                                file1.Close();
                            }
                            catch (Exception exception7)
                            {
                                ProjectData.SetProjectError(exception7);
                                Exception miEx = exception7;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        WSAFIPFE.fxAFIP.ResultadoSimpleType oresultado = servicio.informarComprobanteCAEA(autorizacion, oPedido, ref dFechaProceso, ref oRespuesta, ref oObservaciones, ref oErrores, ref oEvento);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIP.ComprobanteCAEAResponseType));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception8)
                            {
                                ProjectData.SetProjectError(exception8);
                                Exception miEx = exception8;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        if (oEvento == null)
                        {
                            this.ifxEventItemCantidad = 0;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[1];
                        }
                        else
                        {
                            this.ifxEventItemCantidad = 1;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L12 = this.fxEventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L12; nContador++)
                            {
                                this.afxEvent[nContador].code = oEvento.codigo;
                                this.afxEvent[nContador].msg = oEvento.descripcion;
                            }
                        }
                        if (oErrores == null)
                        {
                            this.ifxErrorItemCantidad = 0;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[1];
                        }
                        else
                        {
                            this.ifxErrorItemCantidad = 1;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L13 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L13; nContador++)
                            {
                                this.afxError[nContador].code = oErrores[nContador].codigo;
                                this.afxError[nContador].msg = oErrores[nContador].descripcion;
                            }
                        }
                        if (oObservaciones == null)
                        {
                            this.ifxObervacionItemCantidad = 0;
                            value = this.fxObervacionItemCantidad;
                            this.afxObervacion = new fxObservacion[1];
                        }
                        else
                        {
                            this.ifxObervacionItemCantidad = 1;
                            value = this.fxObervacionItemCantidad;
                            this.afxObervacion = new fxObservacion[(value - 1) + 1];
                            int VB_t_i4_L14 = this.fxObervacionItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L14; nContador++)
                            {
                                this.afxObervacion[nContador].codigo = oObservaciones[nContador].codigo;
                                this.afxObervacion[nContador].descripcion = oObservaciones[nContador].descripcion;
                            }
                        }
                        this.strfxRespuestaResultado = oresultado.ToString();
                        if (oRespuesta == null)
                        {
                            return false;
                        }
                        this.fxIndiceItem = 0;
                        this.aFxCAEAs[this.fxIndiceItem].strFxRespuestaCAEA = Conversions.ToString(oRespuesta.CAEA);
                        this.ifxRespuestaNumeroPuntoVenta = oRespuesta.numeroPuntoVenta;
                        this.lfxRespuestaNumeroComprobante = oRespuesta.numeroComprobante;
                        this.dfxRespuestaFechaEmision = dFechaProceso;
                        this.ifxRespuestaCodigoTipoComprobante = oRespuesta.codigoTipoComprobante;
                        this.dfxRespuestaFechaVencimientoCAE = dFechaProceso;
                    }
                    catch (SoapException exception9)
                    {
                        ProjectData.SetProjectError(exception9);
                        SoapException ex1 = exception9;
                        bResultado = false;
                        this.strfxRespuestaResultado = "R";
                        this.gstrErrorMensaje = ex1.Message;
                        this.gstrErrorCodigo = ex1.Code.ToString();
                        this.ifxErrorItemCantidad = 1;
                        value = this.fxErrorItemCantidad;
                        this.afxError = new fxError[(value - 1) + 1];
                        int VB_t_i4_L15 = this.fxErrorItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L15; nContador++)
                        {
                            this.afxError[nContador].msg = ex1.Message;
                            this.afxError[nContador].code = 0;
                        }
                        this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                        this.iUltimoNumeroError = 13;
                        ProjectData.ClearProjectError();
                    }
                    catch (Exception exception10)
                    {
                        ProjectData.SetProjectError(exception10);
                        Exception ex = exception10;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            bResultado = false;
            if ((this.fxTicketValido & (this.Modo == modoFiscal.Fiscal)) & !this.fxLicenciaValidaCAEA)
            {
                this.strUltimoMensajeError = "Licencia no v\x00e1lida";
            }
            this.ccfxNoEspecificar = null;
            this.fxIndiceItem = 0;
            return bResultado;
        }

        public bool fxNoEspecificar(string strCampo, int nInformar)
        {
            strCampo = strCampo.ToUpper().Trim();
            bool bResultado = false;
            if (this.ccfxNoEspecificar == null)
            {
                this.ccfxNoEspecificar = new Collection();
            }
            if (nInformar == 0)
            {
                try
                {
                    this.ccfxNoEspecificar.Add(strCampo, strCampo, null, null);
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    ProjectData.ClearProjectError();
                }
                return bResultado;
            }
            if (nInformar == 2)
            {
                try
                {
                    if (Conversions.ToString(this.ccfxNoEspecificar[strCampo]) == strCampo)
                    {
                        bResultado = true;
                    }
                }
                catch (Exception exception2)
                {
                    ProjectData.SetProjectError(exception2);
                    Exception ex = exception2;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                return bResultado;
            }
            try
            {
                this.ccfxNoEspecificar.Remove(strCampo);
            }
            catch (Exception exception3)
            {
                ProjectData.SetProjectError(exception3);
                Exception ex = exception3;
                ProjectData.ClearProjectError();
            }
            return bResultado;
        }

        public bool fxNoEspecificarItem(string strCampo, int nInformar)
        {
            strCampo = strCampo.ToUpper().Trim();
            bool bResultado = false;
            if (this.aFxItems[this.fxIndiceItem].ccNoEspecificado == null)
            {
                this.aFxItems[this.fxIndiceItem].ccNoEspecificado = new Collection();
            }
            if (nInformar == 0)
            {
                try
                {
                    this.aFxItems[this.fxIndiceItem].ccNoEspecificado.Add(strCampo, strCampo, null, null);
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    ProjectData.ClearProjectError();
                }
                return bResultado;
            }
            if (nInformar == 2)
            {
                try
                {
                    if (Conversions.ToString(this.aFxItems[this.fxIndiceItem].ccNoEspecificado[strCampo]) == strCampo)
                    {
                        bResultado = true;
                    }
                }
                catch (Exception exception2)
                {
                    ProjectData.SetProjectError(exception2);
                    Exception ex = exception2;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                return bResultado;
            }
            try
            {
                this.aFxItems[this.fxIndiceItem].ccNoEspecificado.Remove(strCampo);
            }
            catch (Exception exception3)
            {
                ProjectData.SetProjectError(exception3);
                Exception ex = exception3;
                ProjectData.ClearProjectError();
            }
            return bResultado;
        }

        internal bool fxObtenerTicket()
        {
            this.strUltimaRespuestaXML = "";
            this.strUltimoPedidoXML = "";
            this.strUltimoPedidoFirmadoXML = "";
            this.Identificador = "0";
            bool bResultado = false;
            if (((this.fxLicenciaValidaCAE | this.fxLicenciaValidaCAEA) & this.get_LicenciaFechaValida(DateTime.Today)) | (this.Modo == modoFiscal.Test))
            {
                string strDireccionServicio = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
                if (this.Modo == modoFiscal.Fiscal)
                {
                    strDireccionServicio = this.DireccionServicio;
                }
                ticket oTicket = new ticket();
                if (this.ProxyUserName != "")
                {
                    oTicket.ProxyDomain = this.ProxyDomain;
                    oTicket.ProxyHost = this.ProxyHost;
                    oTicket.ProxyPort = this.ProxyPort;
                    oTicket.ProxyUserName = this.ProxyUserName;
                    oTicket.ProxyUserPassword = this.ProxyUserPassword;
                }
                string strServicio = "wsmtxca";
                try
                {
                    string strTicketRespuesta = oTicket.ObtenerLoginTicketResponse(strServicio, strDireccionServicio, this.RutaArchivoCertificado, this.Modo, Conversions.ToLong(this.Identificador));
                    this.strUltimoPedidoXML = oTicket.UltimoPedidoXML.OuterXml;
                    this.strUltimoPedidoFirmadoXML = oTicket.UltimoPedidoFirmadoXML;
                    this.strUltimaRespuestaXML = strTicketRespuesta;
                    if (oTicket.lastErrorNumero == 0)
                    {
                        this.Identificador = oTicket.UniqueId.ToString();
                        this.fxtoken = oTicket.Token;
                        this.fxsign = oTicket.Sign;
                        this.tfxTicketHora = oTicket.GenerationTime;
                        this.tfxTicketHoraVencimiento = oTicket.ExpirationTime;
                        this.strUltimoMensajeError = "";
                        this.iUltimoNumeroError = 0;
                        bResultado = true;
                    }
                    else
                    {
                        this.strUltimoMensajeError = oTicket.lastErrorMensaje;
                        this.iUltimoNumeroError = oTicket.lastErrorNumero;
                    }
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 1;
                    ProjectData.ClearProjectError();
                }
            }
            else
            {
                this.iUltimoNumeroError = 5;
                this.strUltimoMensajeError = "Licencia no v\x00e1lida";
            }
            this.bfxTicketValido = bResultado;
            return bResultado;
        }

        public bool fxObtenerTicketAcceso()
        {
            return this.fxObtenerTicket();
        }

        public bool fxSolicitarCAEA(int iPeriodo, int iOrden)
        {
            this.ifxErrorItemCantidad = 0;
            this.ifxEventItemCantidad = 0;
            bool bResultado = true;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.ifxCAEAItemCantidad = 1;
            this.aFxCAEAs = new fxCAEA[1];
            this.aFxCAEAs[0].strFxRespuestaCAEA = "";
            this.aFxCAEAs[0].iFxRespuestaCAEAPeriodo = 0;
            this.aFxCAEAs[0].iFxRespuestaCAEAOrden = 0;
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaDesde = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaHasta = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaTopeInforme = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.aFxCAEAs[0].dFxRespuestaCAEAFechaProceso = DateTime.ParseExact("20010101", "yyyyMMdd", null);
            this.fxIndiceItem = 0;
            if (this.Modo == modoFiscal.Test)
            {
                if (this.fxTicketValido)
                {
                    WSAFIPFE.fxAFIPTest.AuthRequestType autorizacion = new WSAFIPFE.fxAFIPTest.AuthRequestType();
                    try
                    {
                        autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                        autorizacion.token = this.fxtoken;
                        autorizacion.sign = this.fxsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.fxAFIPTest.SolicitudCAEAType oPedido = new WSAFIPFE.fxAFIPTest.SolicitudCAEAType();
                        WSAFIPFE.fxAFIPTest.CAEAResponseType oRespuesta = null;
                        WSAFIPFE.fxAFIPTest.CodigoDescripcionType oEvento = null;
                        WSAFIPFE.fxAFIPTest.CodigoDescripcionType[] oErrores = null;
                        WSAFIPFE.fxAFIPTest.MTXCAService servicio = new WSAFIPFE.fxAFIPTest.MTXCAService();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        short ord = (short) iOrden;
                        oPedido.orden = ord;
                        oPedido.periodo = iPeriodo;
                        if (this.ArchivoXMLEnviado != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIPTest.SolicitudCAEAType));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                                writer1.Serialize((TextWriter) file1, oPedido);
                                file1.Close();
                            }
                            catch (Exception exception2)
                            {
                                ProjectData.SetProjectError(exception2);
                                Exception miEx = exception2;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        try
                        {
                            int nContador;
                            int value;
                            oRespuesta = servicio.solicitarCAEA(autorizacion, oPedido, ref oErrores, ref oEvento);
                            if (this.ArchivoXMLRecibido != "")
                            {
                                try
                                {
                                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIPTest.CAEAResponseType));
                                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                    writer1.Serialize((TextWriter) file1, oRespuesta);
                                    file1.Close();
                                }
                                catch (Exception exception3)
                                {
                                    ProjectData.SetProjectError(exception3);
                                    Exception miEx = exception3;
                                    this.strArchivoXMLError = miEx.Message;
                                    ProjectData.ClearProjectError();
                                }
                            }
                            if (oErrores == null)
                            {
                                this.ifxErrorItemCantidad = 0;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[(value - 1) + 1];
                                int VB_t_i4_L0 = this.fxErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.afxError[nContador].code = oErrores[nContador].codigo;
                                    this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                }
                            }
                            else
                            {
                                this.ifxErrorItemCantidad = oErrores.Length;
                                value = this.fxErrorItemCantidad;
                                this.afxError = new fxError[(value - 1) + 1];
                                int VB_t_i4_L1 = this.fxErrorItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    this.afxError[nContador].code = oErrores[nContador].codigo;
                                    this.afxError[nContador].msg = oErrores[nContador].descripcion;
                                }
                            }
                            this.strUltimoMensajeError = this.fxErrorMsg1;
                            this.iUltimoNumeroError = this.fxErrorCode1;
                            if (oEvento == null)
                            {
                                this.ifxEventItemCantidad = 0;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L2 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            else
                            {
                                this.ifxEventItemCantidad = 1;
                                value = this.fxEventItemCantidad;
                                this.afxEvent = new f1Event[(value - 1) + 1];
                                int VB_t_i4_L3 = this.fxEventItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                                {
                                    this.afxEvent[nContador].code = oEvento.codigo;
                                    this.afxEvent[nContador].msg = oEvento.descripcion;
                                }
                            }
                            if (oRespuesta == null)
                            {
                                return false;
                            }
                            this.aFxCAEAs[this.fxIndiceItem].strFxRespuestaCAEA = Conversions.ToString(oRespuesta.CAEA);
                            this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAPeriodo = oRespuesta.periodo;
                            this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAOrden = oRespuesta.orden;
                            this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaHasta = oRespuesta.fechaHasta;
                            this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaDesde = oRespuesta.fechaDesde;
                            this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaTopeInforme = oRespuesta.fechaTopeInforme;
                            this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaProceso = oRespuesta.fechaProceso;
                            bResultado = true;
                        }
                        catch (SoapException exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            SoapException ex1 = exception4;
                            bResultado = false;
                            this.ifxErrorItemCantidad = 1;
                            int value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L4 = this.fxErrorItemCantidad - 1;
                            for (int ncontador = 0; ncontador <= VB_t_i4_L4; ncontador++)
                            {
                                this.afxError[ncontador].msg = ex1.Message;
                                this.afxError[ncontador].code = 0;
                            }
                            this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                            this.iUltimoNumeroError = 13;
                            ProjectData.ClearProjectError();
                        }
                        catch (Exception exception5)
                        {
                            ProjectData.SetProjectError(exception5);
                            Exception ex = exception5;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.fxTicketValido)
            {
                WSAFIPFE.fxAFIP.AuthRequestType autorizacion = new WSAFIPFE.fxAFIP.AuthRequestType();
                try
                {
                    autorizacion.cuitRepresentada = Conversions.ToLong(this.cuit);
                    autorizacion.token = this.fxtoken;
                    autorizacion.sign = this.fxsign;
                }
                catch (Exception exception6)
                {
                    ProjectData.SetProjectError(exception6);
                    Exception ex = exception6;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.fxAFIP.SolicitudCAEAType oPedido = new WSAFIPFE.fxAFIP.SolicitudCAEAType();
                    WSAFIPFE.fxAFIP.CAEAResponseType oRespuesta = null;
                    WSAFIPFE.fxAFIP.CodigoDescripcionType oEvento = null;
                    WSAFIPFE.fxAFIP.CodigoDescripcionType[] oErrores = null;
                    WSAFIPFE.fxAFIP.MTXCAService servicio = new WSAFIPFE.fxAFIP.MTXCAService();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.fxDireccionServicioURL;
                    short ord = (short) iOrden;
                    oPedido.orden = ord;
                    oPedido.periodo = iPeriodo;
                    if (this.ArchivoXMLEnviado != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIP.SolicitudCAEAType));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                            writer1.Serialize((TextWriter) file1, oPedido);
                            file1.Close();
                        }
                        catch (Exception exception7)
                        {
                            ProjectData.SetProjectError(exception7);
                            Exception miEx = exception7;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    try
                    {
                        int nContador;
                        int value;
                        oRespuesta = servicio.solicitarCAEA(autorizacion, oPedido, ref oErrores, ref oEvento);
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.fxAFIP.CAEAResponseType));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception8)
                            {
                                ProjectData.SetProjectError(exception8);
                                Exception miEx = exception8;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        if (oErrores == null)
                        {
                            this.ifxErrorItemCantidad = 0;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L5 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.afxError[nContador].code = oErrores[nContador].codigo;
                                this.afxError[nContador].msg = oErrores[nContador].descripcion;
                            }
                        }
                        else
                        {
                            this.ifxErrorItemCantidad = oErrores.Length;
                            value = this.fxErrorItemCantidad;
                            this.afxError = new fxError[(value - 1) + 1];
                            int VB_t_i4_L6 = this.fxErrorItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                this.afxError[nContador].code = oErrores[nContador].codigo;
                                this.afxError[nContador].msg = oErrores[nContador].descripcion;
                            }
                        }
                        this.strUltimoMensajeError = this.fxErrorMsg1;
                        this.iUltimoNumeroError = this.fxErrorCode1;
                        if (oEvento == null)
                        {
                            this.ifxEventItemCantidad = 0;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L7 = this.fxEventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                            {
                                this.afxEvent[nContador].code = oEvento.codigo;
                                this.afxEvent[nContador].msg = oEvento.descripcion;
                            }
                        }
                        else
                        {
                            this.ifxEventItemCantidad = 1;
                            value = this.fxEventItemCantidad;
                            this.afxEvent = new f1Event[(value - 1) + 1];
                            int VB_t_i4_L8 = this.fxEventItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                            {
                                this.afxEvent[nContador].code = oEvento.codigo;
                                this.afxEvent[nContador].msg = oEvento.descripcion;
                            }
                        }
                        if (oRespuesta == null)
                        {
                            return false;
                        }
                        this.aFxCAEAs[this.fxIndiceItem].strFxRespuestaCAEA = Conversions.ToString(oRespuesta.CAEA);
                        this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAPeriodo = oRespuesta.periodo;
                        this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAOrden = oRespuesta.orden;
                        this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaHasta = oRespuesta.fechaHasta;
                        this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaDesde = oRespuesta.fechaDesde;
                        this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaTopeInforme = oRespuesta.fechaTopeInforme;
                        this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaProceso = oRespuesta.fechaProceso;
                        bResultado = true;
                    }
                    catch (SoapException exception9)
                    {
                        ProjectData.SetProjectError(exception9);
                        SoapException ex1 = exception9;
                        bResultado = false;
                        this.ifxErrorItemCantidad = 1;
                        int value = this.fxErrorItemCantidad;
                        this.afxError = new fxError[(value - 1) + 1];
                        int VB_t_i4_L9 = this.fxErrorItemCantidad - 1;
                        for (int ncontador = 0; ncontador <= VB_t_i4_L9; ncontador++)
                        {
                            this.afxError[ncontador].msg = ex1.Message;
                            this.afxError[ncontador].code = 0;
                        }
                        this.strUltimoMensajeError = ex1.Message + "." + ex1.Code.ToString();
                        this.iUltimoNumeroError = 13;
                        ProjectData.ClearProjectError();
                    }
                    catch (Exception exception10)
                    {
                        ProjectData.SetProjectError(exception10);
                        Exception ex = exception10;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return bResultado;
        }

        public bool fxSolicitarCAEAS(string strPeriodo, string strOrden)
        {
            int iPeriodo = Conversions.ToInteger(strPeriodo);
            int iOrden = Conversions.ToInteger(strOrden);
            return this.fxSolicitarCAEA(iPeriodo, iOrden);
        }

        public bool gConfirmarCTG(string strcuitRepresentado, string strNumeroCTG, string strNumeroCartaPorte, string strPesoNetoCarga, string strCuitTransportista)
        {
            bool bResultado = true;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.gstrErrorCodigo = "";
            this.gstrErrorMensaje = "";
            this.gstrRespuestaObservaciones = "";
            this.glRespuestaCodigoTransaccion = 0L;
            if (this.Modo == modoFiscal.Test)
            {
                AuthRequest autorizacion = new AuthRequest();
                try
                {
                    autorizacion.cuitRepresentado = Conversions.ToLong(strcuitRepresentado);
                    autorizacion.token = this.gtoken;
                    autorizacion.sign = this.gsign;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (!bResultado)
                {
                    return bResultado;
                }
                try
                {
                    ConfirmarCTGRequest oPedido = new ConfirmarCTGRequest();
                    CTGService servicio = new CTGService();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    oPedido.cuitTransportista = Conversions.ToLong(strCuitTransportista);
                    oPedido.numeroCartaDePorte = Conversions.ToLong(strNumeroCartaPorte);
                    oPedido.numeroCTG = Conversions.ToLong(strNumeroCTG);
                    oPedido.pesoNetoCarga = Conversions.ToLong(strPesoNetoCarga);
                    if (this.ArchivoXMLEnviado != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(ConfirmarCTGRequest));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                            writer1.Serialize((TextWriter) file1, oPedido);
                            file1.Close();
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception miEx = exception2;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    ConfirmarCTGResponse oRespuesta = servicio.confirmarCTG(autorizacion, oPedido);
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 0x65;
                        this.strUltimoMensajeError = "sin respuesta";
                    }
                    else
                    {
                        this.gstrRespuestaObservaciones = oRespuesta.observaciones;
                        this.glRespuestaCodigoTransaccion = oRespuesta.codigoTransaccion;
                    }
                    if (this.ArchivoXMLRecibido == "")
                    {
                        return bResultado;
                    }
                    try
                    {
                        XmlSerializer writer1 = new XmlSerializer(typeof(ConfirmarCTGResponse));
                        StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                        writer1.Serialize((TextWriter) file1, oRespuesta);
                        file1.Close();
                    }
                    catch (Exception exception3)
                    {
                        ProjectData.SetProjectError(exception3);
                        Exception miEx = exception3;
                        this.strArchivoXMLError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                }
                catch (SoapException exception4)
                {
                    ProjectData.SetProjectError(exception4);
                    SoapException ex1 = exception4;
                    bResultado = false;
                    this.gstrErrorMensaje = ex1.Message;
                    this.gstrErrorCodigo = ex1.Code.ToString();
                    ProjectData.ClearProjectError();
                }
                catch (Exception exception5)
                {
                    ProjectData.SetProjectError(exception5);
                    Exception ex = exception5;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 7;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        public bool gDummy()
        {
            bool bResultado = true;
            this.strgRespuestaDummyDbServer = "";
            this.strgRespuestaDummyAuthServer = "";
            this.strgRespuestaDummyDbServer = "";
            if ((this.Modo == modoFiscal.Test) && bResultado)
            {
                try
                {
                    CTGService servicio = new CTGService();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    WSAFIPFE.gAFIPTest.DummyResponse oRespuesta = servicio.dummy();
                    this.strgRespuestaDummyDbServer = oRespuesta.dbserver;
                    this.strgRespuestaDummyAuthServer = oRespuesta.authserver;
                    this.strgRespuestaDummyAppServer = oRespuesta.appserver;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 6;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        public bool gObtenerCosechas()
        {
            bool bResultado = true;
            this.igCosechaItemCantidad = 0;
            if (this.Modo == modoFiscal.Test)
            {
                AuthRequest autorizacion = new AuthRequest();
                try
                {
                    autorizacion.cuitRepresentado = Conversions.ToLong(this.cuit);
                    autorizacion.token = this.gtoken;
                    autorizacion.sign = this.gsign;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (!bResultado)
                {
                    return bResultado;
                }
                try
                {
                    CTGService servicio = new CTGService();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    ArrayCosechasResponse[] oRespuesta = servicio.obtenerCosechas(autorizacion);
                    if (oRespuesta == null)
                    {
                        return false;
                    }
                    this.gCosechaItemCantidad = oRespuesta.Length;
                    int VB_t_i4_L0 = this.gCosechaItemCantidad - 1;
                    for (int nIndex = 0; nIndex <= VB_t_i4_L0; nIndex++)
                    {
                        this.agCosecha[nIndex].codigoCosecha = oRespuesta[nIndex].codigoCosecha;
                        this.agCosecha[nIndex].descripcionCosecha = oRespuesta[nIndex].descripcionCosecha;
                    }
                }
                catch (Exception exception2)
                {
                    ProjectData.SetProjectError(exception2);
                    Exception ex = exception2;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 6;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        public bool gObtenerEspecies()
        {
            bool bResultado = true;
            this.igEspecieItemCantidad = 0;
            if (this.Modo == modoFiscal.Test)
            {
                AuthRequest autorizacion = new AuthRequest();
                try
                {
                    autorizacion.cuitRepresentado = Conversions.ToLong(this.cuit);
                    autorizacion.token = this.gtoken;
                    autorizacion.sign = this.gsign;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (!bResultado)
                {
                    return bResultado;
                }
                try
                {
                    CTGService servicio = new CTGService();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    ArrayEspeciesResponse[] oRespuesta = servicio.obtenerEspecies(autorizacion);
                    if (oRespuesta == null)
                    {
                        return false;
                    }
                    this.gEspecieItemCantidad = oRespuesta.Length;
                    int VB_t_i4_L0 = this.gEspecieItemCantidad - 1;
                    for (int nIndex = 0; nIndex <= VB_t_i4_L0; nIndex++)
                    {
                        this.agEspecie[nIndex].codigoEspecie = oRespuesta[nIndex].codigoEspecie;
                        this.agEspecie[nIndex].descripcionEspecie = oRespuesta[nIndex].descripcionEspecie;
                    }
                }
                catch (Exception exception2)
                {
                    ProjectData.SetProjectError(exception2);
                    Exception ex = exception2;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 6;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        public bool gObtenerLocalidadesPorCodigoProvincia(int iCodigoProvincia)
        {
            bool bResultado = true;
            this.igLocalidadItemCantidad = 0;
            if (this.Modo == modoFiscal.Test)
            {
                AuthRequest autorizacion = new AuthRequest();
                try
                {
                    autorizacion.cuitRepresentado = Conversions.ToLong(this.cuit);
                    autorizacion.token = this.gtoken;
                    autorizacion.sign = this.gsign;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (!bResultado)
                {
                    return bResultado;
                }
                try
                {
                    ObtenerLocalidadesPorCodigoProvinciaRequest oPedido = new ObtenerLocalidadesPorCodigoProvinciaRequest();
                    CTGService servicio = new CTGService();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    oPedido.codigoProvincia = (sbyte) iCodigoProvincia;
                    ArrayLocalidadesPorCodigoProvinciaResponse[] oRespuesta = servicio.obtenerLocalidadesPorCodigoProvincia(autorizacion, oPedido);
                    if (oRespuesta == null)
                    {
                        return false;
                    }
                    this.gLocalidadItemCantidad = oRespuesta.Length;
                    int VB_t_i4_L0 = this.gLocalidadItemCantidad - 1;
                    for (int nIndex = 0; nIndex <= VB_t_i4_L0; nIndex++)
                    {
                        this.agLocalidad[nIndex].codigoLocalidad = oRespuesta[nIndex].codigoLocalidad;
                        this.agLocalidad[nIndex].descripcionLocalidad = oRespuesta[nIndex].descripcionLocalidad;
                    }
                }
                catch (Exception exception2)
                {
                    ProjectData.SetProjectError(exception2);
                    Exception ex = exception2;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 6;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        public bool gObtenerLocalidadesTodas()
        {
            int nI = 0;
            bool bResultado = true;
            this.igLocalidadTodasItemCantidad = 0;
            if (this.Modo == modoFiscal.Test)
            {
                AuthRequest autorizacion = new AuthRequest();
                try
                {
                    autorizacion.cuitRepresentado = Conversions.ToLong(this.cuit);
                    autorizacion.token = this.gtoken;
                    autorizacion.sign = this.gsign;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (!bResultado)
                {
                    return bResultado;
                }
                try
                {
                    CTGService servicio = new CTGService();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    ArrayProvinciasResponse[] oRespuesta = servicio.obtenerProvincias(autorizacion);
                    if (oRespuesta == null)
                    {
                        return false;
                    }
                    int VB_t_i4_L0 = oRespuesta.Length - 1;
                    for (int nIndex = 0; nIndex <= VB_t_i4_L0; nIndex++)
                    {
                        sbyte nCodigoProvincia = oRespuesta[nIndex].codigoProvincia;
                        ObtenerLocalidadesPorCodigoProvinciaRequest oPedido = new ObtenerLocalidadesPorCodigoProvinciaRequest();
                        oPedido.codigoProvincia = nCodigoProvincia;
                        ArrayLocalidadesPorCodigoProvinciaResponse[] oRespuesta2 = servicio.obtenerLocalidadesPorCodigoProvincia(autorizacion, oPedido);
                        if (oRespuesta2 == null)
                        {
                            bResultado = false;
                        }
                        else
                        {
                            this.gLocalidadTodasItemCantidad += oRespuesta2.Length;
                            int VB_t_i4_L1 = oRespuesta2.Length - 1;
                            for (int nIndex2 = 0; nIndex2 <= VB_t_i4_L1; nIndex2++)
                            {
                                this.agLocalidadTodas[nI].codigoLocalidad = oRespuesta2[nIndex2].codigoLocalidad;
                                this.agLocalidadTodas[nI].descripcionLocalidad = oRespuesta2[nIndex2].descripcionLocalidad;
                                this.agLocalidadTodas[nI].codigoProvincia = oRespuesta[nIndex].codigoProvincia;
                                this.agLocalidadTodas[nI].descripcionProvincia = oRespuesta[nIndex].descripcionProvincia;
                                nI++;
                            }
                        }
                    }
                }
                catch (Exception exception2)
                {
                    ProjectData.SetProjectError(exception2);
                    Exception ex = exception2;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 6;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        public bool gObtenerLocalidadesTodasLiberar()
        {
            this.igLocalidadTodasItemCantidad = 0;
            return true;
        }

        public bool gObtenerProvincias()
        {
            bool bResultado = true;
            this.igProvinciaItemCantidad = 0;
            if (this.Modo == modoFiscal.Test)
            {
                AuthRequest autorizacion = new AuthRequest();
                try
                {
                    autorizacion.cuitRepresentado = Conversions.ToLong(this.cuit);
                    autorizacion.token = this.gtoken;
                    autorizacion.sign = this.gsign;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (!bResultado)
                {
                    return bResultado;
                }
                try
                {
                    CTGService servicio = new CTGService();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    ArrayProvinciasResponse[] oRespuesta = servicio.obtenerProvincias(autorizacion);
                    if (oRespuesta == null)
                    {
                        return false;
                    }
                    this.gProvinciaItemCantidad = oRespuesta.Length;
                    int VB_t_i4_L0 = this.gProvinciaItemCantidad - 1;
                    for (int nIndex = 0; nIndex <= VB_t_i4_L0; nIndex++)
                    {
                        this.agProvincia[nIndex].codigoProvincia = oRespuesta[nIndex].codigoProvincia;
                        this.agProvincia[nIndex].descripcionProvincia = oRespuesta[nIndex].descripcionProvincia;
                    }
                }
                catch (Exception exception2)
                {
                    ProjectData.SetProjectError(exception2);
                    Exception ex = exception2;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 6;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        internal bool gObtenerTicket()
        {
            this.strUltimaRespuestaXML = "";
            this.strUltimoPedidoXML = "";
            this.strUltimoPedidoFirmadoXML = "";
            this.Identificador = "0";
            bool bResultado = false;
            if ((this.gLicenciaValida & this.get_LicenciaFechaValida(DateTime.Today)) | (this.Modo == modoFiscal.Test))
            {
                string strDireccionServicio = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
                if (this.Modo == modoFiscal.Fiscal)
                {
                    strDireccionServicio = this.DireccionServicio;
                }
                ticket oTicket = new ticket();
                if (this.ProxyUserName != "")
                {
                    oTicket.ProxyDomain = this.ProxyDomain;
                    oTicket.ProxyHost = this.ProxyHost;
                    oTicket.ProxyPort = this.ProxyPort;
                    oTicket.ProxyUserName = this.ProxyUserName;
                    oTicket.ProxyUserPassword = this.ProxyUserPassword;
                }
                string strServicio = "wsctg";
                try
                {
                    string strTicketRespuesta = oTicket.ObtenerLoginTicketResponse(strServicio, strDireccionServicio, this.RutaArchivoCertificado, this.Modo, Conversions.ToLong(this.Identificador));
                    this.strUltimoPedidoXML = oTicket.UltimoPedidoXML.OuterXml;
                    this.strUltimoPedidoFirmadoXML = oTicket.UltimoPedidoFirmadoXML;
                    this.strUltimaRespuestaXML = strTicketRespuesta;
                    if (oTicket.lastErrorNumero == 0)
                    {
                        this.Identificador = oTicket.UniqueId.ToString();
                        this.gtoken = oTicket.Token;
                        this.gsign = oTicket.Sign;
                        this.tgTicketHora = oTicket.GenerationTime;
                        this.tgTicketHoraVencimiento = oTicket.ExpirationTime;
                        this.strUltimoMensajeError = "";
                        this.iUltimoNumeroError = 0;
                        bResultado = true;
                    }
                    else
                    {
                        this.strUltimoMensajeError = oTicket.lastErrorMensaje;
                        this.iUltimoNumeroError = oTicket.lastErrorNumero;
                    }
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 1;
                    ProjectData.ClearProjectError();
                }
            }
            else
            {
                this.iUltimoNumeroError = 5;
                this.strUltimoMensajeError = "Licencia no v\x00e1lida";
            }
            this.bgTicketValido = bResultado;
            return bResultado;
        }

        public bool gObtenerTicketAcceso()
        {
            return this.gObtenerTicket();
        }

        public bool gSolicitarCTG()
        {
            bool bResultado = true;
            this.glRespuestaNumeroCartaPorte = 0L;
            this.glRespuestaNumeroCTG = 0L;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.gstrErrorCodigo = "";
            this.gstrErrorMensaje = "";
            if (this.Modo == modoFiscal.Test)
            {
                AuthRequest autorizacion = new AuthRequest();
                try
                {
                    autorizacion.cuitRepresentado = Conversions.ToLong(this.gCTGCuitRepresentado);
                    autorizacion.token = this.gtoken;
                    autorizacion.sign = this.gsign;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (!bResultado)
                {
                    return bResultado;
                }
                try
                {
                    SolicitarCTGRequest oPedido = new SolicitarCTGRequest();
                    CTGService servicio = new CTGService();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    oPedido.cantHoras = this.gCTGCantHoras;
                    oPedido.codigoCosecha = this.gCTGCodigoCosecha;
                    oPedido.codigoEspecie = Conversions.ToInteger(this.gCTGCodigoEspecie);
                    oPedido.codigoLocalidadDestino = this.gCTGCodigoLocalidadDestino;
                    oPedido.codigoLocalidadOrigen = this.gCTGCodigoLocalidadOrigen;
                    oPedido.cuitDestinatario = Conversions.ToLong(this.gCTGCuitDestinatario);
                    oPedido.cuitDestino = Conversions.ToLong(this.gCTGCuitDestino);
                    oPedido.cuitRemitenteComercial = Conversions.ToLong(this.gCTGCuitRemitenteComercial);
                    oPedido.cuitTransportista = Conversions.ToLong(this.gCTGCuitTrasnportista);
                    oPedido.numeroCartaDePorte = Conversions.ToLong(this.gCTGNumeroCartaPorte);
                    oPedido.patenteVehiculo = this.gCTGPatenteVehiculo;
                    oPedido.pesoNetoCarga = Conversions.ToLong(this.gCTGPesoNetoCarga);
                    if (this.ArchivoXMLEnviado != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(SolicitarCTGRequest));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                            writer1.Serialize((TextWriter) file1, oPedido);
                            file1.Close();
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception miEx = exception2;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    SolicitarCTGResponse oRespuesta = servicio.solicitarCTG(autorizacion, oPedido);
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 0x65;
                        this.strUltimoMensajeError = "sin respuesta";
                    }
                    else
                    {
                        this.glRespuestaNumeroCartaPorte = oRespuesta.numeroCartaDePorte;
                        this.glRespuestaNumeroCTG = oRespuesta.numeroCTG;
                    }
                    if (this.ArchivoXMLRecibido == "")
                    {
                        return bResultado;
                    }
                    try
                    {
                        XmlSerializer writer1 = new XmlSerializer(typeof(SolicitarCTGResponse));
                        StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                        writer1.Serialize((TextWriter) file1, oRespuesta);
                        file1.Close();
                    }
                    catch (Exception exception3)
                    {
                        ProjectData.SetProjectError(exception3);
                        Exception miEx = exception3;
                        this.strArchivoXMLError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                }
                catch (SoapException exception4)
                {
                    ProjectData.SetProjectError(exception4);
                    SoapException ex1 = exception4;
                    bResultado = false;
                    this.gstrErrorMensaje = ex1.Message;
                    this.gstrErrorCodigo = ex1.Code.ToString();
                    ProjectData.ClearProjectError();
                }
                catch (Exception exception5)
                {
                    ProjectData.SetProjectError(exception5);
                    Exception ex = exception5;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 7;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        public bool iniciar(modoFiscal iModoFiscal, string cuitTexto, string textoRutaArchivoCertificado, string textoRutaArchivoLicencia)
        {
            bool bResultado;
            if (iModoFiscal == modoFiscal.Fiscal)
            {
                bResultado = this.LeerLicencia(textoRutaArchivoLicencia);
            }
            else
            {
                bResultado = this.LeerLicencia(textoRutaArchivoLicencia);
                bResultado = true;
            }
            this.iModo = iModoFiscal;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.strCuit = cuitTexto;
            this.RutaArchivoCertificado = textoRutaArchivoCertificado;
            this.bbTicketValido = false;
            this.bsTicketValido = false;
            this.lTicketValido = false;
            this.iIndice = 0;
            return bResultado;
        }

        public bool IniciarYActivar(int iModoFiscal, string cuitTexto, string textoRutaArchivoCertificado, string textoRutaArchivoLicencia, string strGMail, string strPassword)
        {
            bool bResultado = false;
            if (this.LeerLicencia(textoRutaArchivoLicencia))
            {
                bResultado = true;
            }
            else if (strGMail != "")
            {
                bResultado = this.ActivarLicencia(cuitTexto, textoRutaArchivoLicencia, strGMail, strPassword);
                if (bResultado)
                {
                    bResultado = this.LeerLicencia(textoRutaArchivoLicencia);
                }
            }
            this.iModo = (modoFiscal) iModoFiscal;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.strCuit = cuitTexto;
            this.RutaArchivoCertificado = textoRutaArchivoCertificado;
            this.bbTicketValido = false;
            this.bxTicketValido = false;
            this.bsTicketValido = false;
            this.lTicketValido = false;
            this.boTicketValido = false;
            this.bgTicketValido = false;
            this.iIndice = 0;
            return bResultado;
        }

        public bool LeerLicencia(object textoRutaArchivoLicencia)
        {
            this.oLicencia = null;
            try
            {
                SCActivador activador = new SCActivador();
                if (activador.LeerLicencia(Conversions.ToString(textoRutaArchivoLicencia)))
                {
                    this.oLicencia = activador.licencia;
                    return true;
                }
                if (activador.LeerLicenciaJ(Conversions.ToString(textoRutaArchivoLicencia)))
                {
                    this.oLicencia = activador.licencia;
                    return true;
                }
                this.strUltimoMensajeError = activador.UltimoMensajeError;
                this.iUltimoNumeroError = activador.UltimoNumeroError;
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                Exception ex = exception1;
                this.iUltimoNumeroError = 6;
                this.strUltimoMensajeError = ex.Message;
                ProjectData.ClearProjectError();
            }
            return false;
        }

        private bool LeerLicenciaJ(object textoRutaArchivoLicencia)
        {
            this.oLicencia = null;
            try
            {
                SCActivador activador = new SCActivador();
                if (activador.LeerLicenciaJ(Conversions.ToString(textoRutaArchivoLicencia)))
                {
                    this.oLicencia = activador.licencia;
                    return true;
                }
                this.strUltimoMensajeError = activador.UltimoMensajeError;
                this.iUltimoNumeroError = activador.UltimoNumeroError;
            }
            catch (Exception exception1)
            {
                ProjectData.SetProjectError(exception1);
                Exception ex = exception1;
                this.iUltimoNumeroError = 6;
                this.strUltimoMensajeError = ex.Message;
                ProjectData.ClearProjectError();
            }
            return false;
        }

        public bool logincms()
        {
            return this.ObtenerTicket();
        }

        internal bool ObtenerTicket()
        {
            this.strUltimaRespuestaXML = "";
            this.strUltimoPedidoXML = "";
            this.strUltimoPedidoFirmadoXML = "";
            this.Identificador = "0";
            bool bResultado = false;
            if ((this.LicenciaValida & this.get_LicenciaFechaValida(DateTime.Today)) | (this.Modo == modoFiscal.Test))
            {
                string strDireccionServicio = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
                if (this.Modo == modoFiscal.Fiscal)
                {
                    strDireccionServicio = this.DireccionServicio;
                }
                ticket oTicket = new ticket();
                if (this.ProxyUserName != "")
                {
                    oTicket.ProxyDomain = this.ProxyDomain;
                    oTicket.ProxyHost = this.ProxyHost;
                    oTicket.ProxyPort = this.ProxyPort;
                    oTicket.ProxyUserName = this.ProxyUserName;
                    oTicket.ProxyUserPassword = this.ProxyUserPassword;
                }
                try
                {
                    string strTicketRespuesta = oTicket.ObtenerLoginTicketResponse(this.NombreServicio, strDireccionServicio, this.RutaArchivoCertificado, this.Modo, Conversions.ToLong(this.Identificador));
                    this.strUltimoPedidoXML = oTicket.UltimoPedidoXML.OuterXml;
                    this.strUltimoPedidoFirmadoXML = oTicket.UltimoPedidoFirmadoXML;
                    this.strUltimaRespuestaXML = strTicketRespuesta;
                    if (oTicket.lastErrorNumero == 0)
                    {
                        this.Identificador = oTicket.UniqueId.ToString();
                        this.token = oTicket.Token;
                        this.sign = oTicket.Sign;
                        this.tTicketHora = oTicket.GenerationTime;
                        this.tTicketHoraVencimiento = oTicket.ExpirationTime;
                        this.strUltimoMensajeError = "";
                        this.iUltimoNumeroError = 0;
                        bResultado = true;
                    }
                    else
                    {
                        this.strUltimoMensajeError = oTicket.lastErrorMensaje;
                        this.iUltimoNumeroError = oTicket.lastErrorNumero;
                    }
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 1;
                    ProjectData.ClearProjectError();
                }
                this.lTicketValido = bResultado;
                return bResultado;
            }
            this.iUltimoNumeroError = 0x37;
            this.strUltimoMensajeError = "Licencia no v\x00e1lida";
            return bResultado;
        }

        public bool ObtenerTicketAcceso()
        {
            return this.ObtenerTicket();
        }

        internal bool oObtenerTicket()
        {
            this.strUltimaRespuestaXML = "";
            this.strUltimoPedidoXML = "";
            this.strUltimoPedidoFirmadoXML = "";
            this.Identificador = "0";
            bool bResultado = false;
            if ((this.OLicenciaValida & this.get_LicenciaFechaValida(DateTime.Today)) | (this.Modo == modoFiscal.Test))
            {
                string strDireccionServicio = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
                if (this.Modo == modoFiscal.Fiscal)
                {
                    strDireccionServicio = this.DireccionServicio;
                }
                ticket oTicket = new ticket();
                if (this.ProxyUserName != "")
                {
                    oTicket.ProxyDomain = this.ProxyDomain;
                    oTicket.ProxyHost = this.ProxyHost;
                    oTicket.ProxyPort = this.ProxyPort;
                    oTicket.ProxyUserName = this.ProxyUserName;
                    oTicket.ProxyUserPassword = this.ProxyUserPassword;
                }
                string strServicio = "wsoncca";
                try
                {
                    string strTicketRespuesta = oTicket.ObtenerLoginTicketResponse(strServicio, strDireccionServicio, this.RutaArchivoCertificado, this.Modo, Conversions.ToLong(this.Identificador));
                    this.strUltimoPedidoXML = oTicket.UltimoPedidoXML.OuterXml;
                    this.strUltimoPedidoFirmadoXML = oTicket.UltimoPedidoFirmadoXML;
                    this.strUltimaRespuestaXML = strTicketRespuesta;
                    if (oTicket.lastErrorNumero == 0)
                    {
                        this.Identificador = oTicket.UniqueId.ToString();
                        this.otoken = oTicket.Token;
                        this.osign = oTicket.Sign;
                        this.toTicketHora = oTicket.GenerationTime;
                        this.toTicketHoraVencimiento = oTicket.ExpirationTime;
                        this.strUltimoMensajeError = "";
                        this.iUltimoNumeroError = 0;
                        bResultado = true;
                    }
                    else
                    {
                        this.strUltimoMensajeError = oTicket.lastErrorMensaje;
                        this.iUltimoNumeroError = oTicket.lastErrorNumero;
                    }
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 1;
                    ProjectData.ClearProjectError();
                }
            }
            else
            {
                this.iUltimoNumeroError = 5;
                this.strUltimoMensajeError = "Licencia no v\x00e1lida para el WSONCAA";
            }
            this.boTicketValido = bResultado;
            return bResultado;
        }

        public bool oObtenerTicketAcceso()
        {
            return this.oObtenerTicket();
        }

        public bool oObtenerTipoGrano()
        {
            bool bResultado = true;
            if (this.Modo == modoFiscal.Test)
            {
                if (bResultado)
                {
                    try
                    {
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 6;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool ProxyConfigurar(bool lActivar)
        {
            bool ProxyConfigurar = ServicePointManager.Expect100Continue;
            ServicePointManager.Expect100Continue = lActivar;
            return ProxyConfigurar;
        }

        public int RecuperaLastCPM(int ipuntoVenta, TipoComprobante iTipoComprobante)
        {
            int nResultado = 0;
            bool bResultado = true;
            this.strPermsg = "";
            this.iPerCode = 0;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            if (this.TicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.afipTest.FEAuthRequest autorizacion = new WSAFIPFE.afipTest.FEAuthRequest();
                    try
                    {
                        autorizacion.cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.token;
                        autorizacion.Sign = this.sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 4;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.afipTest.FELastCMPtype oParametro = new WSAFIPFE.afipTest.FELastCMPtype();
                            oParametro.TipoCbte = (int) iTipoComprobante;
                            oParametro.PtoVta = ipuntoVenta;
                            WSAFIPFE.afipTest.Service servicio = new WSAFIPFE.afipTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.afipTest.FERecuperaLastCMPResponse oRespuesta = servicio.FERecuperaLastCMPRequest(autorizacion, oParametro);
                            nResultado = oRespuesta.cbte_nro;
                            this.strUltimoMensajeError = oRespuesta.RError.perrmsg;
                            this.iUltimoNumeroError = oRespuesta.RError.percode;
                            this.strPermsg = oRespuesta.RError.perrmsg;
                            this.iPerCode = oRespuesta.RError.percode;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 2;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return nResultado;
                }
                WSAFIPFE.afip.FEAuthRequest autorizacion = new WSAFIPFE.afip.FEAuthRequest();
                try
                {
                    autorizacion.cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.token;
                    autorizacion.Sign = this.sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 4;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.afip.FELastCMPtype oParametro = new WSAFIPFE.afip.FELastCMPtype();
                        oParametro.TipoCbte = (int) iTipoComprobante;
                        oParametro.PtoVta = ipuntoVenta;
                        WSAFIPFE.afip.Service servicio = new WSAFIPFE.afip.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.DireccionServicioURL;
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        WSAFIPFE.afip.FERecuperaLastCMPResponse oRespuesta = servicio.FERecuperaLastCMPRequest(autorizacion, oParametro);
                        nResultado = oRespuesta.cbte_nro;
                        this.strUltimoMensajeError = oRespuesta.RError.perrmsg;
                        this.iUltimoNumeroError = oRespuesta.RError.percode;
                        this.strPermsg = oRespuesta.RError.perrmsg;
                        this.iPerCode = oRespuesta.RError.percode;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 2;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return nResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return nResultado;
        }

        public string RecuperaLastCPMS(int ipuntoVenta, TipoComprobante iTipoComprobante)
        {
            string cResultado = "0";
            bool bResultado = true;
            this.strPermsg = "";
            this.iPerCode = 0;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            if (this.TicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.afipTest.FEAuthRequest autorizacion = new WSAFIPFE.afipTest.FEAuthRequest();
                    try
                    {
                        autorizacion.cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.token;
                        autorizacion.Sign = this.sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 4;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.afipTest.FELastCMPtype oParametro = new WSAFIPFE.afipTest.FELastCMPtype();
                            oParametro.TipoCbte = (int) iTipoComprobante;
                            oParametro.PtoVta = ipuntoVenta;
                            WSAFIPFE.afipTest.Service servicio = new WSAFIPFE.afipTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.afipTest.FERecuperaLastCMPResponse oRespuesta = servicio.FERecuperaLastCMPRequest(autorizacion, oParametro);
                            cResultado = oRespuesta.cbte_nro.ToString();
                            this.strUltimoMensajeError = oRespuesta.RError.perrmsg;
                            this.iUltimoNumeroError = oRespuesta.RError.percode;
                            this.strPermsg = oRespuesta.RError.perrmsg;
                            this.iPerCode = oRespuesta.RError.percode;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 2;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return cResultado;
                }
                WSAFIPFE.afip.FEAuthRequest autorizacion = new WSAFIPFE.afip.FEAuthRequest();
                try
                {
                    autorizacion.cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.token;
                    autorizacion.Sign = this.sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 4;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.afip.FELastCMPtype oParametro = new WSAFIPFE.afip.FELastCMPtype();
                        oParametro.TipoCbte = (int) iTipoComprobante;
                        oParametro.PtoVta = ipuntoVenta;
                        WSAFIPFE.afip.Service servicio = new WSAFIPFE.afip.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.DireccionServicioURL;
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        WSAFIPFE.afip.FERecuperaLastCMPResponse oRespuesta = servicio.FERecuperaLastCMPRequest(autorizacion, oParametro);
                        cResultado = oRespuesta.cbte_nro.ToString();
                        this.strUltimoMensajeError = oRespuesta.RError.perrmsg;
                        this.iUltimoNumeroError = oRespuesta.RError.percode;
                        this.strPermsg = oRespuesta.RError.perrmsg;
                        this.iPerCode = oRespuesta.RError.percode;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 2;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return cResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return cResultado;
        }

        public bool Registrar(int pPuntoVenta, TipoComprobante pTipoComprobante, string cIdentificador)
        {
            int nContador;
            this.iPerCode = 0;
            this.strPermsg = "";
            bool bResultado = true;
            long nNumero = 0L;
            int nLimite = this.FECabeceraCantReg;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.strPermsg = "";
            this.iPerCode = 0;
            if (((this.Modo == modoFiscal.Fiscal) & (nLimite > 1)) & !this.LicenciaLote)
            {
                this.iUltimoNumeroError = 0x3dd;
                this.strUltimoMensajeError = "Licencia inv\x00e1lida para el modo lote";
                return false;
            }
            if (this.Modo == modoFiscal.Test)
            {
                if (this.TicketValido)
                {
                    WSAFIPFE.afipTest.FEAuthRequest autorizacion = new WSAFIPFE.afipTest.FEAuthRequest();
                    try
                    {
                        autorizacion.cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.token;
                        autorizacion.Sign = this.sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.afipTest.FELastCMPtype oParametroNumero = new WSAFIPFE.afipTest.FELastCMPtype();
                            oParametroNumero.TipoCbte = (int) pTipoComprobante;
                            oParametroNumero.PtoVta = pPuntoVenta;
                            WSAFIPFE.afipTest.Service servicio = new WSAFIPFE.afipTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            nNumero = servicio.FERecuperaLastCMPRequest(autorizacion, oParametroNumero).cbte_nro;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x16;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.afipTest.FERequest oPedido = new WSAFIPFE.afipTest.FERequest();
                        WSAFIPFE.afipTest.FECabeceraRequest oPedidoCabecera = new WSAFIPFE.afipTest.FECabeceraRequest();
                        WSAFIPFE.afipTest.FEDetalleRequest[] opedidoitems = new WSAFIPFE.afipTest.FEDetalleRequest[(nLimite - 1) + 1];
                        if (cIdentificador.Trim() == "")
                        {
                            oPedidoCabecera.id = 0L;
                        }
                        else
                        {
                            oPedidoCabecera.id = Conversions.ToLong(cIdentificador);
                        }
                        oPedidoCabecera.cantidadreg = this.FECabeceraCantReg;
                        oPedidoCabecera.presta_serv = this.FECabeceraPresta_serv;
                        oPedido.Fecr = oPedidoCabecera;
                        int VB_t_i4_L0 = nLimite - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                        {
                            WSAFIPFE.afipTest.FEDetalleRequest oPedidoitem = new WSAFIPFE.afipTest.FEDetalleRequest();
                            oPedidoitem.cbt_desde = (nNumero + 1L) + nContador;
                            oPedidoitem.cbt_hasta = (nNumero + 1L) + nContador;
                            oPedidoitem.fecha_cbte = this.aFEDetalle[nContador].fecha_cbte;
                            oPedidoitem.fecha_serv_desde = this.aFEDetalle[nContador].fecha_serv_desde;
                            oPedidoitem.fecha_serv_hasta = this.aFEDetalle[nContador].fecha_serv_hasta;
                            oPedidoitem.fecha_venc_pago = this.aFEDetalle[nContador].fecha_venc_pago;
                            oPedidoitem.imp_neto = this.aFEDetalle[nContador].imp_neto;
                            oPedidoitem.imp_op_ex = this.aFEDetalle[nContador].imp_op_ex;
                            oPedidoitem.imp_tot_conc = this.aFEDetalle[nContador].imp_tot_conc;
                            oPedidoitem.imp_total = this.aFEDetalle[nContador].imp_total;
                            oPedidoitem.impto_liq = this.aFEDetalle[nContador].impto_liq;
                            oPedidoitem.impto_liq_rni = this.aFEDetalle[nContador].impto_liq_rni;
                            oPedidoitem.nro_doc = this.aFEDetalle[nContador].nro_doc;
                            oPedidoitem.punto_vta = pPuntoVenta;
                            oPedidoitem.tipo_cbte = (int) pTipoComprobante;
                            oPedidoitem.tipo_doc = (int) this.aFEDetalle[nContador].tipo_doc;
                            opedidoitems[nContador] = oPedidoitem;
                        }
                        oPedido.Fedr = opedidoitems;
                        WSAFIPFE.afipTest.Service servicio = new WSAFIPFE.afipTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        if (this.ArchivoXMLEnviado != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.afipTest.FERequest));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                                writer1.Serialize((TextWriter) file1, oPedido);
                                file1.Close();
                            }
                            catch (Exception exception3)
                            {
                                ProjectData.SetProjectError(exception3);
                                Exception miEx = exception3;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        WSAFIPFE.afipTest.FEResponse oRespuesta = servicio.FEAutRequest(autorizacion, oPedido);
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                        }
                        else
                        {
                            WSAFIPFE.afipTest.FECabeceraResponse oRespuestaDetalle = oRespuesta.FecResp;
                            if (oRespuestaDetalle == null)
                            {
                                this.iFERespuestaCantidadReg = 0;
                                bResultado = false;
                            }
                            else
                            {
                                this.iFERespuestaCantidadReg = oRespuestaDetalle.cantidadreg;
                                int value = this.FERespuestaCantidadReg;
                                this.aFERespuestaDetalle = new FEDetalleRespuesta[(value - 1) + 1];
                                this.iFERespuestaPresta_serv = oRespuestaDetalle.presta_serv;
                                this.uFERespuestaCuit = oRespuestaDetalle.cuit;
                                this.uFERespuestaId = oRespuestaDetalle.id;
                                this.strFERespuestaFecha_cae = oRespuestaDetalle.fecha_cae;
                                this.strFERespuestaMotivo = oRespuestaDetalle.motivo;
                                this.strFERespuestaReproceso = oRespuestaDetalle.reproceso;
                                this.strFERespuestaResultado = oRespuestaDetalle.resultado;
                                int VB_t_i4_L1 = oRespuesta.FedResp.Length - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    WSAFIPFE.afipTest.FEDetalleResponse oRespuestaDetalleItem = oRespuesta.FedResp[nContador];
                                    this.aFERespuestaDetalle[nContador].cae = oRespuestaDetalleItem.cae;
                                    if (oRespuestaDetalleItem.cae == "NULL")
                                    {
                                        bResultado = false;
                                    }
                                    this.aFERespuestaDetalle[nContador].cbt_desde = oRespuestaDetalleItem.cbt_desde;
                                    this.aFERespuestaDetalle[nContador].cbt_hasta = oRespuestaDetalleItem.cbt_hasta;
                                    this.aFERespuestaDetalle[nContador].fecha_cbte = oRespuestaDetalleItem.fecha_cbte;
                                    this.aFERespuestaDetalle[nContador].fecha_serv_desde = oRespuestaDetalleItem.fecha_serv_desde;
                                    this.aFERespuestaDetalle[nContador].fecha_serv_hasta = oRespuestaDetalleItem.fecha_serv_hasta;
                                    this.aFERespuestaDetalle[nContador].fecha_venc_pago = oRespuestaDetalleItem.fecha_venc_pago;
                                    this.aFERespuestaDetalle[nContador].fecha_vto = oRespuestaDetalleItem.fecha_vto;
                                    this.aFERespuestaDetalle[nContador].imp_neto = oRespuestaDetalleItem.imp_neto;
                                    this.aFERespuestaDetalle[nContador].imp_op_ex = oRespuestaDetalleItem.imp_op_ex;
                                    this.aFERespuestaDetalle[nContador].imp_tot_conc = oRespuestaDetalleItem.imp_tot_conc;
                                    this.aFERespuestaDetalle[nContador].imp_total = oRespuestaDetalleItem.imp_total;
                                    this.aFERespuestaDetalle[nContador].impto_liq = oRespuestaDetalleItem.impto_liq;
                                    this.aFERespuestaDetalle[nContador].impto_liq_rni = oRespuestaDetalleItem.impto_liq_rni;
                                    this.aFERespuestaDetalle[nContador].motivo = oRespuestaDetalleItem.motivo;
                                    this.aFERespuestaDetalle[nContador].nro_doc = oRespuestaDetalleItem.nro_doc;
                                    this.aFERespuestaDetalle[nContador].punto_vta = oRespuestaDetalleItem.punto_vta;
                                    this.aFERespuestaDetalle[nContador].resultado = oRespuestaDetalleItem.resultado;
                                    this.aFERespuestaDetalle[nContador].tipo_cbte = (TipoComprobante) oRespuestaDetalleItem.tipo_cbte;
                                    this.aFERespuestaDetalle[nContador].tipo_doc = (TipoDocumento) oRespuestaDetalleItem.tipo_doc;
                                }
                            }
                        }
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.afipTest.FEResponse));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception4)
                            {
                                ProjectData.SetProjectError(exception4);
                                Exception miEx = exception4;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        if (bResultado && (this.FERespuestaResultado != "A"))
                        {
                            bResultado = false;
                        }
                        this.strPermsg = oRespuesta.RError.perrmsg;
                        this.iPerCode = oRespuesta.RError.percode;
                        this.strUltimoMensajeError = this.Permsg;
                        this.iUltimoNumeroError = 0x3e8;
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.TicketValido)
            {
                WSAFIPFE.afip.FEAuthRequest autorizacion = new WSAFIPFE.afip.FEAuthRequest();
                try
                {
                    autorizacion.cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.token;
                    autorizacion.Sign = this.sign;
                }
                catch (Exception exception5)
                {
                    ProjectData.SetProjectError(exception5);
                    Exception ex = exception5;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.afip.FELastCMPtype oParametroNumero = new WSAFIPFE.afip.FELastCMPtype();
                        oParametroNumero.TipoCbte = (int) pTipoComprobante;
                        oParametroNumero.PtoVta = pPuntoVenta;
                        WSAFIPFE.afip.Service servicio = new WSAFIPFE.afip.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.DireccionServicioURL;
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        nNumero = servicio.FERecuperaLastCMPRequest(autorizacion, oParametroNumero).cbte_nro;
                    }
                    catch (Exception exception6)
                    {
                        ProjectData.SetProjectError(exception6);
                        Exception ex = exception6;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x16;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                if (bResultado)
                {
                    WSAFIPFE.afip.FERequest oPedido = new WSAFIPFE.afip.FERequest();
                    WSAFIPFE.afip.FECabeceraRequest oPedidoCabecera = new WSAFIPFE.afip.FECabeceraRequest();
                    WSAFIPFE.afip.FEDetalleRequest[] opedidoitems = new WSAFIPFE.afip.FEDetalleRequest[(nLimite - 1) + 1];
                    if (cIdentificador.Trim() == "")
                    {
                        oPedidoCabecera.id = 0L;
                    }
                    else
                    {
                        oPedidoCabecera.id = Conversions.ToLong(cIdentificador);
                    }
                    oPedidoCabecera.cantidadreg = this.FECabeceraCantReg;
                    oPedidoCabecera.presta_serv = this.FECabeceraPresta_serv;
                    oPedido.Fecr = oPedidoCabecera;
                    int VB_t_i4_L2 = nLimite - 1;
                    for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                    {
                        WSAFIPFE.afip.FEDetalleRequest oPedidoitem = new WSAFIPFE.afip.FEDetalleRequest();
                        oPedidoitem.cbt_desde = (nNumero + 1L) + nContador;
                        oPedidoitem.cbt_hasta = (nNumero + 1L) + nContador;
                        oPedidoitem.fecha_cbte = this.aFEDetalle[nContador].fecha_cbte;
                        oPedidoitem.fecha_serv_desde = this.aFEDetalle[nContador].fecha_serv_desde;
                        oPedidoitem.fecha_serv_hasta = this.aFEDetalle[nContador].fecha_serv_hasta;
                        oPedidoitem.fecha_venc_pago = this.aFEDetalle[nContador].fecha_venc_pago;
                        oPedidoitem.imp_neto = this.aFEDetalle[nContador].imp_neto;
                        oPedidoitem.imp_op_ex = this.aFEDetalle[nContador].imp_op_ex;
                        oPedidoitem.imp_tot_conc = this.aFEDetalle[nContador].imp_tot_conc;
                        oPedidoitem.imp_total = this.aFEDetalle[nContador].imp_total;
                        oPedidoitem.impto_liq = this.aFEDetalle[nContador].impto_liq;
                        oPedidoitem.impto_liq_rni = this.aFEDetalle[nContador].impto_liq_rni;
                        oPedidoitem.nro_doc = this.aFEDetalle[nContador].nro_doc;
                        oPedidoitem.punto_vta = pPuntoVenta;
                        oPedidoitem.tipo_cbte = (int) pTipoComprobante;
                        oPedidoitem.tipo_doc = (int) this.aFEDetalle[nContador].tipo_doc;
                        opedidoitems[nContador] = oPedidoitem;
                    }
                    oPedido.Fedr = opedidoitems;
                    WSAFIPFE.afip.Service servicio = new WSAFIPFE.afip.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.DireccionServicioURL;
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    if (this.TimeOut != 0)
                    {
                        servicio.Timeout = this.TimeOut;
                    }
                    if (this.ArchivoXMLEnviado != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.afip.FERequest));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                            writer1.Serialize((TextWriter) file1, oPedido);
                            file1.Close();
                        }
                        catch (Exception exception7)
                        {
                            ProjectData.SetProjectError(exception7);
                            Exception miEx = exception7;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    WSAFIPFE.afip.FEResponse oRespuesta = servicio.FEAutRequest(autorizacion, oPedido);
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                    }
                    else
                    {
                        WSAFIPFE.afip.FECabeceraResponse oRespuestaDetalle = oRespuesta.FecResp;
                        if (oRespuestaDetalle == null)
                        {
                            this.iFERespuestaCantidadReg = 0;
                            bResultado = false;
                        }
                        else
                        {
                            this.iFERespuestaCantidadReg = oRespuestaDetalle.cantidadreg;
                            int value = this.FERespuestaCantidadReg;
                            this.aFERespuestaDetalle = new FEDetalleRespuesta[(value - 1) + 1];
                            this.iFERespuestaPresta_serv = oRespuestaDetalle.presta_serv;
                            this.uFERespuestaCuit = oRespuestaDetalle.cuit;
                            this.uFERespuestaId = oRespuestaDetalle.id;
                            this.strFERespuestaFecha_cae = oRespuestaDetalle.fecha_cae;
                            this.strFERespuestaMotivo = oRespuestaDetalle.motivo;
                            this.strFERespuestaReproceso = oRespuestaDetalle.reproceso;
                            this.strFERespuestaResultado = oRespuestaDetalle.resultado;
                            int VB_t_i4_L3 = oRespuesta.FedResp.Length - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                            {
                                WSAFIPFE.afip.FEDetalleResponse oRespuestaDetalleItem = oRespuesta.FedResp[nContador];
                                this.aFERespuestaDetalle[nContador].cae = oRespuestaDetalleItem.cae;
                                if (oRespuestaDetalleItem.cae == "NULL")
                                {
                                    bResultado = false;
                                }
                                this.aFERespuestaDetalle[nContador].cbt_desde = oRespuestaDetalleItem.cbt_desde;
                                this.aFERespuestaDetalle[nContador].cbt_hasta = oRespuestaDetalleItem.cbt_hasta;
                                this.aFERespuestaDetalle[nContador].fecha_cbte = oRespuestaDetalleItem.fecha_cbte;
                                this.aFERespuestaDetalle[nContador].fecha_serv_desde = oRespuestaDetalleItem.fecha_serv_desde;
                                this.aFERespuestaDetalle[nContador].fecha_serv_hasta = oRespuestaDetalleItem.fecha_serv_hasta;
                                this.aFERespuestaDetalle[nContador].fecha_venc_pago = oRespuestaDetalleItem.fecha_venc_pago;
                                this.aFERespuestaDetalle[nContador].fecha_vto = oRespuestaDetalleItem.fecha_vto;
                                this.aFERespuestaDetalle[nContador].imp_neto = oRespuestaDetalleItem.imp_neto;
                                this.aFERespuestaDetalle[nContador].imp_op_ex = oRespuestaDetalleItem.imp_op_ex;
                                this.aFERespuestaDetalle[nContador].imp_tot_conc = oRespuestaDetalleItem.imp_tot_conc;
                                this.aFERespuestaDetalle[nContador].imp_total = oRespuestaDetalleItem.imp_total;
                                this.aFERespuestaDetalle[nContador].impto_liq = oRespuestaDetalleItem.impto_liq;
                                this.aFERespuestaDetalle[nContador].impto_liq_rni = oRespuestaDetalleItem.impto_liq_rni;
                                this.aFERespuestaDetalle[nContador].motivo = oRespuestaDetalleItem.motivo;
                                this.aFERespuestaDetalle[nContador].nro_doc = oRespuestaDetalleItem.nro_doc;
                                this.aFERespuestaDetalle[nContador].punto_vta = oRespuestaDetalleItem.punto_vta;
                                this.aFERespuestaDetalle[nContador].resultado = oRespuestaDetalleItem.resultado;
                                this.aFERespuestaDetalle[nContador].tipo_cbte = (TipoComprobante) oRespuestaDetalleItem.tipo_cbte;
                                this.aFERespuestaDetalle[nContador].tipo_doc = (TipoDocumento) oRespuestaDetalleItem.tipo_doc;
                            }
                        }
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.afip.FEResponse));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception8)
                            {
                                ProjectData.SetProjectError(exception8);
                                Exception miEx = exception8;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                    }
                    if (bResultado && (this.FERespuestaResultado != "A"))
                    {
                        bResultado = false;
                    }
                    this.strPermsg = oRespuesta.RError.perrmsg;
                    this.iPerCode = oRespuesta.RError.percode;
                    this.strUltimoMensajeError = this.Permsg;
                    this.iUltimoNumeroError = 0x3e8;
                }
                return bResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return bResultado;
        }

        public bool RegistrarConNumero(int pPuntoVenta, TipoComprobante pTipoComprobante, string cIdentificador, int nNumeroComprobante)
        {
            int nContador;
            this.iPerCode = 0;
            this.strPermsg = "";
            bool bResultado = true;
            long nNumero = nNumeroComprobante;
            int nLimite = this.FECabeceraCantReg;
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            this.strPermsg = "";
            this.iPerCode = 0;
            if (((this.Modo == modoFiscal.Fiscal) & (nLimite > 1)) & !this.LicenciaLote)
            {
                this.iUltimoNumeroError = 0x3dd;
                this.strUltimoMensajeError = "Licencia inv\x00e1lida para el modo lote";
                return false;
            }
            if (this.Modo == modoFiscal.Test)
            {
                if (this.TicketValido)
                {
                    WSAFIPFE.afipTest.FEAuthRequest autorizacion = new WSAFIPFE.afipTest.FEAuthRequest();
                    try
                    {
                        autorizacion.cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.token;
                        autorizacion.Sign = this.sign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.afipTest.FERequest oPedido = new WSAFIPFE.afipTest.FERequest();
                        WSAFIPFE.afipTest.FECabeceraRequest oPedidoCabecera = new WSAFIPFE.afipTest.FECabeceraRequest();
                        WSAFIPFE.afipTest.FEDetalleRequest[] opedidoitems = new WSAFIPFE.afipTest.FEDetalleRequest[(nLimite - 1) + 1];
                        if (cIdentificador.Trim() == "")
                        {
                            oPedidoCabecera.id = 0L;
                        }
                        else
                        {
                            oPedidoCabecera.id = Conversions.ToLong(cIdentificador);
                        }
                        oPedidoCabecera.cantidadreg = this.FECabeceraCantReg;
                        oPedidoCabecera.presta_serv = this.FECabeceraPresta_serv;
                        oPedido.Fecr = oPedidoCabecera;
                        int VB_t_i4_L0 = nLimite - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                        {
                            WSAFIPFE.afipTest.FEDetalleRequest oPedidoitem = new WSAFIPFE.afipTest.FEDetalleRequest();
                            oPedidoitem.cbt_desde = ((nNumero + 1L) + nContador) - 1L;
                            oPedidoitem.cbt_hasta = ((nNumero + 1L) + nContador) - 1L;
                            oPedidoitem.fecha_cbte = this.aFEDetalle[nContador].fecha_cbte;
                            oPedidoitem.fecha_serv_desde = this.aFEDetalle[nContador].fecha_serv_desde;
                            oPedidoitem.fecha_serv_hasta = this.aFEDetalle[nContador].fecha_serv_hasta;
                            oPedidoitem.fecha_venc_pago = this.aFEDetalle[nContador].fecha_venc_pago;
                            oPedidoitem.imp_neto = this.aFEDetalle[nContador].imp_neto;
                            oPedidoitem.imp_op_ex = this.aFEDetalle[nContador].imp_op_ex;
                            oPedidoitem.imp_tot_conc = this.aFEDetalle[nContador].imp_tot_conc;
                            oPedidoitem.imp_total = this.aFEDetalle[nContador].imp_total;
                            oPedidoitem.impto_liq = this.aFEDetalle[nContador].impto_liq;
                            oPedidoitem.impto_liq_rni = this.aFEDetalle[nContador].impto_liq_rni;
                            oPedidoitem.nro_doc = this.aFEDetalle[nContador].nro_doc;
                            oPedidoitem.punto_vta = pPuntoVenta;
                            oPedidoitem.tipo_cbte = (int) pTipoComprobante;
                            oPedidoitem.tipo_doc = (int) this.aFEDetalle[nContador].tipo_doc;
                            opedidoitems[nContador] = oPedidoitem;
                        }
                        oPedido.Fedr = opedidoitems;
                        WSAFIPFE.afipTest.Service servicio = new WSAFIPFE.afipTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.afipTest.FEResponse oRespuesta = servicio.FEAutRequest(autorizacion, oPedido);
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                        }
                        else
                        {
                            WSAFIPFE.afipTest.FECabeceraResponse oRespuestaDetalle = oRespuesta.FecResp;
                            if (oRespuestaDetalle == null)
                            {
                                this.iFERespuestaCantidadReg = 0;
                                bResultado = false;
                            }
                            else
                            {
                                this.iFERespuestaCantidadReg = oRespuestaDetalle.cantidadreg;
                                int value = this.FERespuestaCantidadReg;
                                this.aFERespuestaDetalle = new FEDetalleRespuesta[(value - 1) + 1];
                                this.iFERespuestaPresta_serv = oRespuestaDetalle.presta_serv;
                                this.uFERespuestaCuit = oRespuestaDetalle.cuit;
                                this.uFERespuestaId = oRespuestaDetalle.id;
                                this.strFERespuestaFecha_cae = oRespuestaDetalle.fecha_cae;
                                this.strFERespuestaMotivo = oRespuestaDetalle.motivo;
                                this.strFERespuestaReproceso = oRespuestaDetalle.reproceso;
                                this.strFERespuestaResultado = oRespuestaDetalle.resultado;
                                int VB_t_i4_L1 = oRespuesta.FedResp.Length - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                                {
                                    WSAFIPFE.afipTest.FEDetalleResponse oRespuestaDetalleItem = oRespuesta.FedResp[nContador];
                                    this.aFERespuestaDetalle[nContador].cae = oRespuestaDetalleItem.cae;
                                    if (oRespuestaDetalleItem.cae == "NULL")
                                    {
                                        bResultado = false;
                                    }
                                    this.aFERespuestaDetalle[nContador].cbt_desde = oRespuestaDetalleItem.cbt_desde;
                                    this.aFERespuestaDetalle[nContador].cbt_hasta = oRespuestaDetalleItem.cbt_hasta;
                                    this.aFERespuestaDetalle[nContador].fecha_cbte = oRespuestaDetalleItem.fecha_cbte;
                                    this.aFERespuestaDetalle[nContador].fecha_serv_desde = oRespuestaDetalleItem.fecha_serv_desde;
                                    this.aFERespuestaDetalle[nContador].fecha_serv_hasta = oRespuestaDetalleItem.fecha_serv_hasta;
                                    this.aFERespuestaDetalle[nContador].fecha_venc_pago = oRespuestaDetalleItem.fecha_venc_pago;
                                    this.aFERespuestaDetalle[nContador].fecha_vto = oRespuestaDetalleItem.fecha_vto;
                                    this.aFERespuestaDetalle[nContador].imp_neto = oRespuestaDetalleItem.imp_neto;
                                    this.aFERespuestaDetalle[nContador].imp_op_ex = oRespuestaDetalleItem.imp_op_ex;
                                    this.aFERespuestaDetalle[nContador].imp_tot_conc = oRespuestaDetalleItem.imp_tot_conc;
                                    this.aFERespuestaDetalle[nContador].imp_total = oRespuestaDetalleItem.imp_total;
                                    this.aFERespuestaDetalle[nContador].impto_liq = oRespuestaDetalleItem.impto_liq;
                                    this.aFERespuestaDetalle[nContador].impto_liq_rni = oRespuestaDetalleItem.impto_liq_rni;
                                    this.aFERespuestaDetalle[nContador].motivo = oRespuestaDetalleItem.motivo;
                                    this.aFERespuestaDetalle[nContador].nro_doc = oRespuestaDetalleItem.nro_doc;
                                    this.aFERespuestaDetalle[nContador].punto_vta = oRespuestaDetalleItem.punto_vta;
                                    this.aFERespuestaDetalle[nContador].resultado = oRespuestaDetalleItem.resultado;
                                    this.aFERespuestaDetalle[nContador].tipo_cbte = (TipoComprobante) oRespuestaDetalleItem.tipo_cbte;
                                    this.aFERespuestaDetalle[nContador].tipo_doc = (TipoDocumento) oRespuestaDetalleItem.tipo_doc;
                                }
                            }
                            if (this.ArchivoXMLRecibido != "")
                            {
                                try
                                {
                                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.afipTest.FEResponse));
                                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                    writer1.Serialize((TextWriter) file1, oRespuesta);
                                    file1.Close();
                                }
                                catch (Exception exception2)
                                {
                                    ProjectData.SetProjectError(exception2);
                                    Exception miEx = exception2;
                                    this.strArchivoXMLError = miEx.Message;
                                    ProjectData.ClearProjectError();
                                }
                            }
                        }
                        if (bResultado && (this.FERespuestaResultado != "A"))
                        {
                            bResultado = false;
                        }
                        this.strPermsg = oRespuesta.RError.perrmsg;
                        this.iPerCode = oRespuesta.RError.percode;
                        this.strUltimoMensajeError = this.Permsg;
                        this.iUltimoNumeroError = 0x3e8;
                    }
                    return bResultado;
                }
                bResultado = false;
                this.iUltimoNumeroError = 15;
                this.strUltimoMensajeError = "Ticket inv\x00e1lido";
                return bResultado;
            }
            if (this.TicketValido)
            {
                WSAFIPFE.afip.FEAuthRequest autorizacion = new WSAFIPFE.afip.FEAuthRequest();
                try
                {
                    autorizacion.cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.token;
                    autorizacion.Sign = this.sign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 20;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.afip.FERequest oPedido = new WSAFIPFE.afip.FERequest();
                    WSAFIPFE.afip.FECabeceraRequest oPedidoCabecera = new WSAFIPFE.afip.FECabeceraRequest();
                    WSAFIPFE.afip.FEDetalleRequest[] opedidoitems = new WSAFIPFE.afip.FEDetalleRequest[(nLimite - 1) + 1];
                    if (cIdentificador.Trim() == "")
                    {
                        oPedidoCabecera.id = 0L;
                    }
                    else
                    {
                        oPedidoCabecera.id = Conversions.ToLong(cIdentificador);
                    }
                    oPedidoCabecera.cantidadreg = this.FECabeceraCantReg;
                    oPedidoCabecera.presta_serv = this.FECabeceraPresta_serv;
                    oPedido.Fecr = oPedidoCabecera;
                    int VB_t_i4_L2 = nLimite - 1;
                    for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                    {
                        WSAFIPFE.afip.FEDetalleRequest oPedidoitem = new WSAFIPFE.afip.FEDetalleRequest();
                        oPedidoitem.cbt_desde = ((nNumero + 1L) + nContador) - 1L;
                        oPedidoitem.cbt_hasta = ((nNumero + 1L) + nContador) - 1L;
                        oPedidoitem.fecha_cbte = this.aFEDetalle[nContador].fecha_cbte;
                        oPedidoitem.fecha_serv_desde = this.aFEDetalle[nContador].fecha_serv_desde;
                        oPedidoitem.fecha_serv_hasta = this.aFEDetalle[nContador].fecha_serv_hasta;
                        oPedidoitem.fecha_venc_pago = this.aFEDetalle[nContador].fecha_venc_pago;
                        oPedidoitem.imp_neto = this.aFEDetalle[nContador].imp_neto;
                        oPedidoitem.imp_op_ex = this.aFEDetalle[nContador].imp_op_ex;
                        oPedidoitem.imp_tot_conc = this.aFEDetalle[nContador].imp_tot_conc;
                        oPedidoitem.imp_total = this.aFEDetalle[nContador].imp_total;
                        oPedidoitem.impto_liq = this.aFEDetalle[nContador].impto_liq;
                        oPedidoitem.impto_liq_rni = this.aFEDetalle[nContador].impto_liq_rni;
                        oPedidoitem.nro_doc = this.aFEDetalle[nContador].nro_doc;
                        oPedidoitem.punto_vta = pPuntoVenta;
                        oPedidoitem.tipo_cbte = (int) pTipoComprobante;
                        oPedidoitem.tipo_doc = (int) this.aFEDetalle[nContador].tipo_doc;
                        opedidoitems[nContador] = oPedidoitem;
                    }
                    oPedido.Fedr = opedidoitems;
                    WSAFIPFE.afip.Service servicio = new WSAFIPFE.afip.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    if (this.ArchivoXMLEnviado != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.afip.FERequest));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                            writer1.Serialize((TextWriter) file1, oPedido);
                            file1.Close();
                        }
                        catch (Exception exception4)
                        {
                            ProjectData.SetProjectError(exception4);
                            Exception miEx = exception4;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    WSAFIPFE.afip.FEResponse oRespuesta = servicio.FEAutRequest(autorizacion, oPedido);
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                    }
                    else
                    {
                        WSAFIPFE.afip.FECabeceraResponse oRespuestaDetalle = oRespuesta.FecResp;
                        if (oRespuestaDetalle == null)
                        {
                            this.iFERespuestaCantidadReg = 0;
                            bResultado = false;
                        }
                        else
                        {
                            this.iFERespuestaCantidadReg = oRespuestaDetalle.cantidadreg;
                            int value = this.FERespuestaCantidadReg;
                            this.aFERespuestaDetalle = new FEDetalleRespuesta[(value - 1) + 1];
                            this.iFERespuestaPresta_serv = oRespuestaDetalle.presta_serv;
                            this.uFERespuestaCuit = oRespuestaDetalle.cuit;
                            this.uFERespuestaId = oRespuestaDetalle.id;
                            this.strFERespuestaFecha_cae = oRespuestaDetalle.fecha_cae;
                            this.strFERespuestaMotivo = oRespuestaDetalle.motivo;
                            this.strFERespuestaReproceso = oRespuestaDetalle.reproceso;
                            this.strFERespuestaResultado = oRespuestaDetalle.resultado;
                            int VB_t_i4_L3 = oRespuesta.FedResp.Length - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                            {
                                WSAFIPFE.afip.FEDetalleResponse oRespuestaDetalleItem = oRespuesta.FedResp[nContador];
                                this.aFERespuestaDetalle[nContador].cae = oRespuestaDetalleItem.cae;
                                if (oRespuestaDetalleItem.cae == "NULL")
                                {
                                    bResultado = false;
                                }
                                this.aFERespuestaDetalle[nContador].cbt_desde = oRespuestaDetalleItem.cbt_desde;
                                this.aFERespuestaDetalle[nContador].cbt_hasta = oRespuestaDetalleItem.cbt_hasta;
                                this.aFERespuestaDetalle[nContador].fecha_cbte = oRespuestaDetalleItem.fecha_cbte;
                                this.aFERespuestaDetalle[nContador].fecha_serv_desde = oRespuestaDetalleItem.fecha_serv_desde;
                                this.aFERespuestaDetalle[nContador].fecha_serv_hasta = oRespuestaDetalleItem.fecha_serv_hasta;
                                this.aFERespuestaDetalle[nContador].fecha_venc_pago = oRespuestaDetalleItem.fecha_venc_pago;
                                this.aFERespuestaDetalle[nContador].fecha_vto = oRespuestaDetalleItem.fecha_vto;
                                this.aFERespuestaDetalle[nContador].imp_neto = oRespuestaDetalleItem.imp_neto;
                                this.aFERespuestaDetalle[nContador].imp_op_ex = oRespuestaDetalleItem.imp_op_ex;
                                this.aFERespuestaDetalle[nContador].imp_tot_conc = oRespuestaDetalleItem.imp_tot_conc;
                                this.aFERespuestaDetalle[nContador].imp_total = oRespuestaDetalleItem.imp_total;
                                this.aFERespuestaDetalle[nContador].impto_liq = oRespuestaDetalleItem.impto_liq;
                                this.aFERespuestaDetalle[nContador].impto_liq_rni = oRespuestaDetalleItem.impto_liq_rni;
                                this.aFERespuestaDetalle[nContador].motivo = oRespuestaDetalleItem.motivo;
                                this.aFERespuestaDetalle[nContador].nro_doc = oRespuestaDetalleItem.nro_doc;
                                this.aFERespuestaDetalle[nContador].punto_vta = oRespuestaDetalleItem.punto_vta;
                                this.aFERespuestaDetalle[nContador].resultado = oRespuestaDetalleItem.resultado;
                                this.aFERespuestaDetalle[nContador].tipo_cbte = (TipoComprobante) oRespuestaDetalleItem.tipo_cbte;
                                this.aFERespuestaDetalle[nContador].tipo_doc = (TipoDocumento) oRespuestaDetalleItem.tipo_doc;
                            }
                        }
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.afip.FEResponse));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception5)
                            {
                                ProjectData.SetProjectError(exception5);
                                Exception miEx = exception5;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                    }
                    if (bResultado && (this.FERespuestaResultado != "A"))
                    {
                        bResultado = false;
                    }
                    this.strPermsg = oRespuesta.RError.perrmsg;
                    this.iPerCode = oRespuesta.RError.percode;
                    this.strUltimoMensajeError = this.Permsg;
                    this.iUltimoNumeroError = 0x3e8;
                }
                return bResultado;
            }
            bResultado = false;
            this.iUltimoNumeroError = 15;
            this.strUltimoMensajeError = "Ticket inv\x00e1lido";
            return bResultado;
        }

        public bool SDummy()
        {
            bool bResultado = true;
            this.strsRespuestaDummyDbServer = "";
            this.strsRespuestaDummyAuthServer = "";
            this.strsRespuestaDummyDbServer = "";
            if (this.Modo == modoFiscal.Test)
            {
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.sAFIPTest.Service servicio = new WSAFIPFE.sAFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.sAFIPTest.DummyResponse oRespuesta = servicio.SEGDummy();
                        this.strsRespuestaDummyDbServer = oRespuesta.DbServer;
                        this.strsRespuestaDummyAuthServer = oRespuesta.AuthServer;
                        this.strsRespuestaDummyAppServer = oRespuesta.AppServer;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 6;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            if (bResultado)
            {
                WSAFIPFE.sAFIP.DummyResponse oRespuesta = null;
                try
                {
                    WSAFIPFE.sAFIP.Service servicio = new WSAFIPFE.sAFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    oRespuesta = servicio.SEGDummy();
                    this.strsRespuestaDummyDbServer = oRespuesta.DbServer;
                    this.strsRespuestaDummyAuthServer = oRespuesta.AuthServer;
                    this.strsRespuestaDummyAppServer = oRespuesta.AppServer;
                }
                catch (Exception exception2)
                {
                    ProjectData.SetProjectError(exception2);
                    Exception ex = exception2;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 6;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (this.ArchivoXMLRecibido == "")
                {
                    return bResultado;
                }
                try
                {
                    XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.sAFIP.DummyResponse));
                    StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                    writer1.Serialize((TextWriter) file1, oRespuesta);
                    file1.Close();
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception miEx = exception3;
                    this.strArchivoXMLError = miEx.Message;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        public bool SEGAutorize(int nPuntoVenta, int nTipoComprobante, string cIdentificador, int nNumero)
        {
            return this.sRegistrarConNumero(nPuntoVenta, nTipoComprobante, cIdentificador, nNumero);
        }

        public bool SEGGetCMP(int nPuntoVenta, int nTipoComprobante, int nNumeroComprobante)
        {
            int nContador;
            this.iserrcode = 0;
            this.strserrmsg = "";
            bool bResultado = true;
            this.isEventCode = 0;
            this.strsEventMsg = "";
            if (this.Modo == modoFiscal.Test)
            {
                if (!this.sTicketValido)
                {
                    return false;
                }
                WSAFIPFE.sAFIPTest.ClsSEGAuthRequest autorizacion = new WSAFIPFE.sAFIPTest.ClsSEGAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.stoken;
                    autorizacion.Sign = this.ssign;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.iUltimoNumeroError = 520;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.sAFIPTest.Service servicio = new WSAFIPFE.sAFIPTest.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    WSAFIPFE.sAFIPTest.ClsSEGGetCMP oPedido = new WSAFIPFE.sAFIPTest.ClsSEGGetCMP();
                    oPedido.Cbte_nro = nNumeroComprobante;
                    oPedido.Punto_vta = nPuntoVenta;
                    oPedido.Tipo_cbte = (short) nTipoComprobante;
                    WSAFIPFE.sAFIPTest.SEGGetCMPResponse oRespuesta = servicio.SEGGetCMP(autorizacion, oPedido);
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.strUltimoMensajeError = "sin respuesta ";
                        this.iUltimoNumeroError = 0x207;
                        return bResultado;
                    }
                    this.strUltimoMensajeError = oRespuesta.SEGErr.ErrMsg;
                    this.iberrcode = oRespuesta.SEGErr.ErrCode;
                    this.strberrmsg = oRespuesta.SEGErr.ErrMsg;
                    this.iberrcode = oRespuesta.SEGEvents.EventCode;
                    this.strberrmsg = oRespuesta.SEGEvents.EventMsg;
                    this.iUltimoNumeroError = 520;
                    this.sItemCantidad = 0;
                    this.strsRespuestaCAE = "";
                    if ((oRespuesta.SEGResultGet != null) && (oRespuesta.SEGErr.ErrCode == 0))
                    {
                        this.sNro_doc = oRespuesta.SEGResultGet.Cbte_nro.ToString();
                        this.sFecha_cbte = oRespuesta.SEGResultGet.Fecha_cbte_orig;
                        this.sFecha_cbte_orig = oRespuesta.SEGResultGet.Fecha_cbte_orig;
                        this.sFecha_cbte_cae = oRespuesta.SEGResultGet.Fecha_cbte_cae;
                        this.sImp_iibb = oRespuesta.SEGResultGet.Imp_iibb;
                        this.sImp_internos = oRespuesta.SEGResultGet.Imp_internos;
                        this.sImp_moneda_id = oRespuesta.SEGResultGet.Imp_moneda_Id;
                        this.sImp_moneda_ctz = oRespuesta.SEGResultGet.Imp_moneda_ctz;
                        this.sImp_neto = oRespuesta.SEGResultGet.Imp_neto;
                        this.simp_op_ex = oRespuesta.SEGResultGet.Imp_op_ex;
                        this.sImp_perc = oRespuesta.SEGResultGet.Imp_perc;
                        this.sImp_perc_mun = oRespuesta.SEGResultGet.Imp_perc_mun;
                        this.sImp_total = oRespuesta.SEGResultGet.Imp_total;
                        this.sImp_total_conc = oRespuesta.SEGResultGet.Imp_tot_conc;
                        this.simpto_liq = oRespuesta.SEGResultGet.Impto_liq;
                        this.simpto_liq_rni = oRespuesta.SEGResultGet.Impto_liq_rni;
                        this.sPunto_vta = oRespuesta.SEGResultGet.Punto_vta;
                        this.sTipo_Doc = oRespuesta.SEGResultGet.Tipo_doc;
                        this.scbte_nro = (int) oRespuesta.SEGResultGet.Cbte_nro;
                        this.sImp_otrib_prov = oRespuesta.SEGResultGet.Imp_otrib_prov;
                        this.strsRespuestaCUIT = oRespuesta.SEGResultGet.Cuit.ToString();
                        this.strsRespuestaCAE = oRespuesta.SEGResultGet.Cae;
                        this.strsRespuestaFch_cbte = oRespuesta.SEGResultGet.Fecha_cbte_cae;
                        this.strsRespuestaObs = oRespuesta.SEGResultGet.Obs;
                        this.strsRespuestaResultado = oRespuesta.SEGResultGet.Resultado;
                        this.sItemCantidad = oRespuesta.SEGResultGet.Items.Length - 1;
                        int value = this.sItemCantidad;
                        this.asItem = new sItem[(value - 1) + 1];
                        int VB_t_i4_L0 = this.bItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                        {
                            this.IndiceItem = nContador;
                            this.sItemds = oRespuesta.SEGResultGet.Items[nContador].Ds;
                            this.sItemEndoso = oRespuesta.SEGResultGet.Items[nContador].Endoso;
                            this.sItemimp_bonif = oRespuesta.SEGResultGet.Items[nContador].Imp_bonif;
                            this.sItemimp_total = oRespuesta.SEGResultGet.Items[nContador].Imp_total;
                            this.sItemIva_id = oRespuesta.SEGResultGet.Items[nContador].Iva_id;
                            this.sItemPoliza = oRespuesta.SEGResultGet.Items[nContador].Poliza;
                            this.sItemprecio_uni = oRespuesta.SEGResultGet.Items[nContador].Precio_uni;
                            this.sItemqty = oRespuesta.SEGResultGet.Items[nContador].Qty;
                            this.sItemimp_valor_aseg = oRespuesta.SEGResultGet.Items[nContador].Imp_valor_aseg;
                            this.sItemimp_moneda_vaseg = oRespuesta.SEGResultGet.Items[nContador].Imp_moneda_vaseg;
                        }
                    }
                    else
                    {
                        bResultado = false;
                    }
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.sAFIP.SEGResponseAuthorize));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception miEx = exception2;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                }
                return bResultado;
            }
            if (!this.sTicketValido)
            {
                return false;
            }
            WSAFIPFE.sAFIP.ClsSEGAuthRequest autorizacion = new WSAFIPFE.sAFIP.ClsSEGAuthRequest();
            try
            {
                autorizacion.Cuit = Conversions.ToLong(this.cuit);
                autorizacion.Token = this.stoken;
                autorizacion.Sign = this.ssign;
            }
            catch (Exception exception3)
            {
                ProjectData.SetProjectError(exception3);
                Exception ex = exception3;
                this.iUltimoNumeroError = 520;
                this.strUltimoMensajeError = ex.Message;
                bResultado = false;
                ProjectData.ClearProjectError();
            }
            if (bResultado)
            {
                WSAFIPFE.sAFIP.Service servicio = new WSAFIPFE.sAFIP.Service();
                if (this.ProxyUserName != "")
                {
                    NetworkCredential cr = new NetworkCredential();
                    WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                    cr.Domain = this.ProxyDomain;
                    cr.Password = this.ProxyUserPassword;
                    cr.UserName = this.ProxyUserName;
                    pr.Credentials = cr;
                    servicio.Proxy = pr;
                }
                WSAFIPFE.sAFIP.ClsSEGGetCMP oPedido = new WSAFIPFE.sAFIP.ClsSEGGetCMP();
                oPedido.Cbte_nro = nNumeroComprobante;
                oPedido.Punto_vta = nPuntoVenta;
                oPedido.Tipo_cbte = (short) nTipoComprobante;
                WSAFIPFE.sAFIP.SEGGetCMPResponse oRespuesta = servicio.SEGGetCMP(autorizacion, oPedido);
                if (oRespuesta == null)
                {
                    bResultado = false;
                    this.strUltimoMensajeError = "sin respuesta ";
                    this.iUltimoNumeroError = 0x207;
                    return bResultado;
                }
                this.strUltimoMensajeError = oRespuesta.SEGErr.ErrMsg;
                this.iberrcode = oRespuesta.SEGErr.ErrCode;
                this.strberrmsg = oRespuesta.SEGErr.ErrMsg;
                this.iberrcode = oRespuesta.SEGEvents.EventCode;
                this.strberrmsg = oRespuesta.SEGEvents.EventMsg;
                this.iUltimoNumeroError = 520;
                this.sItemCantidad = 0;
                this.strsRespuestaCAE = "";
                if ((oRespuesta.SEGResultGet != null) && (oRespuesta.SEGErr.ErrCode == 0))
                {
                    this.sNro_doc = oRespuesta.SEGResultGet.Cbte_nro.ToString();
                    this.sFecha_cbte = oRespuesta.SEGResultGet.Fecha_cbte_orig;
                    this.sFecha_cbte_orig = oRespuesta.SEGResultGet.Fecha_cbte_orig;
                    this.sFecha_cbte_cae = oRespuesta.SEGResultGet.Fecha_cbte_cae;
                    this.sImp_iibb = oRespuesta.SEGResultGet.Imp_iibb;
                    this.sImp_internos = oRespuesta.SEGResultGet.Imp_internos;
                    this.sImp_moneda_id = oRespuesta.SEGResultGet.Imp_moneda_Id;
                    this.sImp_moneda_ctz = oRespuesta.SEGResultGet.Imp_moneda_ctz;
                    this.sImp_neto = oRespuesta.SEGResultGet.Imp_neto;
                    this.simp_op_ex = oRespuesta.SEGResultGet.Imp_op_ex;
                    this.sImp_perc = oRespuesta.SEGResultGet.Imp_perc;
                    this.sImp_perc_mun = oRespuesta.SEGResultGet.Imp_perc_mun;
                    this.sImp_total = oRespuesta.SEGResultGet.Imp_total;
                    this.sImp_total_conc = oRespuesta.SEGResultGet.Imp_tot_conc;
                    this.simpto_liq = oRespuesta.SEGResultGet.Impto_liq;
                    this.simpto_liq_rni = oRespuesta.SEGResultGet.Impto_liq_rni;
                    this.sPunto_vta = oRespuesta.SEGResultGet.Punto_vta;
                    this.sTipo_Doc = oRespuesta.SEGResultGet.Tipo_doc;
                    this.scbte_nro = (int) oRespuesta.SEGResultGet.Cbte_nro;
                    this.sImp_otrib_prov = oRespuesta.SEGResultGet.Imp_otrib_prov;
                    this.strsRespuestaCUIT = oRespuesta.SEGResultGet.Cuit.ToString();
                    this.strsRespuestaCAE = oRespuesta.SEGResultGet.Cae;
                    this.strsRespuestaFch_cbte = oRespuesta.SEGResultGet.Fecha_cbte_cae;
                    this.strsRespuestaObs = oRespuesta.SEGResultGet.Obs;
                    this.strsRespuestaResultado = oRespuesta.SEGResultGet.Resultado;
                    this.sItemCantidad = oRespuesta.SEGResultGet.Items.Length - 1;
                    int value = this.sItemCantidad;
                    this.asItem = new sItem[(value - 1) + 1];
                    int VB_t_i4_L1 = this.bItemCantidad - 1;
                    for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                    {
                        this.IndiceItem = nContador;
                        this.sItemds = oRespuesta.SEGResultGet.Items[nContador].Ds;
                        this.sItemEndoso = oRespuesta.SEGResultGet.Items[nContador].Endoso;
                        this.sItemimp_bonif = oRespuesta.SEGResultGet.Items[nContador].Imp_bonif;
                        this.sItemimp_total = oRespuesta.SEGResultGet.Items[nContador].Imp_total;
                        this.sItemIva_id = oRespuesta.SEGResultGet.Items[nContador].Iva_id;
                        this.sItemPoliza = oRespuesta.SEGResultGet.Items[nContador].Poliza;
                        this.sItemprecio_uni = oRespuesta.SEGResultGet.Items[nContador].Precio_uni;
                        this.sItemqty = oRespuesta.SEGResultGet.Items[nContador].Qty;
                        this.sItemimp_valor_aseg = oRespuesta.SEGResultGet.Items[nContador].Imp_valor_aseg;
                        this.sItemimp_moneda_vaseg = oRespuesta.SEGResultGet.Items[nContador].Imp_moneda_vaseg;
                    }
                }
                else
                {
                    bResultado = false;
                }
                if (this.ArchivoXMLRecibido != "")
                {
                    try
                    {
                        XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.sAFIP.SEGResponseAuthorize));
                        StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                        writer1.Serialize((TextWriter) file1, oRespuesta);
                        file1.Close();
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception miEx = exception4;
                        this.strArchivoXMLError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                }
            }
            return bResultado;
        }

        public int SEGGetLastCMP(int nPuntoVenta, int nTipoComprobante)
        {
            bool bResultado = true;
            int nResultado = 0;
            if (this.sTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.sAFIPTest.ClsSEG_LastCMP oparametro = new WSAFIPFE.sAFIPTest.ClsSEG_LastCMP();
                            oparametro.Cuit = Conversions.ToLong(this.cuit);
                            oparametro.Pto_venta = (short) nPuntoVenta;
                            oparametro.Sign = this.ssign;
                            oparametro.Tipo_cbte = (short) nTipoComprobante;
                            oparametro.Token = this.stoken;
                            WSAFIPFE.sAFIPTest.Service servicio = new WSAFIPFE.sAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.sAFIPTest.SEGResponseLast_CMP oRespuesta = servicio.SEGGetLast_CMP(oparametro);
                            this.iberrcode = oRespuesta.SEGErr.ErrCode;
                            this.strberrmsg = oRespuesta.SEGErr.ErrMsg;
                            nResultado = (int) oRespuesta.SEGResult_LastCMP.Cbte_nro;
                        }
                        catch (Exception exception1)
                        {
                            ProjectData.SetProjectError(exception1);
                            Exception ex = exception1;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x206;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return nResultado;
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.sAFIP.ClsSEG_LastCMP oparametro = new WSAFIPFE.sAFIP.ClsSEG_LastCMP();
                        oparametro.Cuit = Conversions.ToLong(this.cuit);
                        oparametro.Pto_venta = (short) nPuntoVenta;
                        oparametro.Sign = this.ssign;
                        oparametro.Tipo_cbte = (short) nTipoComprobante;
                        oparametro.Token = this.stoken;
                        WSAFIPFE.sAFIP.Service servicio = new WSAFIPFE.sAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.sAFIP.SEGResponseLast_CMP oRespuesta = servicio.SEGGetLast_CMP(oparametro);
                        this.iberrcode = oRespuesta.SEGErr.ErrCode;
                        this.strberrmsg = oRespuesta.SEGErr.ErrMsg;
                        nResultado = (int) oRespuesta.SEGResult_LastCMP.Cbte_nro;
                    }
                    catch (Exception exception2)
                    {
                        ProjectData.SetProjectError(exception2);
                        Exception ex = exception2;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x206;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return nResultado;
            }
            bResultado = false;
            return nResultado;
        }

        public string SEGGetLastId()
        {
            bool bResultado = true;
            string cResultado = "";
            if (this.sTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.sAFIPTest.ClsSEGAuthRequest autorizacion = new WSAFIPFE.sAFIPTest.ClsSEGAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.stoken;
                        autorizacion.Sign = this.ssign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x38;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.sAFIPTest.Service servicio = new WSAFIPFE.sAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.sAFIPTest.SEGResponse_LastID oRespuesta = servicio.SEGGetLast_ID(autorizacion);
                            this.iserrcode = oRespuesta.SEGErr.ErrCode;
                            this.strberrmsg = oRespuesta.SEGErr.ErrMsg;
                            cResultado = oRespuesta.SEGResultGet.Id.ToString();
                            this.isEventCode = oRespuesta.SEGEvents.EventCode;
                            this.strsEventMsg = oRespuesta.SEGEvents.EventMsg;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x205;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return cResultado;
                }
                WSAFIPFE.sAFIP.ClsSEGAuthRequest autorizacion = new WSAFIPFE.sAFIP.ClsSEGAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.stoken;
                    autorizacion.Sign = this.ssign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x38;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.sAFIP.Service servicio = new WSAFIPFE.sAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.sAFIP.SEGResponse_LastID oRespuesta = servicio.SEGGetLast_ID(autorizacion);
                        this.iserrcode = oRespuesta.SEGErr.ErrCode;
                        this.strberrmsg = oRespuesta.SEGErr.ErrMsg;
                        cResultado = oRespuesta.SEGResultGet.Id.ToString();
                        this.isEventCode = oRespuesta.SEGEvents.EventCode;
                        this.strsEventMsg = oRespuesta.SEGEvents.EventMsg;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x205;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return cResultado;
            }
            bResultado = false;
            return cResultado;
        }

        public bool SEGGetPARAM_MON()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.isMonedaItemCantidad = 0;
            if (this.sTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.sAFIPTest.ClsSEGAuthRequest autorizacion = new WSAFIPFE.sAFIPTest.ClsSEGAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.stoken;
                        autorizacion.Sign = this.ssign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.sAFIPTest.Service servicio = new WSAFIPFE.sAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.sAFIPTest.SEGResponse_Mon oRespuesta = servicio.SEGGetPARAM_MON(autorizacion);
                            this.iserrcode = oRespuesta.SEGErr.ErrCode;
                            this.strserrmsg = oRespuesta.SEGErr.ErrMsg;
                            this.isEventCode = oRespuesta.SEGEvents.EventCode;
                            this.strsEventMsg = oRespuesta.SEGEvents.EventMsg;
                            if (this.iserrcode == 0)
                            {
                                this.isMonedaItemCantidad = oRespuesta.SEGResultGet.Length;
                                value = this.sMonedaItemCantidad;
                                this.aSMoneda = new sMoneda[(value - 1) + 1];
                                int VB_t_i4_L0 = this.sMonedaItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.aSMoneda[nContador].id = oRespuesta.SEGResultGet[nContador].Mon_Id;
                                    this.aSMoneda[nContador].ds = oRespuesta.SEGResultGet[nContador].Mon_Ds;
                                    this.aSMoneda[nContador].Vig_Desde = oRespuesta.SEGResultGet[nContador].Mon_vig_desde;
                                    this.aSMoneda[nContador].Vig_hasta = oRespuesta.SEGResultGet[nContador].Mon_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.sAFIP.ClsSEGAuthRequest autorizacion = new WSAFIPFE.sAFIP.ClsSEGAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.stoken;
                    autorizacion.Sign = this.ssign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.sAFIP.Service servicio = new WSAFIPFE.sAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.sAFIP.SEGResponse_Mon oRespuesta = servicio.SEGGetPARAM_MON(autorizacion);
                        this.iserrcode = oRespuesta.SEGErr.ErrCode;
                        this.strserrmsg = oRespuesta.SEGErr.ErrMsg;
                        this.iserrcode = oRespuesta.SEGEvents.EventCode;
                        this.strberrmsg = oRespuesta.SEGEvents.EventMsg;
                        if (this.iserrcode == 0)
                        {
                            this.isMonedaItemCantidad = oRespuesta.SEGResultGet.Length;
                            value = this.sMonedaItemCantidad;
                            this.aSMoneda = new sMoneda[(value - 1) + 1];
                            int VB_t_i4_L1 = this.sMonedaItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.aSMoneda[nContador].id = oRespuesta.SEGResultGet[nContador].Mon_Id;
                                this.aSMoneda[nContador].ds = oRespuesta.SEGResultGet[nContador].Mon_Ds;
                                this.aSMoneda[nContador].Vig_Desde = oRespuesta.SEGResultGet[nContador].Mon_vig_desde;
                                this.aSMoneda[nContador].Vig_hasta = oRespuesta.SEGResultGet[nContador].Mon_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool SEGGetPARAM_Tipo_cbte()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.isTipo_CbteItemCantidad = 0;
            if (this.sTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.sAFIPTest.ClsSEGAuthRequest autorizacion = new WSAFIPFE.sAFIPTest.ClsSEGAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.stoken;
                        autorizacion.Sign = this.ssign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x38;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.sAFIPTest.Service servicio = new WSAFIPFE.sAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.sAFIPTest.SEGResponse_Tipo_Cbte oRespuesta = servicio.SEGGetPARAM_Tipo_Cbte(autorizacion);
                            this.iberrcode = oRespuesta.SEGErr.ErrCode;
                            this.strberrmsg = oRespuesta.SEGErr.ErrMsg;
                            this.iberrcode = oRespuesta.SEGErr.ErrCode;
                            this.strberrmsg = oRespuesta.SEGErr.ErrMsg;
                            if (this.iberrcode == 0)
                            {
                                this.isTipo_CbteItemCantidad = oRespuesta.SEGResultGet.Length;
                                value = this.isTipo_CbteItemCantidad;
                                this.aSTipo_cpte = new sTipo_cbtes[(value - 1) + 1];
                                int VB_t_i4_L0 = this.sTipo_CbteItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.aSTipo_cpte[nContador].id = oRespuesta.SEGResultGet[nContador].Cbte_Id;
                                    this.aSTipo_cpte[nContador].ds = oRespuesta.SEGResultGet[nContador].Cbte_Ds;
                                    this.aSTipo_cpte[nContador].Vig_Desde = oRespuesta.SEGResultGet[nContador].Cbte_vig_desde;
                                    this.aSTipo_cpte[nContador].Vig_hasta = oRespuesta.SEGResultGet[nContador].Cbte_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x205;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.sAFIP.ClsSEGAuthRequest autorizacion = new WSAFIPFE.sAFIP.ClsSEGAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.stoken;
                    autorizacion.Sign = this.ssign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x38;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.sAFIP.Service servicio = new WSAFIPFE.sAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.sAFIP.SEGResponse_Tipo_Cbte oRespuesta = servicio.SEGGetPARAM_Tipo_Cbte(autorizacion);
                        this.iberrcode = oRespuesta.SEGErr.ErrCode;
                        this.strberrmsg = oRespuesta.SEGErr.ErrMsg;
                        this.iberrcode = oRespuesta.SEGErr.ErrCode;
                        this.strberrmsg = oRespuesta.SEGErr.ErrMsg;
                        if (this.iberrcode == 0)
                        {
                            this.isTipo_CbteItemCantidad = oRespuesta.SEGResultGet.Length;
                            value = this.isTipo_CbteItemCantidad;
                            this.aSTipo_cpte = new sTipo_cbtes[(value - 1) + 1];
                            int VB_t_i4_L1 = this.sTipo_CbteItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.aSTipo_cpte[nContador].id = oRespuesta.SEGResultGet[nContador].Cbte_Id;
                                this.aSTipo_cpte[nContador].ds = oRespuesta.SEGResultGet[nContador].Cbte_Ds;
                                this.aSTipo_cpte[nContador].Vig_Desde = oRespuesta.SEGResultGet[nContador].Cbte_vig_desde;
                                this.aSTipo_cpte[nContador].Vig_hasta = oRespuesta.SEGResultGet[nContador].Cbte_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x205;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool SEGGetPARAM_TipoDoc()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.isTipoDocItemCantidad = 0;
            if (this.sTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.sAFIPTest.ClsSEGAuthRequest autorizacion = new WSAFIPFE.sAFIPTest.ClsSEGAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.stoken;
                        autorizacion.Sign = this.ssign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x38;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.sAFIPTest.Service servicio = new WSAFIPFE.sAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.sAFIPTest.SEGResponse_Tipo_doc oRespuesta = servicio.SEGGetPARAM_Tipo_doc(autorizacion);
                            this.iserrcode = oRespuesta.SEGErr.ErrCode;
                            this.strserrmsg = oRespuesta.SEGErr.ErrMsg;
                            this.iserrcode = oRespuesta.SEGErr.ErrCode;
                            this.strserrmsg = oRespuesta.SEGErr.ErrMsg;
                            if (this.iserrcode == 0)
                            {
                                this.isTipoDocItemCantidad = oRespuesta.SEGResultGet.Length;
                                value = this.isTipoDocItemCantidad;
                                this.asTipoDoc = new sTipoDoc[(value - 1) + 1];
                                int VB_t_i4_L0 = this.sTipoDocItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.asTipoDoc[nContador].id = oRespuesta.SEGResultGet[nContador].Doc_Id;
                                    this.asTipoDoc[nContador].ds = oRespuesta.SEGResultGet[nContador].Doc_Ds;
                                    this.asTipoDoc[nContador].Vig_Desde = oRespuesta.SEGResultGet[nContador].Doc_vig_desde;
                                    this.asTipoDoc[nContador].Vig_hasta = oRespuesta.SEGResultGet[nContador].Doc_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x206;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.sAFIP.ClsSEGAuthRequest autorizacion = new WSAFIPFE.sAFIP.ClsSEGAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.stoken;
                    autorizacion.Sign = this.ssign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x38;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.sAFIP.Service servicio = new WSAFIPFE.sAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.sAFIP.SEGResponse_Tipo_doc oRespuesta = servicio.SEGGetPARAM_Tipo_doc(autorizacion);
                        this.iserrcode = oRespuesta.SEGErr.ErrCode;
                        this.strserrmsg = oRespuesta.SEGErr.ErrMsg;
                        this.iserrcode = oRespuesta.SEGErr.ErrCode;
                        this.strserrmsg = oRespuesta.SEGErr.ErrMsg;
                        if (this.iserrcode == 0)
                        {
                            this.isTipoDocItemCantidad = oRespuesta.SEGResultGet.Length;
                            value = this.isTipoDocItemCantidad;
                            this.asTipoDoc = new sTipoDoc[(value - 1) + 1];
                            int VB_t_i4_L1 = this.sTipoDocItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.asTipoDoc[nContador].id = oRespuesta.SEGResultGet[nContador].Doc_Id;
                                this.asTipoDoc[nContador].ds = oRespuesta.SEGResultGet[nContador].Doc_Ds;
                                this.asTipoDoc[nContador].Vig_Desde = oRespuesta.SEGResultGet[nContador].Doc_vig_desde;
                                this.asTipoDoc[nContador].Vig_hasta = oRespuesta.SEGResultGet[nContador].Doc_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x206;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool SEGGetPARAM_TipoIva()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.isTipoIvaItemCantidad = 0;
            if (this.sTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.sAFIPTest.ClsSEGAuthRequest autorizacion = new WSAFIPFE.sAFIPTest.ClsSEGAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.stoken;
                        autorizacion.Sign = this.ssign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x38;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.sAFIPTest.Service servicio = new WSAFIPFE.sAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.sAFIPTest.SEGResponse_Tipo_IVA oRespuesta = servicio.SEGGetPARAM_Tipo_IVA(autorizacion);
                            this.iberrcode = oRespuesta.SEGErr.ErrCode;
                            this.strberrmsg = oRespuesta.SEGErr.ErrMsg;
                            this.iberrcode = oRespuesta.SEGErr.ErrCode;
                            this.strberrmsg = oRespuesta.SEGErr.ErrMsg;
                            if (this.iserrcode == 0)
                            {
                                this.isTipoIvaItemCantidad = oRespuesta.SEGResultGet.Length;
                                value = this.isTipoIvaItemCantidad;
                                this.asTipoIva = new sTipoIva[(value - 1) + 1];
                                int VB_t_i4_L0 = this.sTipoIvaItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.asTipoIva[nContador].id = oRespuesta.SEGResultGet[nContador].IVA_Id;
                                    this.asTipoIva[nContador].ds = oRespuesta.SEGResultGet[nContador].IVA_Ds;
                                    this.asTipoIva[nContador].Vig_Desde = oRespuesta.SEGResultGet[nContador].IVA_vig_desde;
                                    this.asTipoIva[nContador].Vig_hasta = oRespuesta.SEGResultGet[nContador].IVA_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x206;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.sAFIP.ClsSEGAuthRequest autorizacion = new WSAFIPFE.sAFIP.ClsSEGAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.stoken;
                    autorizacion.Sign = this.ssign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x38;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.sAFIP.Service servicio = new WSAFIPFE.sAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.sAFIP.SEGResponse_Tipo_IVA oRespuesta = servicio.SEGGetPARAM_Tipo_IVA(autorizacion);
                        this.iberrcode = oRespuesta.SEGErr.ErrCode;
                        this.strberrmsg = oRespuesta.SEGErr.ErrMsg;
                        this.iberrcode = oRespuesta.SEGErr.ErrCode;
                        this.strberrmsg = oRespuesta.SEGErr.ErrMsg;
                        if (this.iserrcode == 0)
                        {
                            this.isTipoIvaItemCantidad = oRespuesta.SEGResultGet.Length;
                            value = this.isTipoIvaItemCantidad;
                            this.asTipoIva = new sTipoIva[(value - 1) + 1];
                            int VB_t_i4_L1 = this.sTipoIvaItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.asTipoIva[nContador].id = oRespuesta.SEGResultGet[nContador].IVA_Id;
                                this.asTipoIva[nContador].ds = oRespuesta.SEGResultGet[nContador].IVA_Ds;
                                this.asTipoIva[nContador].Vig_Desde = oRespuesta.SEGResultGet[nContador].IVA_vig_desde;
                                this.asTipoIva[nContador].Vig_hasta = oRespuesta.SEGResultGet[nContador].IVA_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x206;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        internal bool sObtenerTicket()
        {
            this.Identificador = "0";
            bool bResultado = false;
            if ((this.sLicenciaValida & this.get_LicenciaFechaValida(DateTime.Today)) | (this.Modo == modoFiscal.Test))
            {
                string strDireccionServicio = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
                if (this.Modo == modoFiscal.Fiscal)
                {
                    strDireccionServicio = this.DireccionServicio;
                }
                ticket oTicket = new ticket();
                if (this.ProxyUserName != "")
                {
                    oTicket.ProxyDomain = this.ProxyDomain;
                    oTicket.ProxyHost = this.ProxyHost;
                    oTicket.ProxyPort = this.ProxyPort;
                    oTicket.ProxyUserName = this.ProxyUserName;
                    oTicket.ProxyUserPassword = this.ProxyUserPassword;
                }
                string strServicio = "wsseg";
                try
                {
                    string strTicketRespuesta = oTicket.ObtenerLoginTicketResponse(strServicio, strDireccionServicio, this.RutaArchivoCertificado, this.Modo, Conversions.ToLong(this.Identificador));
                    this.strUltimoPedidoXML = oTicket.UltimoPedidoXML.OuterXml;
                    this.strUltimoPedidoFirmadoXML = oTicket.UltimoPedidoFirmadoXML;
                    this.strUltimaRespuestaXML = strTicketRespuesta;
                    if (oTicket.lastErrorNumero == 0)
                    {
                        this.Identificador = oTicket.UniqueId.ToString();
                        this.stoken = oTicket.Token;
                        this.ssign = oTicket.Sign;
                        this.tsTicketHora = oTicket.GenerationTime;
                        this.tsTicketHoraVencimiento = oTicket.ExpirationTime;
                        this.strUltimoMensajeError = "";
                        this.iUltimoNumeroError = 0;
                        bResultado = true;
                    }
                    else
                    {
                        this.strUltimoMensajeError = oTicket.lastErrorMensaje;
                        this.iUltimoNumeroError = oTicket.lastErrorNumero;
                    }
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 1;
                    ProjectData.ClearProjectError();
                }
            }
            else
            {
                this.iUltimoNumeroError = 5;
                this.strUltimoMensajeError = "Licencia no v\x00e1lida";
            }
            this.bsTicketValido = bResultado;
            return bResultado;
        }

        public bool sObtenerTicketAcceso()
        {
            return this.sObtenerTicket();
        }

        public bool sRegistrar(int nPuntoVenta, int nTipoComprobante, string cIdentificador)
        {
            int nNumero = this.SEGGetLastCMP(nPuntoVenta, nTipoComprobante) + 1;
            return this.sRegistrarConNumero(nPuntoVenta, nTipoComprobante, cIdentificador, nNumero);
        }

        public bool sRegistrarConNumero(int nPuntoVenta, int nTipoComprobante, string cIdentificador, int nNumero)
        {
            int nContador;
            this.iserrcode = 0;
            this.strserrmsg = "";
            bool bResultado = true;
            this.strsRespuestaCAE = "";
            this.strsRespuestaFch_cbte = "";
            this.strsRespuestaObs = "";
            this.strsRespuestaReProceso = "";
            this.strsRespuestaResultado = "";
            this.strsRespuestafch_venc_cae = "";
            this.isRespuestaId = Conversions.ToLong("0");
            this.isEventCode = 0;
            this.strsEventMsg = "";
            this.isRespuestaCbte_numero = 0;
            if (this.Modo == modoFiscal.Test)
            {
                if (!this.sTicketValido)
                {
                    return false;
                }
                WSAFIPFE.sAFIPTest.ClsSEGAuthRequest autorizacion = new WSAFIPFE.sAFIPTest.ClsSEGAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.stoken;
                    autorizacion.Sign = this.ssign;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.iUltimoNumeroError = 520;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.sAFIPTest.ClsSEGRequest oPedido = new WSAFIPFE.sAFIPTest.ClsSEGRequest();
                    WSAFIPFE.sAFIPTest.Item[] opedidoitems = new WSAFIPFE.sAFIPTest.Item[(this.sItemCantidad - 1) + 1];
                    if (cIdentificador.Trim() == "")
                    {
                        oPedido.Id = Conversions.ToLong("0");
                    }
                    else
                    {
                        oPedido.Id = Conversions.ToLong(cIdentificador);
                    }
                    this.isRespuestaCbte_numero = nNumero;
                    oPedido.Cbte_nro = nNumero;
                    oPedido.Fecha_cbte = this.sFecha_cbte;
                    oPedido.Imp_iibb = this.sImp_iibb;
                    oPedido.Imp_internos = this.sImp_internos;
                    oPedido.Imp_moneda_ctz = this.sImp_moneda_ctz;
                    oPedido.Imp_moneda_Id = this.sImp_moneda_id;
                    oPedido.Imp_neto = this.sImp_neto;
                    oPedido.Imp_op_ex = this.simp_op_ex;
                    oPedido.Imp_perc = this.sImp_perc;
                    oPedido.Imp_perc_mun = this.sImp_perc_mun;
                    oPedido.Imp_total = this.sImp_total;
                    oPedido.Impto_liq = this.simpto_liq;
                    oPedido.Imp_tot_conc = this.sImp_total_conc;
                    oPedido.Impto_liq_rni = this.simpto_liq_rni;
                    oPedido.Nro_doc = Conversions.ToLong(this.sNro_doc);
                    oPedido.Punto_vta = nPuntoVenta;
                    oPedido.Tipo_cbte = (short) nTipoComprobante;
                    oPedido.Tipo_doc = (short) this.sTipo_Doc;
                    oPedido.Imp_otrib_prov = this.sImp_otrib_prov;
                    int VB_t_i4_L0 = this.iItemCantidad - 1;
                    for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                    {
                        WSAFIPFE.sAFIPTest.Item oPedidoitem = new WSAFIPFE.sAFIPTest.Item();
                        this.IndiceItem = nContador;
                        oPedidoitem.Imp_bonif = this.sItemimp_bonif;
                        oPedidoitem.Imp_total = this.sItemimp_total;
                        oPedidoitem.Ds = this.sItemds;
                        oPedidoitem.Iva_id = (short) this.sItemIva_id;
                        oPedidoitem.Poliza = this.sItemPoliza;
                        oPedidoitem.Precio_uni = this.sItemprecio_uni;
                        oPedidoitem.Qty = this.sItemqty;
                        oPedidoitem.Endoso = this.sItemEndoso;
                        oPedidoitem.Imp_moneda_vaseg = this.sItemimp_moneda_vaseg;
                        oPedidoitem.Imp_valor_aseg = this.sItemimp_valor_aseg;
                        opedidoitems[nContador] = oPedidoitem;
                    }
                    oPedido.Items = opedidoitems;
                    WSAFIPFE.sAFIPTest.Service servicio = new WSAFIPFE.sAFIPTest.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    if (this.ArchivoXMLEnviado != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.sAFIPTest.ClsSEGRequest));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                            writer1.Serialize((TextWriter) file1, oPedido);
                            file1.Close();
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception miEx = exception2;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    WSAFIPFE.sAFIPTest.SEGResponseAuthorize oRespuesta = servicio.SEGAuthorize(autorizacion, oPedido);
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                        return bResultado;
                    }
                    this.iserrcode = oRespuesta.SEGErr.ErrCode;
                    this.strserrmsg = oRespuesta.SEGErr.ErrMsg;
                    this.isEventCode = oRespuesta.SEGEvents.EventCode;
                    this.strsEventMsg = oRespuesta.SEGEvents.EventMsg;
                    if ((oRespuesta.SEGResultAuth.Cae == "NULL") | (oRespuesta.SEGResultAuth.Resultado != "A"))
                    {
                        bResultado = false;
                    }
                    this.strsRespuestaCAE = oRespuesta.SEGResultAuth.Cae;
                    this.strsRespuestaCUIT = oRespuesta.SEGResultAuth.Cuit.ToString();
                    this.strsRespuestaFch_cbte = oRespuesta.SEGResultAuth.Fch_cbte;
                    this.strsRespuestaObs = oRespuesta.SEGResultAuth.Obs;
                    this.strsRespuestaReProceso = oRespuesta.SEGResultAuth.Reproceso;
                    this.strsRespuestaResultado = oRespuesta.SEGResultAuth.Resultado;
                    this.strsRespuestafch_venc_cae = oRespuesta.SEGResultAuth.Fch_venc_Cae;
                    this.isRespuestaId = oRespuesta.SEGResultAuth.Id;
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.sAFIPTest.SEGResponseAuthorize));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception3)
                        {
                            ProjectData.SetProjectError(exception3);
                            Exception miEx = exception3;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                }
                return bResultado;
            }
            if (this.sTicketValido)
            {
                WSAFIPFE.sAFIP.ClsSEGAuthRequest autorizacion = new WSAFIPFE.sAFIP.ClsSEGAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.stoken;
                    autorizacion.Sign = this.ssign;
                }
                catch (Exception exception4)
                {
                    ProjectData.SetProjectError(exception4);
                    Exception ex = exception4;
                    this.iUltimoNumeroError = 520;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.sAFIP.ClsSEGRequest oPedido = new WSAFIPFE.sAFIP.ClsSEGRequest();
                    WSAFIPFE.sAFIP.Item[] opedidoitems = new WSAFIPFE.sAFIP.Item[(this.sItemCantidad - 1) + 1];
                    if (cIdentificador.Trim() == "")
                    {
                        oPedido.Id = Conversions.ToLong("0");
                    }
                    else
                    {
                        oPedido.Id = Conversions.ToLong(cIdentificador);
                    }
                    this.isRespuestaCbte_numero = nNumero;
                    oPedido.Cbte_nro = nNumero;
                    oPedido.Fecha_cbte = this.sFecha_cbte;
                    oPedido.Imp_iibb = this.sImp_iibb;
                    oPedido.Imp_internos = this.sImp_internos;
                    oPedido.Imp_moneda_ctz = this.sImp_moneda_ctz;
                    oPedido.Imp_moneda_Id = this.sImp_moneda_id;
                    oPedido.Imp_neto = this.sImp_neto;
                    oPedido.Imp_op_ex = this.simp_op_ex;
                    oPedido.Imp_perc = this.sImp_perc;
                    oPedido.Imp_perc_mun = this.sImp_perc_mun;
                    oPedido.Imp_total = this.sImp_total;
                    oPedido.Impto_liq = this.simpto_liq;
                    oPedido.Imp_tot_conc = this.sImp_total_conc;
                    oPedido.Impto_liq_rni = this.simpto_liq_rni;
                    oPedido.Nro_doc = Conversions.ToLong(this.sNro_doc);
                    oPedido.Punto_vta = nPuntoVenta;
                    oPedido.Tipo_cbte = (short) nTipoComprobante;
                    oPedido.Tipo_doc = (short) this.sTipo_Doc;
                    oPedido.Imp_otrib_prov = this.sImp_otrib_prov;
                    int VB_t_i4_L1 = this.iItemCantidad - 1;
                    for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                    {
                        WSAFIPFE.sAFIP.Item oPedidoitem = new WSAFIPFE.sAFIP.Item();
                        this.IndiceItem = nContador;
                        oPedidoitem.Imp_bonif = this.sItemimp_bonif;
                        oPedidoitem.Imp_total = this.sItemimp_total;
                        oPedidoitem.Ds = this.sItemds;
                        oPedidoitem.Iva_id = (short) this.sItemIva_id;
                        oPedidoitem.Poliza = this.sItemPoliza;
                        oPedidoitem.Precio_uni = this.sItemprecio_uni;
                        oPedidoitem.Qty = this.sItemqty;
                        oPedidoitem.Endoso = this.sItemEndoso;
                        oPedidoitem.Imp_moneda_vaseg = this.sItemimp_moneda_vaseg;
                        oPedidoitem.Imp_valor_aseg = this.sItemimp_valor_aseg;
                        opedidoitems[nContador] = oPedidoitem;
                    }
                    oPedido.Items = opedidoitems;
                    WSAFIPFE.sAFIP.Service servicio = new WSAFIPFE.sAFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    if (this.ArchivoXMLEnviado != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.sAFIP.ClsSEGRequest));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                            writer1.Serialize((TextWriter) file1, oPedido);
                            file1.Close();
                        }
                        catch (Exception exception5)
                        {
                            ProjectData.SetProjectError(exception5);
                            Exception miEx = exception5;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    WSAFIPFE.sAFIP.SEGResponseAuthorize oRespuesta = servicio.SEGAuthorize(autorizacion, oPedido);
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                        return bResultado;
                    }
                    this.iserrcode = oRespuesta.SEGErr.ErrCode;
                    this.strserrmsg = oRespuesta.SEGErr.ErrMsg;
                    this.isEventCode = oRespuesta.SEGEvents.EventCode;
                    this.strsEventMsg = oRespuesta.SEGEvents.EventMsg;
                    if ((oRespuesta.SEGResultAuth.Cae == "NULL") | (oRespuesta.SEGResultAuth.Resultado != "A"))
                    {
                        bResultado = false;
                    }
                    this.strsRespuestaCAE = oRespuesta.SEGResultAuth.Cae;
                    this.strsRespuestaCUIT = oRespuesta.SEGResultAuth.Cuit.ToString();
                    this.strsRespuestaFch_cbte = oRespuesta.SEGResultAuth.Fch_cbte;
                    this.strsRespuestaObs = oRespuesta.SEGResultAuth.Obs;
                    this.strsRespuestaReProceso = oRespuesta.SEGResultAuth.Reproceso;
                    this.strsRespuestaResultado = oRespuesta.SEGResultAuth.Resultado;
                    this.strsRespuestafch_venc_cae = oRespuesta.SEGResultAuth.Fch_venc_Cae;
                    this.isRespuestaId = oRespuesta.SEGResultAuth.Id;
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.sAFIP.SEGResponseAuthorize));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception6)
                        {
                            ProjectData.SetProjectError(exception6);
                            Exception miEx = exception6;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool VerificarLicencia(string strMail, string strPassword, string strDocumento, string strHoja, string strRutaArchivo)
        {
            bool bResultado = false;
            SCConexion conexion = new SCConexion();
            conexion.Mail = strMail;
            conexion.PassWord = strPassword;
            conexion.Documento = strDocumento;
            conexion.Hoja = strHoja;
            XmlSerializer xml = new XmlSerializer(typeof(SCConexion));
            ASCIIEncoding myEncoder = new ASCIIEncoding();
            MemoryStream ms = new MemoryStream();
            xml.Serialize((Stream) ms, conexion);
            ms.Position = 0L;
            string cxml = new StreamReader(ms).ReadToEnd();
            conexion = null;
            bResultado = new SCActivador.SCSeguridad().Empaquetar(cxml, strRutaArchivo);
            return bResultado;
        }

        public bool xDummy()
        {
            bool bResultado = true;
            this.strxRespuestaDummyDbServer = "";
            this.strxRespuestaDummyAuthServer = "";
            this.strxRespuestaDummyDbServer = "";
            if (this.Modo == modoFiscal.Test)
            {
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        WSAFIPFE.xAFIPTest.DummyResponse oRespuesta = servicio.FEXDummy();
                        this.strxRespuestaDummyDbServer = oRespuesta.DbServer;
                        this.strxRespuestaDummyAuthServer = oRespuesta.AuthServer;
                        this.strxRespuestaDummyAppServer = oRespuesta.AppServer;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 6;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            if (bResultado)
            {
                try
                {
                    WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.xDireccionServicioURL;
                    if (this.TimeOut != 0)
                    {
                        servicio.Timeout = this.TimeOut;
                    }
                    WSAFIPFE.xAFIP.DummyResponse oRespuesta = servicio.FEXDummy();
                    this.strxRespuestaDummyDbServer = oRespuesta.DbServer;
                    this.strxRespuestaDummyAuthServer = oRespuesta.AuthServer;
                    this.strxRespuestaDummyAppServer = oRespuesta.AppServer;
                }
                catch (Exception exception2)
                {
                    ProjectData.SetProjectError(exception2);
                    Exception ex = exception2;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 6;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
            }
            return bResultado;
        }

        public string xFECheck_Permiso(string strIdPermiso, int intDestinoMercaderia)
        {
            bool bResultado = true;
            string cResultado = "";
            this.IndiceItem = 0;
            if (this.xTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.xAFIPTest.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIPTest.ClsFEXAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.xtoken;
                        autorizacion.Sign = this.xsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.xAFIPTest.FEXResponse_CheckPermiso oRespuesta = servicio.FEXCheck_Permiso(autorizacion, strIdPermiso, intDestinoMercaderia);
                            this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                            this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                            if (oRespuesta.FEXResultGet == null)
                            {
                                return "";
                            }
                            cResultado = oRespuesta.FEXResultGet.Status;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return cResultado;
                }
                WSAFIPFE.xAFIP.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIP.ClsFEXAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.xtoken;
                    autorizacion.Sign = this.xsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.xDireccionServicioURL;
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        WSAFIPFE.xAFIP.FEXResponse_CheckPermiso oRespuesta = servicio.FEXCheck_Permiso(autorizacion, strIdPermiso, intDestinoMercaderia);
                        this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                        this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                        if (oRespuesta.FEXResultGet == null)
                        {
                            return "";
                        }
                        cResultado = oRespuesta.FEXResultGet.Status;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return cResultado;
            }
            bResultado = false;
            return cResultado;
        }

        public bool xFEGetCMP(int nPuntoVenta, int nTipoComprobante, int nNumeroComprobante)
        {
            Exception miEx;
            int nContador;
            this.ixerrcode = 0;
            this.strxerrmsg = "";
            bool bResultado = true;
            int nLimite = 1;
            if (this.Modo == modoFiscal.Test)
            {
                if (!this.xTicketValido)
                {
                    return false;
                }
                WSAFIPFE.xAFIPTest.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIPTest.ClsFEXAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.xtoken;
                    autorizacion.Sign = this.xsign;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.iUltimoNumeroError = 520;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    WSAFIPFE.xAFIPTest.ClsFEXGetCMP oPedido = new WSAFIPFE.xAFIPTest.ClsFEXGetCMP();
                    oPedido.Cbte_nro = nNumeroComprobante;
                    oPedido.Punto_vta = (short) nPuntoVenta;
                    oPedido.Tipo_cbte = (short) nTipoComprobante;
                    WSAFIPFE.xAFIPTest.FEXGetCMPResponse oRespuesta = servicio.FEXGetCMP(autorizacion, oPedido);
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.strUltimoMensajeError = "sin respuesta ";
                        this.iUltimoNumeroError = 0x207;
                        return bResultado;
                    }
                    this.strUltimoMensajeError = oRespuesta.FEXErr.ErrMsg;
                    this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                    this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                    this.ixEventCode = oRespuesta.FEXEvents.EventCode;
                    this.strxEventMsg = oRespuesta.FEXEvents.EventMsg;
                    this.iUltimoNumeroError = 0;
                    this.bItemCantidad = 0;
                    this.strxRespuestaCAE = "";
                    this.strxRespuestaMotivos_obs = "";
                    this.strxRespuestaReproceso = "";
                    this.strxRespuestaResultado = "";
                    this.strxRespuestaMonedaCtzFecha = "";
                    this.strxRespuestaFch_vence_cae = "";
                    this.strxRespuestaFch_cbte = Conversions.ToString(0);
                    if (oRespuesta.FEXResultGet != null)
                    {
                        this.strxRespuestaCAE = oRespuesta.FEXResultGet.Cae;
                        this.ixRespuestaCbte_numero = oRespuesta.FEXResultGet.Cbte_nro;
                        this.xCliente = oRespuesta.FEXResultGet.Cliente;
                        this.xCuit_pais_cliente = oRespuesta.FEXResultGet.Cuit_pais_cliente;
                        this.xDomicilio_cliente = oRespuesta.FEXResultGet.Domicilio_cliente;
                        this.xDst_cmp = oRespuesta.FEXResultGet.Dst_cmp;
                        this.strxFecha_cbte = oRespuesta.FEXResultGet.Fecha_cbte;
                        this.strxRespuestaFch_cbte = oRespuesta.FEXResultGet.Fecha_cbte;
                        this.strxRespuestaFch_vence_cae = oRespuesta.FEXResultGet.Fch_venc_Cae;
                        this.strxRespuestaFch_cbte_cae = oRespuesta.FEXResultGet.Fecha_cbte_cae;
                        this.xForma_pago = oRespuesta.FEXResultGet.Forma_pago;
                        this.ixRespuestaId = oRespuesta.FEXResultGet.Id;
                        this.xId_impositivo = oRespuesta.FEXResultGet.Id_impositivo;
                        this.xIdioma_cbte = Conversions.ToString((int) oRespuesta.FEXResultGet.Idioma_cbte);
                        this.xImp_total = oRespuesta.FEXResultGet.Imp_total;
                        this.xIncoTerms = oRespuesta.FEXResultGet.Incoterms;
                        this.xMoneda_ctz = oRespuesta.FEXResultGet.Moneda_ctz;
                        this.xMoneda_id = oRespuesta.FEXResultGet.Moneda_Id;
                        this.strxRespuestaMotivos_obs = oRespuesta.FEXResultGet.Motivos_Obs;
                        this.xObs = oRespuesta.FEXResultGet.Obs;
                        this.xObs_comerciales = oRespuesta.FEXResultGet.Obs_comerciales;
                        this.xPermiso_existente = oRespuesta.FEXResultGet.Permiso_existente;
                        this.xPunto_vta = oRespuesta.FEXResultGet.Punto_vta;
                        this.strxRespuestaResultado = oRespuesta.FEXResultGet.Resultado;
                        this.xtipo_cbte = oRespuesta.FEXResultGet.Tipo_cbte;
                        this.xtipo_expo = oRespuesta.FEXResultGet.Tipo_expo;
                        this.ixRespuestaTipo_cbte = oRespuesta.FEXResultGet.Tipo_cbte;
                        this.ixRespuestaPunto_vta = oRespuesta.FEXResultGet.Punto_vta;
                        if (oRespuesta.FEXResultGet.Items == null)
                        {
                            this.xItemCantidad = 0;
                            this.axItems = new xItem[1];
                            bResultado = false;
                        }
                        else
                        {
                            nLimite = 0;
                            if (oRespuesta.FEXResultGet.Items != null)
                            {
                                int VB_t_i4_L0 = oRespuesta.FEXResultGet.Items.Length - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    try
                                    {
                                        if (oRespuesta.FEXResultGet.Items[nContador].Pro_codigo != null)
                                        {
                                            nLimite++;
                                        }
                                    }
                                    catch (Exception exception2)
                                    {
                                        ProjectData.SetProjectError(exception2);
                                        miEx = exception2;
                                        ProjectData.ClearProjectError();
                                    }
                                }
                            }
                            this.xItemCantidad = nLimite;
                            int value = this.xItemCantidad;
                            this.axItems = new xItem[(value - 1) + 1];
                            int VB_t_i4_L1 = this.xItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.xIndiceItem = nContador;
                                this.xITEMPro_codigo = oRespuesta.FEXResultGet.Items[nContador].Pro_codigo;
                                this.xITEMPro_ds = oRespuesta.FEXResultGet.Items[nContador].Pro_ds;
                                this.xITEMPro_precio_uni = oRespuesta.FEXResultGet.Items[nContador].Pro_precio_uni;
                                this.xITEMPro_qty = oRespuesta.FEXResultGet.Items[nContador].Pro_qty;
                                this.xITEMPro_precio_item = oRespuesta.FEXResultGet.Items[nContador].Pro_total_item;
                                this.xITEMPro_umed = oRespuesta.FEXResultGet.Items[nContador].Pro_umed;
                            }
                            nLimite = 0;
                            if (oRespuesta.FEXResultGet.Permisos != null)
                            {
                                int VB_t_i4_L2 = oRespuesta.FEXResultGet.Permisos.Length - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                                {
                                    try
                                    {
                                        if (oRespuesta.FEXResultGet.Permisos[nContador].Id_permiso != null)
                                        {
                                            nLimite++;
                                        }
                                    }
                                    catch (Exception exception3)
                                    {
                                        ProjectData.SetProjectError(exception3);
                                        miEx = exception3;
                                        ProjectData.ClearProjectError();
                                    }
                                }
                            }
                            this.xPermisoCantidad = nLimite;
                            value = this.xPermisoCantidad;
                            this.axPermisos = new xPermisos[(value - 1) + 1];
                            int VB_t_i4_L3 = this.xPermisoCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                            {
                                this.xIndiceItem = nContador;
                                this.xPERMISO_id_permiso = oRespuesta.FEXResultGet.Permisos[nContador].Id_permiso;
                                this.xPERMISO_dst_merc = oRespuesta.FEXResultGet.Permisos[nContador].Dst_merc;
                            }
                            nLimite = 0;
                            if (oRespuesta.FEXResultGet.Cmps_asoc == null)
                            {
                                nLimite = 0;
                            }
                            else
                            {
                                int VB_t_i4_L4 = oRespuesta.FEXResultGet.Cmps_asoc.Length - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                                {
                                    try
                                    {
                                        if (oRespuesta.FEXResultGet.Cmps_asoc[nContador].Cbte_nro == 0L)
                                        {
                                            nLimite++;
                                        }
                                        else
                                        {
                                            nLimite++;
                                        }
                                    }
                                    catch (Exception exception4)
                                    {
                                        ProjectData.SetProjectError(exception4);
                                        miEx = exception4;
                                        ProjectData.ClearProjectError();
                                    }
                                }
                            }
                            this.xCmps_asocCantidad = nLimite;
                            value = this.xCmps_asocCantidad;
                            this.axCmps_asocs = new xCmps_asoc[(value - 1) + 1];
                            int VB_t_i4_L5 = this.xCmps_asocCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                            {
                                this.xIndiceItem = nContador;
                                this.xCMPS_ASOC_cbte_nro = (int) oRespuesta.FEXResultGet.Cmps_asoc[nContador].Cbte_nro;
                                this.xCMPS_ASOC_cbte_punto_venta = oRespuesta.FEXResultGet.Cmps_asoc[nContador].Cbte_punto_vta;
                                this.xCMPS_ASOC_cbte_tipo = oRespuesta.FEXResultGet.Cmps_asoc[nContador].CBte_tipo;
                            }
                        }
                    }
                    else
                    {
                        bResultado = false;
                    }
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.xAFIPTest.FEXGetCMPResponse));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception5)
                        {
                            ProjectData.SetProjectError(exception5);
                            miEx = exception5;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                }
                return bResultado;
            }
            if (!this.xTicketValido)
            {
                return false;
            }
            WSAFIPFE.xAFIP.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIP.ClsFEXAuthRequest();
            try
            {
                autorizacion.Cuit = Conversions.ToLong(this.cuit);
                autorizacion.Token = this.xtoken;
                autorizacion.Sign = this.xsign;
            }
            catch (Exception exception6)
            {
                ProjectData.SetProjectError(exception6);
                Exception ex = exception6;
                this.iUltimoNumeroError = 520;
                this.strUltimoMensajeError = ex.Message;
                bResultado = false;
                ProjectData.ClearProjectError();
            }
            if (bResultado)
            {
                WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                if (this.ProxyUserName != "")
                {
                    NetworkCredential cr = new NetworkCredential();
                    WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                    cr.Domain = this.ProxyDomain;
                    cr.Password = this.ProxyUserPassword;
                    cr.UserName = this.ProxyUserName;
                    pr.Credentials = cr;
                    servicio.Proxy = pr;
                }
                servicio.Url = this.xDireccionServicioURL;
                if (this.TimeOut != 0)
                {
                    servicio.Timeout = this.TimeOut;
                }
                WSAFIPFE.xAFIP.ClsFEXGetCMP oPedido = new WSAFIPFE.xAFIP.ClsFEXGetCMP();
                oPedido.Cbte_nro = nNumeroComprobante;
                oPedido.Punto_vta = (short) nPuntoVenta;
                oPedido.Tipo_cbte = (short) nTipoComprobante;
                WSAFIPFE.xAFIP.FEXGetCMPResponse oRespuesta = servicio.FEXGetCMP(autorizacion, oPedido);
                if (oRespuesta == null)
                {
                    bResultado = false;
                    this.strUltimoMensajeError = "sin respuesta ";
                    this.iUltimoNumeroError = 0x207;
                    return bResultado;
                }
                this.strUltimoMensajeError = oRespuesta.FEXErr.ErrMsg;
                this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                this.ixEventCode = oRespuesta.FEXEvents.EventCode;
                this.strxEventMsg = oRespuesta.FEXEvents.EventMsg;
                this.iUltimoNumeroError = 0;
                this.bItemCantidad = 0;
                this.strxRespuestaCAE = "";
                this.strxRespuestaMotivos_obs = "";
                this.strxRespuestaReproceso = "";
                this.strxRespuestaResultado = "";
                this.strxRespuestaMonedaCtzFecha = "";
                this.strxRespuestaFch_vence_cae = "";
                this.strxRespuestaFch_cbte = Conversions.ToString(0);
                if (oRespuesta.FEXResultGet != null)
                {
                    this.strxRespuestaCAE = oRespuesta.FEXResultGet.Cae;
                    this.ixRespuestaCbte_numero = oRespuesta.FEXResultGet.Cbte_nro;
                    this.xCliente = oRespuesta.FEXResultGet.Cliente;
                    this.xCuit_pais_cliente = oRespuesta.FEXResultGet.Cuit_pais_cliente;
                    this.xDomicilio_cliente = oRespuesta.FEXResultGet.Domicilio_cliente;
                    this.xDst_cmp = oRespuesta.FEXResultGet.Dst_cmp;
                    this.strxFecha_cbte = oRespuesta.FEXResultGet.Fecha_cbte;
                    this.strxRespuestaFch_cbte = oRespuesta.FEXResultGet.Fecha_cbte;
                    this.strxRespuestaFch_vence_cae = oRespuesta.FEXResultGet.Fch_venc_Cae;
                    this.strxRespuestaFch_cbte_cae = oRespuesta.FEXResultGet.Fecha_cbte_cae;
                    this.xForma_pago = oRespuesta.FEXResultGet.Forma_pago;
                    this.ixRespuestaId = oRespuesta.FEXResultGet.Id;
                    this.xId_impositivo = oRespuesta.FEXResultGet.Id_impositivo;
                    this.xIdioma_cbte = Conversions.ToString((int) oRespuesta.FEXResultGet.Idioma_cbte);
                    this.xImp_total = oRespuesta.FEXResultGet.Imp_total;
                    this.xIncoTerms = oRespuesta.FEXResultGet.Incoterms;
                    this.xMoneda_ctz = oRespuesta.FEXResultGet.Moneda_ctz;
                    this.xMoneda_id = oRespuesta.FEXResultGet.Moneda_Id;
                    this.strxRespuestaMotivos_obs = oRespuesta.FEXResultGet.Motivos_Obs;
                    this.xObs = oRespuesta.FEXResultGet.Obs;
                    this.xObs_comerciales = oRespuesta.FEXResultGet.Obs_comerciales;
                    this.xPermiso_existente = oRespuesta.FEXResultGet.Permiso_existente;
                    this.xPunto_vta = oRespuesta.FEXResultGet.Punto_vta;
                    this.strxRespuestaResultado = oRespuesta.FEXResultGet.Resultado;
                    this.xtipo_cbte = oRespuesta.FEXResultGet.Tipo_cbte;
                    this.xtipo_expo = oRespuesta.FEXResultGet.Tipo_expo;
                    this.ixRespuestaTipo_cbte = oRespuesta.FEXResultGet.Tipo_cbte;
                    this.ixRespuestaPunto_vta = oRespuesta.FEXResultGet.Punto_vta;
                    if (oRespuesta.FEXResultGet.Items == null)
                    {
                        this.xItemCantidad = 0;
                        this.axItems = new xItem[1];
                        bResultado = false;
                    }
                    else
                    {
                        nLimite = 0;
                        if (oRespuesta.FEXResultGet.Items != null)
                        {
                            int VB_t_i4_L6 = oRespuesta.FEXResultGet.Items.Length - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L6; nContador++)
                            {
                                try
                                {
                                    if (oRespuesta.FEXResultGet.Items[nContador].Pro_codigo != null)
                                    {
                                        nLimite++;
                                    }
                                }
                                catch (Exception exception7)
                                {
                                    ProjectData.SetProjectError(exception7);
                                    miEx = exception7;
                                    ProjectData.ClearProjectError();
                                }
                            }
                        }
                        this.xItemCantidad = nLimite;
                        int value = this.xItemCantidad;
                        this.axItems = new xItem[(value - 1) + 1];
                        int VB_t_i4_L7 = this.xItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L7; nContador++)
                        {
                            this.xIndiceItem = nContador;
                            this.xITEMPro_codigo = oRespuesta.FEXResultGet.Items[nContador].Pro_codigo;
                            this.xITEMPro_ds = oRespuesta.FEXResultGet.Items[nContador].Pro_ds;
                            this.xITEMPro_precio_uni = oRespuesta.FEXResultGet.Items[nContador].Pro_precio_uni;
                            this.xITEMPro_qty = oRespuesta.FEXResultGet.Items[nContador].Pro_qty;
                            this.xITEMPro_precio_item = oRespuesta.FEXResultGet.Items[nContador].Pro_total_item;
                            this.xITEMPro_umed = oRespuesta.FEXResultGet.Items[nContador].Pro_umed;
                        }
                        nLimite = 0;
                        if (oRespuesta.FEXResultGet.Permisos != null)
                        {
                            int VB_t_i4_L8 = oRespuesta.FEXResultGet.Permisos.Length - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L8; nContador++)
                            {
                                try
                                {
                                    if (oRespuesta.FEXResultGet.Permisos[nContador].Id_permiso != null)
                                    {
                                        nLimite++;
                                    }
                                }
                                catch (Exception exception8)
                                {
                                    ProjectData.SetProjectError(exception8);
                                    miEx = exception8;
                                    ProjectData.ClearProjectError();
                                }
                            }
                        }
                        this.xPermisoCantidad = nLimite;
                        value = this.xPermisoCantidad;
                        this.axPermisos = new xPermisos[(value - 1) + 1];
                        int VB_t_i4_L9 = this.xPermisoCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L9; nContador++)
                        {
                            this.xIndiceItem = nContador;
                            this.xPERMISO_id_permiso = oRespuesta.FEXResultGet.Permisos[nContador].Id_permiso;
                            this.xPERMISO_dst_merc = oRespuesta.FEXResultGet.Permisos[nContador].Dst_merc;
                        }
                        nLimite = 0;
                        if (oRespuesta.FEXResultGet.Cmps_asoc == null)
                        {
                            nLimite = 0;
                        }
                        else
                        {
                            int VB_t_i4_L10 = oRespuesta.FEXResultGet.Cmps_asoc.Length - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L10; nContador++)
                            {
                                try
                                {
                                    if (oRespuesta.FEXResultGet.Cmps_asoc[nContador].Cbte_nro == 0L)
                                    {
                                        nLimite++;
                                    }
                                    else
                                    {
                                        nLimite++;
                                    }
                                }
                                catch (Exception exception9)
                                {
                                    ProjectData.SetProjectError(exception9);
                                    miEx = exception9;
                                    ProjectData.ClearProjectError();
                                }
                            }
                        }
                        this.xCmps_asocCantidad = nLimite;
                        value = this.xCmps_asocCantidad;
                        this.axCmps_asocs = new xCmps_asoc[(value - 1) + 1];
                        int VB_t_i4_L11 = this.xCmps_asocCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L11; nContador++)
                        {
                            this.xIndiceItem = nContador;
                            this.xCMPS_ASOC_cbte_nro = (int) oRespuesta.FEXResultGet.Cmps_asoc[nContador].Cbte_nro;
                            this.xCMPS_ASOC_cbte_punto_venta = oRespuesta.FEXResultGet.Cmps_asoc[nContador].Cbte_punto_vta;
                            this.xCMPS_ASOC_cbte_tipo = oRespuesta.FEXResultGet.Cmps_asoc[nContador].CBte_tipo;
                        }
                    }
                }
                else
                {
                    bResultado = false;
                }
                if (this.ArchivoXMLRecibido != "")
                {
                    try
                    {
                        XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.xAFIP.FEXGetCMPResponse));
                        StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                        writer1.Serialize((TextWriter) file1, oRespuesta);
                        file1.Close();
                    }
                    catch (Exception exception10)
                    {
                        ProjectData.SetProjectError(exception10);
                        miEx = exception10;
                        this.strArchivoXMLError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                }
            }
            return bResultado;
        }

        public bool xFEGetCMPS(int nPuntoVenta, int nTipoComprobante, string cNumeroComprobante)
        {
            long nNumeroComprobante = Conversions.ToLong(cNumeroComprobante);
            return this.xFEGetCMP(nPuntoVenta, nTipoComprobante, (int) nNumeroComprobante);
        }

        public string xFEGetLast_ID()
        {
            bool bResultado = true;
            string cResultado = "";
            this.ixerrcode = 0;
            this.strxerrmsg = "";
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            if (this.xTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.xAFIPTest.ClsFEXAuthRequest oparametro = new WSAFIPFE.xAFIPTest.ClsFEXAuthRequest();
                            oparametro.Cuit = Conversions.ToLong(this.cuit);
                            oparametro.Sign = this.xsign;
                            oparametro.Token = this.xtoken;
                            WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.xAFIPTest.FEXResponse_LastID oRespuesta = servicio.FEXGetLast_ID(oparametro);
                            this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                            this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                            cResultado = oRespuesta.FEXResultGet.Id.ToString();
                            this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                            this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                            this.strUltimoMensajeError = oRespuesta.FEXErr.ErrMsg;
                            this.iUltimoNumeroError = oRespuesta.FEXErr.ErrCode;
                        }
                        catch (Exception exception1)
                        {
                            ProjectData.SetProjectError(exception1);
                            Exception ex = exception1;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x206;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return cResultado;
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.xAFIP.ClsFEXAuthRequest oparametro = new WSAFIPFE.xAFIP.ClsFEXAuthRequest();
                        oparametro.Cuit = Conversions.ToLong(this.cuit);
                        oparametro.Sign = this.xsign;
                        oparametro.Token = this.xtoken;
                        WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.xDireccionServicioURL;
                        WSAFIPFE.xAFIP.FEXResponse_LastID oRespuesta = servicio.FEXGetLast_ID(oparametro);
                        this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                        this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                        cResultado = oRespuesta.FEXResultGet.Id.ToString();
                        this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                        this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                        this.strUltimoMensajeError = oRespuesta.FEXErr.ErrMsg;
                        this.iUltimoNumeroError = oRespuesta.FEXErr.ErrCode;
                    }
                    catch (Exception exception2)
                    {
                        ProjectData.SetProjectError(exception2);
                        Exception ex = exception2;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x206;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return cResultado;
            }
            bResultado = false;
            return cResultado;
        }

        public int xFEGetLastCMP(int nPuntoVenta, int nTipoComprobante)
        {
            bool bResultado = true;
            int nResultado = 0;
            this.ixerrcode = 0;
            this.strxerrmsg = "";
            this.iUltimoNumeroError = 0;
            this.strUltimoMensajeError = "";
            if (this.xTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.xAFIPTest.ClsFEX_LastCMP oparametro = new WSAFIPFE.xAFIPTest.ClsFEX_LastCMP();
                            oparametro.Cuit = Conversions.ToLong(this.cuit);
                            oparametro.Pto_venta = (short) nPuntoVenta;
                            oparametro.Sign = this.xsign;
                            oparametro.Tipo_cbte = (short) nTipoComprobante;
                            oparametro.Token = this.xtoken;
                            WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.xAFIPTest.FEXResponseLast_CMP oRespuesta = servicio.FEXGetLast_CMP(oparametro);
                            this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                            this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                            this.iUltimoNumeroError = oRespuesta.FEXErr.ErrCode;
                            this.strUltimoMensajeError = oRespuesta.FEXErr.ErrMsg;
                            if (oRespuesta.FEXResult_LastCMP == null)
                            {
                                return 0;
                            }
                            nResultado = (int) oRespuesta.FEXResult_LastCMP.Cbte_nro;
                        }
                        catch (Exception exception1)
                        {
                            ProjectData.SetProjectError(exception1);
                            Exception ex = exception1;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x206;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return nResultado;
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.xAFIP.ClsFEX_LastCMP oparametro = new WSAFIPFE.xAFIP.ClsFEX_LastCMP();
                        oparametro.Cuit = Conversions.ToLong(this.cuit);
                        oparametro.Pto_venta = (short) nPuntoVenta;
                        oparametro.Sign = this.xsign;
                        oparametro.Tipo_cbte = (short) nTipoComprobante;
                        oparametro.Token = this.xtoken;
                        WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.xDireccionServicioURL;
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        WSAFIPFE.xAFIP.FEXResponseLast_CMP oRespuesta = servicio.FEXGetLast_CMP(oparametro);
                        this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                        this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                        this.iUltimoNumeroError = oRespuesta.FEXErr.ErrCode;
                        this.strUltimoMensajeError = oRespuesta.FEXErr.ErrMsg;
                        if (oRespuesta.FEXResult_LastCMP == null)
                        {
                            return 0;
                        }
                        nResultado = (int) oRespuesta.FEXResult_LastCMP.Cbte_nro;
                    }
                    catch (Exception exception2)
                    {
                        ProjectData.SetProjectError(exception2);
                        Exception ex = exception2;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x206;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return nResultado;
            }
            bResultado = false;
            return nResultado;
        }

        public double xFEGetPARAM_CTZ(string strMon_id)
        {
            double nResultado = 0.0;
            bool bResultado = true;
            this.IndiceItem = 0;
            this.nxRespuestaMonedaCtz = 0.0;
            this.strxRespuestaMonedaCtzFecha = "";
            this.strUltimaRespuestaXML = "";
            this.ixerrcode = 0;
            this.strxerrmsg = "";
            this.ixEventCode = 0;
            this.strxEventMsg = "";
            this.iUltimoNumeroError = 0;
            if (this.xTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.xAFIPTest.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIPTest.ClsFEXAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.xtoken;
                        autorizacion.Sign = this.xsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.xAFIPTest.FEXResponse_Ctz oRespuesta = servicio.FEXGetPARAM_Ctz(autorizacion, strMon_id);
                            if (oRespuesta.FEXResultGet == null)
                            {
                                this.nxRespuestaMonedaCtz = 0.0;
                                this.strxRespuestaMonedaCtzFecha = "";
                            }
                            else
                            {
                                this.nxRespuestaMonedaCtz = oRespuesta.FEXResultGet.Mon_ctz;
                                this.strxRespuestaMonedaCtzFecha = oRespuesta.FEXResultGet.Mon_fecha;
                            }
                            this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                            this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                            if (oRespuesta.FEXEvents != null)
                            {
                                this.ixEventCode = oRespuesta.FEXEvents.EventCode;
                                this.strxEventMsg = oRespuesta.FEXEvents.EventMsg;
                            }
                            if (this.ixerrcode == 0)
                            {
                                return oRespuesta.FEXResultGet.Mon_ctz;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x268;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return nResultado;
                }
                WSAFIPFE.xAFIP.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIP.ClsFEXAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.xtoken;
                    autorizacion.Sign = this.xsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.xDireccionServicioURL;
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        WSAFIPFE.xAFIP.FEXResponse_Ctz oRespuesta = servicio.FEXGetPARAM_Ctz(autorizacion, strMon_id);
                        if (oRespuesta.FEXResultGet == null)
                        {
                            this.nxRespuestaMonedaCtz = 0.0;
                            this.strxRespuestaMonedaCtzFecha = "";
                        }
                        else
                        {
                            this.nxRespuestaMonedaCtz = oRespuesta.FEXResultGet.Mon_ctz;
                            this.strxRespuestaMonedaCtzFecha = oRespuesta.FEXResultGet.Mon_fecha;
                        }
                        this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                        this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                        if (oRespuesta.FEXEvents != null)
                        {
                            this.ixEventCode = oRespuesta.FEXEvents.EventCode;
                            this.strxEventMsg = oRespuesta.FEXEvents.EventMsg;
                        }
                        if (this.ixerrcode == 0)
                        {
                            return oRespuesta.FEXResultGet.Mon_ctz;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x268;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return nResultado;
            }
            bResultado = false;
            return nResultado;
        }

        public double xFEGetPARAM_CTZS(string strMon_ids)
        {
            double xFEGetPARAM_CTZS;
            string strMon_id = strMon_ids;
            if (strMon_id.Length < 3)
            {
                strMon_id = "0" + strMon_id;
            }
            if (strMon_id.Length < 3)
            {
                strMon_id = "0" + strMon_id;
            }
            double nResultado = 0.0;
            nResultado = this.xFEGetPARAM_CTZ(strMon_id);
            return xFEGetPARAM_CTZS;
        }

        public bool xFEGetPARAM_DST_CUIT()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ixCuitItemCantidad = 0;
            if (this.xTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.xAFIPTest.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIPTest.ClsFEXAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.xtoken;
                        autorizacion.Sign = this.xsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.xAFIPTest.FEXResponse_DST_cuit oRespuesta = servicio.FEXGetPARAM_DST_CUIT(autorizacion);
                            this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                            this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                            if (this.ixerrcode == 0)
                            {
                                this.ixCuitItemCantidad = oRespuesta.FEXResultGet.Length;
                                value = this.xCuitItemCantidad;
                                this.axPaisCuit = new xPaisCuit[(value - 1) + 1];
                                int VB_t_i4_L0 = this.ixCuitItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.axPaisCuit[nContador].cuit = Conversions.ToString(oRespuesta.FEXResultGet[nContador].DST_CUIT);
                                    this.axPaisCuit[nContador].ds = oRespuesta.FEXResultGet[nContador].DST_Ds;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.xAFIP.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIP.ClsFEXAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.xtoken;
                    autorizacion.Sign = this.xsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.xDireccionServicioURL;
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        WSAFIPFE.xAFIP.FEXResponse_DST_cuit oRespuesta = servicio.FEXGetPARAM_DST_CUIT(autorizacion);
                        this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                        this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                        if (this.ixerrcode == 0)
                        {
                            this.ixCuitItemCantidad = oRespuesta.FEXResultGet.Length;
                            value = this.xCuitItemCantidad;
                            this.axPaisCuit = new xPaisCuit[(value - 1) + 1];
                            int VB_t_i4_L1 = this.ixCuitItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.axPaisCuit[nContador].cuit = Conversions.ToString(oRespuesta.FEXResultGet[nContador].DST_CUIT);
                                this.axPaisCuit[nContador].ds = oRespuesta.FEXResultGet[nContador].DST_Ds;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool xFEGetPARAM_DST_PAIS()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ixPaisItemCantidad = 0;
            if (this.xTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.xAFIPTest.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIPTest.ClsFEXAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.xtoken;
                        autorizacion.Sign = this.xsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.xAFIPTest.FEXResponse_DST_pais oRespuesta = servicio.FEXGetPARAM_DST_pais(autorizacion);
                            this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                            this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                            if (this.ixerrcode == 0)
                            {
                                this.ixPaisItemCantidad = oRespuesta.FEXResultGet.Length;
                                value = this.xPaisItemCantidad;
                                this.axPais = new xPais[(value - 1) + 1];
                                int VB_t_i4_L0 = this.ixPaisItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.axPais[nContador].codigo = oRespuesta.FEXResultGet[nContador].DST_Codigo;
                                    this.axPais[nContador].ds = oRespuesta.FEXResultGet[nContador].DST_Ds;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.xAFIP.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIP.ClsFEXAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.xtoken;
                    autorizacion.Sign = this.xsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.xDireccionServicioURL;
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        WSAFIPFE.xAFIP.FEXResponse_DST_pais oRespuesta = servicio.FEXGetPARAM_DST_pais(autorizacion);
                        this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                        this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                        if (this.ixerrcode == 0)
                        {
                            this.ixPaisItemCantidad = oRespuesta.FEXResultGet.Length;
                            value = this.xPaisItemCantidad;
                            this.axPais = new xPais[(value - 1) + 1];
                            int VB_t_i4_L1 = this.ixPaisItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.axPais[nContador].codigo = oRespuesta.FEXResultGet[nContador].DST_Codigo;
                                this.axPais[nContador].ds = oRespuesta.FEXResultGet[nContador].DST_Ds;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool xFEGetPARAM_Idiomas()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ixIdiomaItemCantidad = 0;
            if (this.xTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.xAFIPTest.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIPTest.ClsFEXAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.xtoken;
                        autorizacion.Sign = this.xsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.xAFIPTest.FEXResponse_Idi oRespuesta = servicio.FEXGetPARAM_Idiomas(autorizacion);
                            this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                            this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                            if (this.ixerrcode == 0)
                            {
                                this.ixIdiomaItemCantidad = oRespuesta.FEXResultGet.Length;
                                value = this.xIdiomaItemCantidad;
                                this.axIdioma = new xIdioma[(value - 1) + 1];
                                int VB_t_i4_L0 = this.ixIdiomaItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.axIdioma[nContador].idi_id = Conversions.ToString((int) oRespuesta.FEXResultGet[nContador].Idi_Id);
                                    this.axIdioma[nContador].idi_ds = oRespuesta.FEXResultGet[nContador].Idi_Ds;
                                    this.axIdioma[nContador].idi_Vig_Desde = oRespuesta.FEXResultGet[nContador].Idi_vig_desde;
                                    this.axIdioma[nContador].idi_Vig_hasta = oRespuesta.FEXResultGet[nContador].Idi_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.xAFIP.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIP.ClsFEXAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.xtoken;
                    autorizacion.Sign = this.xsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.xDireccionServicioURL;
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        WSAFIPFE.xAFIP.FEXResponse_Idi oRespuesta = servicio.FEXGetPARAM_Idiomas(autorizacion);
                        this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                        this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                        if (this.ixerrcode == 0)
                        {
                            this.ixIdiomaItemCantidad = oRespuesta.FEXResultGet.Length;
                            value = this.xIdiomaItemCantidad;
                            this.axIdioma = new xIdioma[(value - 1) + 1];
                            int VB_t_i4_L1 = this.ixIdiomaItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.axIdioma[nContador].idi_id = Conversions.ToString((int) oRespuesta.FEXResultGet[nContador].Idi_Id);
                                this.axIdioma[nContador].idi_ds = oRespuesta.FEXResultGet[nContador].Idi_Ds;
                                this.axIdioma[nContador].idi_Vig_Desde = oRespuesta.FEXResultGet[nContador].Idi_vig_desde;
                                this.axIdioma[nContador].idi_Vig_hasta = oRespuesta.FEXResultGet[nContador].Idi_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool xFEGetPARAM_IncoTerms()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ixIdiomaItemCantidad = 0;
            if (this.xTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.xAFIPTest.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIPTest.ClsFEXAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.xtoken;
                        autorizacion.Sign = this.xsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.xAFIPTest.FEXResponse_Inc oRespuesta = servicio.FEXGetPARAM_Incoterms(autorizacion);
                            this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                            this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                            if (this.ixerrcode == 0)
                            {
                                this.ixIncoTermsItemCantidad = oRespuesta.FEXResultGet.Length;
                                value = this.xIncoTermsItemCantidad;
                                this.axIncoTerms = new xIncotermss[(value - 1) + 1];
                                int VB_t_i4_L0 = this.ixIncoTermsItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.axIncoTerms[nContador].inc_id = oRespuesta.FEXResultGet[nContador].Inc_Id;
                                    this.axIncoTerms[nContador].inc_ds = oRespuesta.FEXResultGet[nContador].Inc_Ds;
                                    this.axIncoTerms[nContador].inc_Vig_Desde = oRespuesta.FEXResultGet[nContador].Inc_vig_desde;
                                    this.axIncoTerms[nContador].inc_Vig_hasta = oRespuesta.FEXResultGet[nContador].Inc_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.xAFIP.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIP.ClsFEXAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.xtoken;
                    autorizacion.Sign = this.xsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.xDireccionServicioURL;
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        WSAFIPFE.xAFIP.FEXResponse_Inc oRespuesta = servicio.FEXGetPARAM_Incoterms(autorizacion);
                        this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                        this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                        if (this.ixerrcode == 0)
                        {
                            this.ixIncoTermsItemCantidad = oRespuesta.FEXResultGet.Length;
                            value = this.xIncoTermsItemCantidad;
                            this.axIncoTerms = new xIncotermss[(value - 1) + 1];
                            int VB_t_i4_L1 = this.ixIncoTermsItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.axIncoTerms[nContador].inc_id = oRespuesta.FEXResultGet[nContador].Inc_Id;
                                this.axIncoTerms[nContador].inc_ds = oRespuesta.FEXResultGet[nContador].Inc_Ds;
                                this.axIncoTerms[nContador].inc_Vig_Desde = oRespuesta.FEXResultGet[nContador].Inc_vig_desde;
                                this.axIncoTerms[nContador].inc_Vig_hasta = oRespuesta.FEXResultGet[nContador].Inc_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool xFEGetPARAM_MON()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ixMonedaItemCantidad = 0;
            if (this.xTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.xAFIPTest.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIPTest.ClsFEXAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.xtoken;
                        autorizacion.Sign = this.xsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.xAFIPTest.FEXResponse_Mon oRespuesta = servicio.FEXGetPARAM_MON(autorizacion);
                            this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                            this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                            if (this.ixerrcode == 0)
                            {
                                this.ixMonedaItemCantidad = oRespuesta.FEXResultGet.Length;
                                value = this.xMonedaItemCantidad;
                                this.axMoneda = new xMoneda[(value - 1) + 1];
                                int VB_t_i4_L0 = this.ixMonedaItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.axMoneda[nContador].id = oRespuesta.FEXResultGet[nContador].Mon_Id;
                                    this.axMoneda[nContador].ds = oRespuesta.FEXResultGet[nContador].Mon_Ds;
                                    this.axMoneda[nContador].Vig_Desde = oRespuesta.FEXResultGet[nContador].Mon_vig_desde;
                                    this.axMoneda[nContador].Vig_hasta = oRespuesta.FEXResultGet[nContador].Mon_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.xAFIP.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIP.ClsFEXAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.xtoken;
                    autorizacion.Sign = this.xsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.xDireccionServicioURL;
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        WSAFIPFE.xAFIP.FEXResponse_Mon oRespuesta = servicio.FEXGetPARAM_MON(autorizacion);
                        this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                        this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                        if (this.ixerrcode == 0)
                        {
                            this.ixMonedaItemCantidad = oRespuesta.FEXResultGet.Length;
                            value = this.xMonedaItemCantidad;
                            this.axMoneda = new xMoneda[(value - 1) + 1];
                            int VB_t_i4_L1 = this.ixMonedaItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.axMoneda[nContador].id = oRespuesta.FEXResultGet[nContador].Mon_Id;
                                this.axMoneda[nContador].ds = oRespuesta.FEXResultGet[nContador].Mon_Ds;
                                this.axMoneda[nContador].Vig_Desde = oRespuesta.FEXResultGet[nContador].Mon_vig_desde;
                                this.axMoneda[nContador].Vig_hasta = oRespuesta.FEXResultGet[nContador].Mon_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool xFEGetPARAM_PtoVenta()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ixPtoVentaItemCantidad = 0;
            if (this.xTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.xAFIPTest.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIPTest.ClsFEXAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.xtoken;
                        autorizacion.Sign = this.xsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.xAFIPTest.FEXResponse_PtoVenta oRespuesta = servicio.FEXGetPARAM_PtoVenta(autorizacion);
                            this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                            this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                            if (this.ixerrcode == 0)
                            {
                                this.ixPtoVentaItemCantidad = oRespuesta.FEXResultGet.Length;
                                value = this.xPtoVentaItemCantidad;
                                this.axPtoVenta = new xPtoVenta[(value - 1) + 1];
                                int VB_t_i4_L0 = this.ixPtoVentaItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.axPtoVenta[nContador].pvo_nro = oRespuesta.FEXResultGet[nContador].Pve_Nro;
                                    this.axPtoVenta[nContador].pvo_bloqueado = oRespuesta.FEXResultGet[nContador].Pve_Bloqueado;
                                    this.axPtoVenta[nContador].pvo_fchbaja = oRespuesta.FEXResultGet[nContador].Pve_FchBaja;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.xAFIP.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIP.ClsFEXAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.xtoken;
                    autorizacion.Sign = this.xsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.xDireccionServicioURL;
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        WSAFIPFE.xAFIP.FEXResponse_PtoVenta oRespuesta = servicio.FEXGetPARAM_PtoVenta(autorizacion);
                        this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                        this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                        if (this.ixerrcode == 0)
                        {
                            this.ixPtoVentaItemCantidad = oRespuesta.FEXResultGet.Length;
                            value = this.xPtoVentaItemCantidad;
                            this.axPtoVenta = new xPtoVenta[(value - 1) + 1];
                            int VB_t_i4_L1 = this.ixPtoVentaItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.axPtoVenta[nContador].pvo_nro = oRespuesta.FEXResultGet[nContador].Pve_Nro;
                                this.axPtoVenta[nContador].pvo_bloqueado = oRespuesta.FEXResultGet[nContador].Pve_Bloqueado;
                                this.axPtoVenta[nContador].pvo_fchbaja = oRespuesta.FEXResultGet[nContador].Pve_FchBaja;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool xFEGetPARAM_tipo_cbte()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ixTipo_CbteItemCantidad = 0;
            if (this.xTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.xAFIPTest.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIPTest.ClsFEXAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.xtoken;
                        autorizacion.Sign = this.xsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.xAFIPTest.FEXResponse_Tipo_Cbte oRespuesta = servicio.FEXGetPARAM_Tipo_Cbte(autorizacion);
                            this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                            this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                            if (this.ixerrcode == 0)
                            {
                                this.ixTipo_CbteItemCantidad = oRespuesta.FEXResultGet.Length;
                                value = this.xTipo_CbteItemCantidad;
                                this.axTipo_cbte = new xTipo_cbtes[(value - 1) + 1];
                                int VB_t_i4_L0 = this.ixTipo_CbteItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.axTipo_cbte[nContador].id = oRespuesta.FEXResultGet[nContador].Cbte_Id;
                                    this.axTipo_cbte[nContador].ds = oRespuesta.FEXResultGet[nContador].Cbte_Ds;
                                    this.axTipo_cbte[nContador].Vig_Desde = oRespuesta.FEXResultGet[nContador].Cbte_vig_desde;
                                    this.axTipo_cbte[nContador].Vig_hasta = oRespuesta.FEXResultGet[nContador].Cbte_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.xAFIP.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIP.ClsFEXAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.xtoken;
                    autorizacion.Sign = this.xsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.xDireccionServicioURL;
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        WSAFIPFE.xAFIP.FEXResponse_Tipo_Cbte oRespuesta = servicio.FEXGetPARAM_Tipo_Cbte(autorizacion);
                        this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                        this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                        if (this.ixerrcode == 0)
                        {
                            this.ixTipo_CbteItemCantidad = oRespuesta.FEXResultGet.Length;
                            value = this.xTipo_CbteItemCantidad;
                            this.axTipo_cbte = new xTipo_cbtes[(value - 1) + 1];
                            int VB_t_i4_L1 = this.ixTipo_CbteItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.axTipo_cbte[nContador].id = oRespuesta.FEXResultGet[nContador].Cbte_Id;
                                this.axTipo_cbte[nContador].ds = oRespuesta.FEXResultGet[nContador].Cbte_Ds;
                                this.axTipo_cbte[nContador].Vig_Desde = oRespuesta.FEXResultGet[nContador].Cbte_vig_desde;
                                this.axTipo_cbte[nContador].Vig_hasta = oRespuesta.FEXResultGet[nContador].Cbte_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool xFEGetPARAM_Tipo_expo()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ixTipo_expoItemCantidad = 0;
            if (this.xTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.xAFIPTest.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIPTest.ClsFEXAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.xtoken;
                        autorizacion.Sign = this.xsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.xAFIPTest.FEXResponse_Tex oRespuesta = servicio.FEXGetPARAM_Tipo_Expo(autorizacion);
                            this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                            this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                            if (this.ixerrcode == 0)
                            {
                                this.ixTipo_expoItemCantidad = oRespuesta.FEXResultGet.Length;
                                value = this.xTipo_expoItemCantidad;
                                this.axTipo_expo = new xTipo_expos[(value - 1) + 1];
                                int VB_t_i4_L0 = this.ixTipo_expoItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.axTipo_expo[nContador].tex_id = Conversions.ToString((int) oRespuesta.FEXResultGet[nContador].Tex_Id);
                                    this.axTipo_expo[nContador].tex_ds = oRespuesta.FEXResultGet[nContador].Tex_Ds;
                                    this.axTipo_expo[nContador].tex_Vig_Desde = oRespuesta.FEXResultGet[nContador].Tex_vig_desde;
                                    this.axTipo_expo[nContador].tex_Vig_hasta = oRespuesta.FEXResultGet[nContador].Tex_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.xAFIP.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIP.ClsFEXAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.xtoken;
                    autorizacion.Sign = this.xsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.xDireccionServicioURL;
                        WSAFIPFE.xAFIP.FEXResponse_Tex oRespuesta = servicio.FEXGetPARAM_Tipo_Expo(autorizacion);
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                        this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                        if (this.ixerrcode == 0)
                        {
                            this.ixTipo_expoItemCantidad = oRespuesta.FEXResultGet.Length;
                            value = this.xTipo_expoItemCantidad;
                            this.axTipo_expo = new xTipo_expos[(value - 1) + 1];
                            int VB_t_i4_L1 = this.ixTipo_expoItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.axTipo_expo[nContador].tex_id = Conversions.ToString((int) oRespuesta.FEXResultGet[nContador].Tex_Id);
                                this.axTipo_expo[nContador].tex_ds = oRespuesta.FEXResultGet[nContador].Tex_Ds;
                                this.axTipo_expo[nContador].tex_Vig_Desde = oRespuesta.FEXResultGet[nContador].Tex_vig_desde;
                                this.axTipo_expo[nContador].tex_Vig_hasta = oRespuesta.FEXResultGet[nContador].Tex_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        public bool xFEGetPARAM_uMed()
        {
            bool bResultado = true;
            this.IndiceItem = 0;
            int value = 0;
            int nContador = 0;
            this.ixUMedItemCantidad = 0;
            if (this.xTicketValido)
            {
                if (this.Modo == modoFiscal.Test)
                {
                    WSAFIPFE.xAFIPTest.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIPTest.ClsFEXAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.xtoken;
                        autorizacion.Sign = this.xsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        try
                        {
                            WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                            if (this.ProxyUserName != "")
                            {
                                NetworkCredential cr = new NetworkCredential();
                                WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                                cr.Domain = this.ProxyDomain;
                                cr.Password = this.ProxyUserPassword;
                                cr.UserName = this.ProxyUserName;
                                pr.Credentials = cr;
                                servicio.Proxy = pr;
                            }
                            WSAFIPFE.xAFIPTest.FEXResponse_Umed oRespuesta = servicio.FEXGetPARAM_UMed(autorizacion);
                            this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                            this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                            if (this.ixerrcode == 0)
                            {
                                this.ixUMedItemCantidad = oRespuesta.FEXResultGet.Length;
                                value = this.xUMedItemCantidad;
                                this.axUMed = new xUMed[(value - 1) + 1];
                                int VB_t_i4_L0 = this.ixUMedItemCantidad - 1;
                                for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                                {
                                    this.axUMed[nContador].id = oRespuesta.FEXResultGet[nContador].Umed_Id;
                                    this.axUMed[nContador].ds = oRespuesta.FEXResultGet[nContador].Umed_Ds;
                                    this.axUMed[nContador].Vig_Desde = oRespuesta.FEXResultGet[nContador].Umed_vig_desde;
                                    this.axUMed[nContador].Vig_hasta = oRespuesta.FEXResultGet[nContador].Umed_vig_hasta;
                                }
                                return bResultado;
                            }
                            bResultado = false;
                        }
                        catch (Exception exception2)
                        {
                            ProjectData.SetProjectError(exception2);
                            Exception ex = exception2;
                            this.strUltimoMensajeError = ex.Message;
                            this.iUltimoNumeroError = 0x204;
                            bResultado = false;
                            ProjectData.ClearProjectError();
                        }
                    }
                    return bResultado;
                }
                WSAFIPFE.xAFIP.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIP.ClsFEXAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.xtoken;
                    autorizacion.Sign = this.xsign;
                }
                catch (Exception exception3)
                {
                    ProjectData.SetProjectError(exception3);
                    Exception ex = exception3;
                    this.iUltimoNumeroError = 0x37;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    try
                    {
                        WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        servicio.Url = this.xDireccionServicioURL;
                        if (this.TimeOut != 0)
                        {
                            servicio.Timeout = this.TimeOut;
                        }
                        WSAFIPFE.xAFIP.FEXResponse_Umed oRespuesta = servicio.FEXGetPARAM_UMed(autorizacion);
                        this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                        this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                        if (this.ixerrcode == 0)
                        {
                            this.ixUMedItemCantidad = oRespuesta.FEXResultGet.Length;
                            value = this.xUMedItemCantidad;
                            this.axUMed = new xUMed[(value - 1) + 1];
                            int VB_t_i4_L1 = this.ixUMedItemCantidad - 1;
                            for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                            {
                                this.axUMed[nContador].id = oRespuesta.FEXResultGet[nContador].Umed_Id;
                                this.axUMed[nContador].ds = oRespuesta.FEXResultGet[nContador].Umed_Ds;
                                this.axUMed[nContador].Vig_Desde = oRespuesta.FEXResultGet[nContador].Umed_vig_desde;
                                this.axUMed[nContador].Vig_hasta = oRespuesta.FEXResultGet[nContador].Umed_vig_hasta;
                            }
                            return bResultado;
                        }
                        bResultado = false;
                    }
                    catch (Exception exception4)
                    {
                        ProjectData.SetProjectError(exception4);
                        Exception ex = exception4;
                        this.strUltimoMensajeError = ex.Message;
                        this.iUltimoNumeroError = 0x204;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                }
                return bResultado;
            }
            return false;
        }

        internal bool xObtenerTicket()
        {
            this.strUltimaRespuestaXML = "";
            this.strUltimoPedidoXML = "";
            this.strUltimoPedidoFirmadoXML = "";
            this.Identificador = "0";
            bool bResultado = false;
            if ((this.xLicenciaValida & this.get_LicenciaFechaValida(DateTime.Today)) | (this.Modo == modoFiscal.Test))
            {
                string strDireccionServicio = "https://wsaahomo.afip.gov.ar/ws/services/LoginCms?WSDL";
                if (this.Modo == modoFiscal.Fiscal)
                {
                    strDireccionServicio = this.DireccionServicio;
                }
                ticket oTicket = new ticket();
                if (this.ProxyUserName != "")
                {
                    oTicket.ProxyDomain = this.ProxyDomain;
                    oTicket.ProxyHost = this.ProxyHost;
                    oTicket.ProxyPort = this.ProxyPort;
                    oTicket.ProxyUserName = this.ProxyUserName;
                    oTicket.ProxyUserPassword = this.ProxyUserPassword;
                }
                string strServicio = "wsfex";
                try
                {
                    string strTicketRespuesta = oTicket.ObtenerLoginTicketResponse(strServicio, strDireccionServicio, this.RutaArchivoCertificado, this.Modo, Conversions.ToLong(this.Identificador));
                    this.strUltimoPedidoXML = oTicket.UltimoPedidoXML.OuterXml;
                    this.strUltimoPedidoFirmadoXML = oTicket.UltimoPedidoFirmadoXML;
                    this.strUltimaRespuestaXML = strTicketRespuesta;
                    if (oTicket.lastErrorNumero == 0)
                    {
                        this.Identificador = oTicket.UniqueId.ToString();
                        this.xtoken = oTicket.Token;
                        this.xsign = oTicket.Sign;
                        this.txTicketHora = oTicket.GenerationTime;
                        this.txTicketHoraVencimiento = oTicket.ExpirationTime;
                        this.strUltimoMensajeError = "";
                        this.iUltimoNumeroError = 0;
                        bResultado = true;
                    }
                    else
                    {
                        this.strUltimoMensajeError = oTicket.lastErrorMensaje;
                        this.iUltimoNumeroError = oTicket.lastErrorNumero;
                    }
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.strUltimoMensajeError = ex.Message;
                    this.iUltimoNumeroError = 1;
                    ProjectData.ClearProjectError();
                }
            }
            else
            {
                this.iUltimoNumeroError = 5;
                this.strUltimoMensajeError = "Licencia no v\x00e1lida";
            }
            this.bxTicketValido = bResultado;
            return bResultado;
        }

        public bool xObtenerTicketAcceso()
        {
            return this.xObtenerTicket();
        }

        public bool xRegistrar(int nPuntoVenta, int nTipoComprobante, string cIdentificador)
        {
            int nNumero = this.xFEGetLastCMP(nPuntoVenta, nTipoComprobante) + 1;
            return this.xRegistrarConNumero(nPuntoVenta, nTipoComprobante, cIdentificador, nNumero);
        }

        public bool xRegistrarConNumero(int nPuntoVenta, int nTipoComprobante, string cIdentificador, int nNumero)
        {
            int nContador;
            this.ixerrcode = 0;
            this.strxerrmsg = "";
            bool bResultado = true;
            this.strxRespuestaCAE = "";
            this.strxRespuestaFch_vence_cae = "";
            this.strxRespuestaFch_cbte = "";
            this.strxRespuestaMotivos_obs = "";
            this.strxRespuestaReproceso = "";
            this.strxRespuestaResultado = "";
            this.ixRespuestaId = Conversions.ToLong("0");
            this.ixRespuestaCbte_numero = 0L;
            if (this.Modo == modoFiscal.Test)
            {
                if (this.xTicketValido)
                {
                    WSAFIPFE.xAFIPTest.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIPTest.ClsFEXAuthRequest();
                    try
                    {
                        autorizacion.Cuit = Conversions.ToLong(this.cuit);
                        autorizacion.Token = this.xtoken;
                        autorizacion.Sign = this.xsign;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        this.iUltimoNumeroError = 520;
                        this.strUltimoMensajeError = ex.Message;
                        bResultado = false;
                        ProjectData.ClearProjectError();
                    }
                    if (bResultado)
                    {
                        WSAFIPFE.xAFIPTest.ClsFEXRequest oPedido = new WSAFIPFE.xAFIPTest.ClsFEXRequest();
                        WSAFIPFE.xAFIPTest.Item[] opedidoitems = new WSAFIPFE.xAFIPTest.Item[(this.xItemCantidad - 1) + 1];
                        WSAFIPFE.xAFIPTest.Permiso[] oPedidoPermisos = new WSAFIPFE.xAFIPTest.Permiso[(this.xPermisoCantidad - 1) + 1];
                        WSAFIPFE.xAFIPTest.Cmp_asoc[] oPedidocmps_asocs = new WSAFIPFE.xAFIPTest.Cmp_asoc[(this.xCmps_asocCantidad - 1) + 1];
                        if (cIdentificador.Trim() == "")
                        {
                            oPedido.Id = Conversions.ToLong("0");
                        }
                        else
                        {
                            oPedido.Id = Conversions.ToLong(cIdentificador);
                        }
                        this.ixRespuestaCbte_numero = nNumero;
                        oPedido.Cbte_nro = nNumero;
                        oPedido.Cliente = this.xCliente;
                        oPedido.Cuit_pais_cliente = this.xCuit_pais_cliente;
                        oPedido.Domicilio_cliente = this.xDomicilio_cliente;
                        oPedido.Dst_cmp = (short) this.xDst_cmp;
                        oPedido.Fecha_cbte = this.xFecha_cbte;
                        oPedido.Forma_pago = this.xForma_pago;
                        oPedido.Id_impositivo = this.xId_impositivo;
                        oPedido.Idioma_cbte = Conversions.ToShort(this.xIdioma_cbte);
                        oPedido.Imp_total = this.xImp_total;
                        oPedido.Incoterms = this.xIncoTerms;
                        oPedido.Incoterms_Ds = this.xIncoTerms_ds;
                        oPedido.Moneda_ctz = this.xMoneda_ctz;
                        oPedido.Moneda_Id = this.xMoneda_id;
                        oPedido.Obs = this.xObs;
                        oPedido.Obs_comerciales = this.xObs_comerciales;
                        oPedido.Permiso_existente = this.xPermiso_existente;
                        oPedido.Punto_vta = (short) nPuntoVenta;
                        oPedido.Tipo_cbte = (short) nTipoComprobante;
                        oPedido.Tipo_expo = (short) this.xtipo_expo;
                        int VB_t_i4_L0 = this.xItemCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L0; nContador++)
                        {
                            WSAFIPFE.xAFIPTest.Item oPedidoitem = new WSAFIPFE.xAFIPTest.Item();
                            this.xIndiceItem = nContador;
                            oPedidoitem.Pro_codigo = this.xITEMPro_codigo;
                            oPedidoitem.Pro_ds = this.xITEMPro_ds;
                            oPedidoitem.Pro_precio_uni = this.xITEMPro_precio_uni;
                            oPedidoitem.Pro_total_item = this.xITEMPro_precio_item;
                            oPedidoitem.Pro_umed = this.xITEMPro_umed;
                            oPedidoitem.Pro_qty = this.xITEMPro_qty;
                            opedidoitems[nContador] = oPedidoitem;
                        }
                        oPedido.Items = opedidoitems;
                        int VB_t_i4_L1 = this.xPermisoCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L1; nContador++)
                        {
                            this.xIndiceItem = nContador;
                            WSAFIPFE.xAFIPTest.Permiso oPedidoPermiso = new WSAFIPFE.xAFIPTest.Permiso();
                            oPedidoPermiso.Dst_merc = this.xPERMISO_dst_merc;
                            oPedidoPermiso.Id_permiso = this.xPERMISO_id_permiso;
                            oPedidoPermisos[nContador] = oPedidoPermiso;
                        }
                        if (this.xPermisoNoInformar == 1)
                        {
                            oPedido.Permisos = null;
                        }
                        else
                        {
                            oPedido.Permisos = oPedidoPermisos;
                        }
                        int VB_t_i4_L2 = this.xCmps_asocCantidad - 1;
                        for (nContador = 0; nContador <= VB_t_i4_L2; nContador++)
                        {
                            this.xIndiceItem = nContador;
                            WSAFIPFE.xAFIPTest.Cmp_asoc oPedidoCmps_asoc = new WSAFIPFE.xAFIPTest.Cmp_asoc();
                            oPedidoCmps_asoc.Cbte_nro = this.xCMPS_ASOC_cbte_nro;
                            oPedidoCmps_asoc.Cbte_punto_vta = (short) this.xCMPS_ASOC_cbte_punto_venta;
                            oPedidoCmps_asoc.CBte_tipo = (short) this.xCMPS_ASOC_cbte_tipo;
                            oPedidocmps_asocs[nContador] = oPedidoCmps_asoc;
                        }
                        oPedido.Cmps_asoc = oPedidocmps_asocs;
                        WSAFIPFE.xAFIPTest.Service servicio = new WSAFIPFE.xAFIPTest.Service();
                        if (this.ProxyUserName != "")
                        {
                            NetworkCredential cr = new NetworkCredential();
                            WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                            cr.Domain = this.ProxyDomain;
                            cr.Password = this.ProxyUserPassword;
                            cr.UserName = this.ProxyUserName;
                            pr.Credentials = cr;
                            servicio.Proxy = pr;
                        }
                        if (this.ArchivoXMLEnviado != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.xAFIPTest.ClsFEXRequest));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                                writer1.Serialize((TextWriter) file1, oPedido);
                                file1.Close();
                            }
                            catch (Exception exception2)
                            {
                                ProjectData.SetProjectError(exception2);
                                Exception miEx = exception2;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                        WSAFIPFE.xAFIPTest.FEXResponseAuthorize oRespuesta = servicio.FEXAuthorize(autorizacion, oPedido);
                        if (oRespuesta == null)
                        {
                            bResultado = false;
                            this.iUltimoNumeroError = 100;
                            this.strUltimoMensajeError = "Sin respuesta";
                            return bResultado;
                        }
                        this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                        this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                        this.ixEventCode = oRespuesta.FEXEvents.EventCode;
                        this.strxEventMsg = oRespuesta.FEXEvents.EventMsg;
                        if (oRespuesta.FEXResultAuth == null)
                        {
                            bResultado = false;
                        }
                        if (bResultado && ((oRespuesta.FEXResultAuth.Cae == "NULL") | (oRespuesta.FEXResultAuth.Resultado != "A")))
                        {
                            bResultado = false;
                        }
                        if (oRespuesta.FEXResultAuth != null)
                        {
                            this.strxRespuestaCAE = oRespuesta.FEXResultAuth.Cae;
                            this.strxRespuestaFch_cbte = oRespuesta.FEXResultAuth.Fch_cbte;
                            this.strxRespuestaCuit = Conversions.ToLong(oRespuesta.FEXResultAuth.Cuit.ToString());
                            this.strxRespuestaMotivos_obs = oRespuesta.FEXResultAuth.Motivos_Obs;
                            this.strxRespuestaReproceso = oRespuesta.FEXResultAuth.Reproceso;
                            this.strxRespuestaResultado = oRespuesta.FEXResultAuth.Resultado;
                            this.strxRespuestaFch_vence_cae = oRespuesta.FEXResultAuth.Fch_venc_Cae;
                            this.ixRespuestaCbte_numero = oRespuesta.FEXResultAuth.Cbte_nro;
                            this.ixRespuestaTipo_cbte = oRespuesta.FEXResultAuth.Tipo_cbte;
                            this.ixRespuestaPunto_vta = oRespuesta.FEXResultAuth.Punto_vta;
                            this.ixRespuestaId = oRespuesta.FEXResultAuth.Id;
                        }
                        if (this.ArchivoXMLRecibido != "")
                        {
                            try
                            {
                                XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.xAFIPTest.FEXResponseAuthorize));
                                StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                                writer1.Serialize((TextWriter) file1, oRespuesta);
                                file1.Close();
                            }
                            catch (Exception exception3)
                            {
                                ProjectData.SetProjectError(exception3);
                                Exception miEx = exception3;
                                this.strArchivoXMLError = miEx.Message;
                                ProjectData.ClearProjectError();
                            }
                        }
                    }
                    return bResultado;
                }
                bResultado = false;
                this.strUltimoMensajeError = "ticket invalido";
                return bResultado;
            }
            if (this.xTicketValido)
            {
                WSAFIPFE.xAFIP.ClsFEXAuthRequest autorizacion = new WSAFIPFE.xAFIP.ClsFEXAuthRequest();
                try
                {
                    autorizacion.Cuit = Conversions.ToLong(this.cuit);
                    autorizacion.Token = this.xtoken;
                    autorizacion.Sign = this.xsign;
                }
                catch (Exception exception4)
                {
                    ProjectData.SetProjectError(exception4);
                    Exception ex = exception4;
                    this.iUltimoNumeroError = 520;
                    this.strUltimoMensajeError = ex.Message;
                    bResultado = false;
                    ProjectData.ClearProjectError();
                }
                if (bResultado)
                {
                    WSAFIPFE.xAFIP.ClsFEXRequest oPedido = new WSAFIPFE.xAFIP.ClsFEXRequest();
                    WSAFIPFE.xAFIP.Item[] opedidoitems = new WSAFIPFE.xAFIP.Item[(this.xItemCantidad - 1) + 1];
                    WSAFIPFE.xAFIP.Permiso[] oPedidoPermisos = new WSAFIPFE.xAFIP.Permiso[(this.xPermisoCantidad - 1) + 1];
                    WSAFIPFE.xAFIP.Cmp_asoc[] oPedidocmps_asocs = new WSAFIPFE.xAFIP.Cmp_asoc[(this.xCmps_asocCantidad - 1) + 1];
                    if (cIdentificador.Trim() == "")
                    {
                        oPedido.Id = Conversions.ToLong("0");
                    }
                    else
                    {
                        oPedido.Id = Conversions.ToLong(cIdentificador);
                    }
                    this.ixRespuestaCbte_numero = nNumero;
                    oPedido.Cbte_nro = nNumero;
                    oPedido.Cliente = this.xCliente;
                    oPedido.Cuit_pais_cliente = this.xCuit_pais_cliente;
                    oPedido.Domicilio_cliente = this.xDomicilio_cliente;
                    oPedido.Dst_cmp = (short) this.xDst_cmp;
                    oPedido.Fecha_cbte = this.xFecha_cbte;
                    oPedido.Forma_pago = this.xForma_pago;
                    oPedido.Id_impositivo = this.xId_impositivo;
                    oPedido.Idioma_cbte = Conversions.ToShort(this.xIdioma_cbte);
                    oPedido.Imp_total = this.xImp_total;
                    oPedido.Incoterms = this.xIncoTerms;
                    oPedido.Incoterms_Ds = this.xIncoTerms_ds;
                    oPedido.Moneda_ctz = this.xMoneda_ctz;
                    oPedido.Moneda_Id = this.xMoneda_id;
                    oPedido.Obs = this.xObs;
                    oPedido.Obs_comerciales = this.xObs_comerciales;
                    oPedido.Permiso_existente = this.xPermiso_existente;
                    oPedido.Punto_vta = (short) nPuntoVenta;
                    oPedido.Tipo_cbte = (short) nTipoComprobante;
                    oPedido.Tipo_expo = (short) this.xtipo_expo;
                    int VB_t_i4_L3 = this.xItemCantidad - 1;
                    for (nContador = 0; nContador <= VB_t_i4_L3; nContador++)
                    {
                        WSAFIPFE.xAFIP.Item oPedidoitem = new WSAFIPFE.xAFIP.Item();
                        this.xIndiceItem = nContador;
                        oPedidoitem.Pro_codigo = this.xITEMPro_codigo;
                        oPedidoitem.Pro_ds = this.xITEMPro_ds;
                        oPedidoitem.Pro_precio_uni = this.xITEMPro_precio_uni;
                        oPedidoitem.Pro_total_item = this.xITEMPro_precio_item;
                        oPedidoitem.Pro_umed = this.xITEMPro_umed;
                        oPedidoitem.Pro_qty = this.xITEMPro_qty;
                        opedidoitems[nContador] = oPedidoitem;
                    }
                    oPedido.Items = opedidoitems;
                    int VB_t_i4_L4 = this.xPermisoCantidad - 1;
                    for (nContador = 0; nContador <= VB_t_i4_L4; nContador++)
                    {
                        this.xIndiceItem = nContador;
                        WSAFIPFE.xAFIP.Permiso oPedidoPermiso = new WSAFIPFE.xAFIP.Permiso();
                        oPedidoPermiso.Dst_merc = this.xPERMISO_dst_merc;
                        oPedidoPermiso.Id_permiso = this.xPERMISO_id_permiso;
                        oPedidoPermisos[nContador] = oPedidoPermiso;
                    }
                    if (this.xPermisoNoInformar == 1)
                    {
                        oPedido.Permisos = null;
                    }
                    else
                    {
                        oPedido.Permisos = oPedidoPermisos;
                    }
                    int VB_t_i4_L5 = this.xCmps_asocCantidad - 1;
                    for (nContador = 0; nContador <= VB_t_i4_L5; nContador++)
                    {
                        this.xIndiceItem = nContador;
                        WSAFIPFE.xAFIP.Cmp_asoc oPedidoCmps_asoc = new WSAFIPFE.xAFIP.Cmp_asoc();
                        oPedidoCmps_asoc.Cbte_nro = this.xCMPS_ASOC_cbte_nro;
                        oPedidoCmps_asoc.Cbte_punto_vta = (short) this.xCMPS_ASOC_cbte_punto_venta;
                        oPedidoCmps_asoc.CBte_tipo = (short) this.xCMPS_ASOC_cbte_tipo;
                        oPedidocmps_asocs[nContador] = oPedidoCmps_asoc;
                    }
                    oPedido.Cmps_asoc = oPedidocmps_asocs;
                    WSAFIPFE.xAFIP.Service servicio = new WSAFIPFE.xAFIP.Service();
                    if (this.ProxyUserName != "")
                    {
                        NetworkCredential cr = new NetworkCredential();
                        WebProxy pr = new WebProxy(this.ProxyHost, this.ProxyPort);
                        cr.Domain = this.ProxyDomain;
                        cr.Password = this.ProxyUserPassword;
                        cr.UserName = this.ProxyUserName;
                        pr.Credentials = cr;
                        servicio.Proxy = pr;
                    }
                    servicio.Url = this.xDireccionServicioURL;
                    if (this.TimeOut != 0)
                    {
                        servicio.Timeout = this.TimeOut;
                    }
                    if (this.ArchivoXMLEnviado != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.xAFIP.ClsFEXRequest));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLEnviado);
                            writer1.Serialize((TextWriter) file1, oPedido);
                            file1.Close();
                        }
                        catch (Exception exception5)
                        {
                            ProjectData.SetProjectError(exception5);
                            Exception miEx = exception5;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                    WSAFIPFE.xAFIP.FEXResponseAuthorize oRespuesta = servicio.FEXAuthorize(autorizacion, oPedido);
                    if (oRespuesta == null)
                    {
                        bResultado = false;
                        this.iUltimoNumeroError = 100;
                        this.strUltimoMensajeError = "Sin respuesta";
                        return bResultado;
                    }
                    this.ixerrcode = oRespuesta.FEXErr.ErrCode;
                    this.strxerrmsg = oRespuesta.FEXErr.ErrMsg;
                    this.ixEventCode = oRespuesta.FEXEvents.EventCode;
                    this.strxEventMsg = oRespuesta.FEXEvents.EventMsg;
                    if (oRespuesta.FEXResultAuth == null)
                    {
                        bResultado = false;
                    }
                    if (bResultado && ((oRespuesta.FEXResultAuth.Cae == "NULL") | (oRespuesta.FEXResultAuth.Resultado != "A")))
                    {
                        bResultado = false;
                    }
                    if (oRespuesta.FEXResultAuth != null)
                    {
                        this.strxRespuestaCAE = oRespuesta.FEXResultAuth.Cae;
                        this.strxRespuestaFch_cbte = oRespuesta.FEXResultAuth.Fch_cbte;
                        this.strxRespuestaCuit = Conversions.ToLong(oRespuesta.FEXResultAuth.Cuit.ToString());
                        this.strxRespuestaMotivos_obs = oRespuesta.FEXResultAuth.Motivos_Obs;
                        this.strxRespuestaReproceso = oRespuesta.FEXResultAuth.Reproceso;
                        this.strxRespuestaResultado = oRespuesta.FEXResultAuth.Resultado;
                        this.strxRespuestaFch_vence_cae = oRespuesta.FEXResultAuth.Fch_venc_Cae;
                        this.ixRespuestaCbte_numero = oRespuesta.FEXResultAuth.Cbte_nro;
                        this.ixRespuestaTipo_cbte = oRespuesta.FEXResultAuth.Tipo_cbte;
                        this.ixRespuestaPunto_vta = oRespuesta.FEXResultAuth.Punto_vta;
                        this.ixRespuestaId = oRespuesta.FEXResultAuth.Id;
                    }
                    if (this.ArchivoXMLRecibido != "")
                    {
                        try
                        {
                            XmlSerializer writer1 = new XmlSerializer(typeof(WSAFIPFE.xAFIP.FEXResponseAuthorize));
                            StreamWriter file1 = new StreamWriter(this.ArchivoXMLRecibido);
                            writer1.Serialize((TextWriter) file1, oRespuesta);
                            file1.Close();
                        }
                        catch (Exception exception6)
                        {
                            ProjectData.SetProjectError(exception6);
                            Exception miEx = exception6;
                            this.strArchivoXMLError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                }
                return bResultado;
            }
            bResultado = false;
            this.strUltimoMensajeError = "ticket invalido";
            return bResultado;
        }

        public string ArchivoXMLEnviado
        {
            get
            {
                return this.strArchivoXMLEnviado;
            }
            set
            {
                this.strArchivoXMLEnviado = value;
            }
        }

        public string ArchivoXMLError
        {
            get
            {
                return this.strArchivoXMLError;
            }
        }

        public string ArchivoXMLRecibido
        {
            get
            {
                return this.strArchivoXMLRecibido;
            }
            set
            {
                this.strArchivoXMLRecibido = value;
            }
        }

        public string Autenticidad
        {
            get
            {
                return "Verificar autenticidad en http://sites.google.com/site/facturaelectronicax/Home/soporte";
            }
            set
            {
            }
        }

        public int bcbte_nro
        {
            get
            {
                return this.ibCbte_numero;
            }
            set
            {
                this.ibCbte_numero = value;
            }
        }

        public string bDireccionServicio
        {
            get
            {
                return this.cbDireccionServicio;
            }
            set
            {
                this.cbDireccionServicio = value;
            }
        }

        public string bDireccionServicioURL
        {
            get
            {
                return this.cbDireccionServicioURL;
            }
            set
            {
                this.cbDireccionServicioURL = value;
            }
        }

        public int berrcode
        {
            get
            {
                return this.iberrcode;
            }
        }

        public string berrcodeST
        {
            get
            {
                return this.iberrcode.ToString();
            }
        }

        public string berrmsg
        {
            get
            {
                return this.strberrmsg;
            }
        }

        public int bEventCode
        {
            get
            {
                return this.iBEventCode;
            }
        }

        public string bEventMsg
        {
            get
            {
                return this.strBEventMsg;
            }
        }

        public string bFecha_cae
        {
            get
            {
                return this.strbFecha_cae;
            }
            set
            {
                this.strbFecha_cae = value;
            }
        }

        public string bFecha_cbte
        {
            get
            {
                return this.strbFecha_cbte;
            }
            set
            {
                this.strbFecha_cbte = value;
            }
        }

        public string bFecha_cbte_cae
        {
            get
            {
                return this.strBFecha_cbte_cae;
            }
            set
            {
                this.strBFecha_cbte_cae = value;
            }
        }

        public string bFecha_cbte_orig
        {
            get
            {
                return this.strbFecha_cbte_orig;
            }
            set
            {
                this.strbFecha_cbte_orig = value;
            }
        }

        public double bImp_iibb
        {
            get
            {
                return this.ibimp_iibb;
            }
            set
            {
                this.ibimp_iibb = value;
            }
        }

        public double bImp_internos
        {
            get
            {
                return this.ibImp_internos;
            }
            set
            {
                this.ibImp_internos = value;
            }
        }

        public double bImp_moneda_ctz
        {
            get
            {
                return this.ibImp_moneda_ctz;
            }
            set
            {
                this.ibImp_moneda_ctz = value;
            }
        }

        public string bImp_moneda_id
        {
            get
            {
                return this.ibImp_moneda_id;
            }
            set
            {
                this.ibImp_moneda_id = value;
            }
        }

        public double bImp_neto
        {
            get
            {
                return this.ibimp_neto;
            }
            set
            {
                this.ibimp_neto = value;
            }
        }

        public double bimp_op_ex
        {
            get
            {
                return this.ibimp_op_ex;
            }
            set
            {
                this.ibimp_op_ex = value;
            }
        }

        public double bImp_perc
        {
            get
            {
                return this.ibImp_perc;
            }
            set
            {
                this.ibImp_perc = value;
            }
        }

        public double bImp_perc_mun
        {
            get
            {
                return this.ibImp_perc_mun;
            }
            set
            {
                this.ibImp_perc_mun = value;
            }
        }

        public double bImp_total
        {
            get
            {
                return this.ibimp_total;
            }
            set
            {
                this.ibimp_total = value;
            }
        }

        public double bImp_total_conc
        {
            get
            {
                return this.ibimp_total_conc;
            }
            set
            {
                this.ibimp_total_conc = value;
            }
        }

        public double bimpto_liq
        {
            get
            {
                return this.ibimpto_liq;
            }
            set
            {
                this.ibimpto_liq = value;
            }
        }

        public double bimpto_liq_rni
        {
            get
            {
                return this.ibimpto_liq_rni;
            }
            set
            {
                this.ibimpto_liq_rni = value;
            }
        }

        public int bIndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        public int bItemCantidad
        {
            get
            {
                return this.iItemCantidad;
            }
            set
            {
                this.iItemCantidad = value;
                this.abProductoItem = new bProductoItem[(value - 1) + 1];
            }
        }

        public double bITEMimp_bonif
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].imp_bonif;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].imp_bonif = value;
            }
        }

        public double bITEMimp_total
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].imp_total;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].imp_total = value;
            }
        }

        public int bITEMIva_id
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].iva_id;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].iva_id = value;
            }
        }

        public string bITEMpro_codigo_ncm
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].pro_codigo_ncm;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].pro_codigo_ncm = value;
            }
        }

        public string bITEMpro_codigo_sec
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].pro_codigo_sec;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].pro_codigo_sec = value;
            }
        }

        public string bITEMpro_ds
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].pro_ds;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].pro_ds = value;
            }
        }

        public double bITEMpro_precio_uni
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].pro_precio_uni;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].pro_precio_uni = value;
            }
        }

        public double bITEMpro_qty
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].pro_qty;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].pro_qty = value;
            }
        }

        public int bITEMpro_umed
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].pro_umed;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].pro_umed = value;
            }
        }

        public bool BLicenciaValida
        {
            get
            {
                return (((4 & this.LicenciaValor) == 4) & this.LicenciaDatosValida);
            }
        }

        public string bMonedaDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bMonedaItemCantidad - 1)))
                {
                    return this.aBMoneda[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public string bMonedaId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bMonedaItemCantidad - 1)))
                {
                    return this.aBMoneda[this.IndiceItem].id;
                }
                return "";
            }
        }

        public int bMonedaItemCantidad
        {
            get
            {
                return this.ibMonedaItemCantidad;
            }
        }

        public string bMonedaVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bMonedaItemCantidad - 1)))
                {
                    return this.aBMoneda[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        public string bMonedaVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bMonedaItemCantidad - 1)))
                {
                    return this.aBMoneda[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        public string bNombreServicio
        {
            get
            {
                return this.strbServicio;
            }
            set
            {
                this.strbServicio = value;
            }
        }

        public string bNro_doc
        {
            get
            {
                return this.lbnro_doc.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.lbnro_doc = Conversions.ToLong(value);
            }
        }

        public int bProductoItemCantidad
        {
            get
            {
                return this.ibProductoItemCantidad;
            }
        }

        public string bProductoNCM_codigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bProductoItemCantidad - 1)))
                {
                    return this.aBProducto[this.IndiceItem].NCM_codigo;
                }
                return "";
            }
        }

        public string bProductoNCM_ds
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bProductoItemCantidad - 1)))
                {
                    return this.aBProducto[this.IndiceItem].NCM_ds;
                }
                return "";
            }
        }

        public string bProductoNCM_nota
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bProductoItemCantidad - 1)))
                {
                    return this.aBProducto[this.IndiceItem].NCM_nota;
                }
                return "";
            }
        }

        public string bProductoNCM_Vig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bProductoItemCantidad - 1)))
                {
                    return this.aBProducto[this.IndiceItem].NCM_Vig_Desde;
                }
                return "";
            }
        }

        public string bProductoNCM_Vig_Hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bProductoItemCantidad - 1)))
                {
                    return this.aBProducto[this.IndiceItem].NCM_Vig_hasta;
                }
                return "";
            }
        }

        public int bPunto_vta
        {
            get
            {
                return this.ibpunto_vta;
            }
            set
            {
                this.ibpunto_vta = value;
            }
        }

        public string bRespuestaCAE
        {
            get
            {
                return this.strbRespuestaCAE;
            }
        }

        public int bRespuestaCbte_numero
        {
            get
            {
                return this.ibRespuestaCbte_numero;
            }
        }

        public string BRespuestaDummyAuthServer
        {
            get
            {
                return this.strbRespuestaDummyAuthServer;
            }
        }

        public string BRespuestaDummyDbServer
        {
            get
            {
                return this.strbRespuestaDummyDbServer;
            }
        }

        public string bRespuestaFch_cbte
        {
            get
            {
                return this.strbRespuestaFch_cbte;
            }
        }

        public string bRespuestaFch_venc_cae
        {
            get
            {
                return this.strbRespuestafch_venc_cae;
            }
        }

        public string bRespuestaId
        {
            get
            {
                return this.ibRespuestaId.ToString();
            }
        }

        public string bRespuestaOBS
        {
            get
            {
                return this.strbRespuestaObs;
            }
        }

        public string bRespuestaReproceso
        {
            get
            {
                return this.strbRespuestaReProceso;
            }
        }

        public string bRespuestaResultado
        {
            get
            {
                return this.strbRespuestaResultado;
            }
        }

        public string bRespuestasCUIT
        {
            get
            {
                return this.strbRespuestaCUIT;
            }
        }

        public string BRespuetaDummyAppServer
        {
            get
            {
                return this.strbRespuestaDummyAppServer;
            }
        }

        public string bsign
        {
            get
            {
                return this.strBSign;
            }
            set
            {
                this.strBSign = value;
            }
        }

        public bool bTicketEsValido
        {
            get
            {
                if (!this.BTicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.bTicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        public DateTime bTicketHora
        {
            get
            {
                return this.tbTicketHora;
            }
        }

        public DateTime bTicketHoraVencimiento
        {
            get
            {
                return this.tbTicketHoraVencimiento;
            }
        }

        public bool BTicketValido
        {
            get
            {
                return this.bbTicketValido;
            }
        }

        public int bTipo_cbte
        {
            get
            {
                return this.ibtipo_cbte;
            }
            set
            {
                this.ibtipo_cbte = value;
            }
        }

        public string bTipo_cbteDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public int bTipo_cbteId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public int bTipo_CbteItemCantidad
        {
            get
            {
                return this.ibTipo_CbteItemCantidad;
            }
        }

        public string bTipo_cbteVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        public string bTipo_cbteVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        public string bTipo_cpteDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public int bTipo_cpteId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public string bTipo_cpteVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        public string bTipo_cpteVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        public int bTipo_Doc
        {
            get
            {
                return this.iBtipo_doc;
            }
            set
            {
                this.iBtipo_doc = value;
            }
        }

        public string bTipoDocDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoDocItemCantidad - 1)))
                {
                    return this.aBTipoDoc[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public int bTipoDocID
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoDocItemCantidad - 1)))
                {
                    return this.aBTipoDoc[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public int bTipoDocItemCantidad
        {
            get
            {
                return this.ibTipoDocItemCantidad;
            }
        }

        public string bTipoDocVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoDocItemCantidad - 1)))
                {
                    return this.aBTipoDoc[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        public string bTipoDocVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoDocItemCantidad - 1)))
                {
                    return this.aBTipoDoc[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        public string bTipoIvaDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoIvaItemCantidad - 1)))
                {
                    return this.abTipoIva[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public int bTipoIvaId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoIvaItemCantidad - 1)))
                {
                    return this.abTipoIva[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public int bTipoIvaItemCantidad
        {
            get
            {
                return this.ibTipoIvaItemCantidad;
            }
        }

        public string bTipoIvaVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoIvaItemCantidad - 1)))
                {
                    return this.abTipoIva[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        public string bTipoIvaVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoIvaItemCantidad - 1)))
                {
                    return this.aBMoneda[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        public string btoken
        {
            get
            {
                return this.strBToken;
            }
            set
            {
                this.strBToken = value;
            }
        }

        public string bUMedDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bUMedItemCantidad - 1)))
                {
                    return this.aBUMed[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public int bUMedId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bUMedItemCantidad - 1)))
                {
                    return this.aBUMed[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public int bUMedItemCantidad
        {
            get
            {
                return this.ibUMedItemCantidad;
            }
        }

        public string bUMedVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bUMedItemCantidad - 1)))
                {
                    return this.aBUMed[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        public string bUMedVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bUMedItemCantidad - 1)))
                {
                    return this.aBUMed[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        public int bZona
        {
            get
            {
                return this.ibZona;
            }
            set
            {
                this.ibZona = value;
            }
        }

        public string bZonaDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bZonaItemCantidad - 1)))
                {
                    return this.abZona[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public int bZonaId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bZonaItemCantidad - 1)))
                {
                    return this.abZona[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public int bZonaItemCantidad
        {
            get
            {
                return this.ibZonaItemCantidad;
            }
        }

        public string bZonaVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bZonaItemCantidad - 1)))
                {
                    return this.abZona[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        public string bZonaVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bZonaItemCantidad - 1)))
                {
                    return this.abZona[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        public string cuit
        {
            get
            {
                return this.strCuit;
            }
        }

        public int dCantidadTotal
        {
            get
            {
                return this.idCantidadTotal;
            }
            set
            {
                this.idCantidadTotal = value;
            }
        }

        public string dCodigo
        {
            get
            {
                return this.strdCodigo;
            }
            set
            {
                this.strdCodigo = value;
            }
        }

        public string dCuitATA
        {
            get
            {
                return this.strdCuitATA;
            }
            set
            {
                this.strdCuitATA = value;
            }
        }

        public string dCuitDeclarante
        {
            get
            {
                return this.strdCuitDeclarante;
            }
            set
            {
                this.strdCuitDeclarante = value;
            }
        }

        public string dCuitIE
        {
            get
            {
                return this.strdCuitIE;
            }
            set
            {
                this.strdCuitIE = value;
            }
        }

        public string dCuitPSad
        {
            get
            {
                return this.strdCuitPSad;
            }
            set
            {
                this.strdCuitPSad = value;
            }
        }

        public int dFamiliaCantidad
        {
            get
            {
                return this.adFamilia[this.dIndiceItem].cantidad;
            }
            set
            {
                this.adFamilia[this.dIndiceItem].cantidad = value;
            }
        }

        public string dFamiliaCodigo
        {
            get
            {
                return this.adFamilia[this.dIndiceItem].codigo;
            }
            set
            {
                this.adFamilia[this.dIndiceItem].codigo = value;
            }
        }

        public int dFamiliaItemCantidad
        {
            get
            {
                return this.idFamiliaItemCantidad;
            }
            set
            {
                this.idFamiliaItemCantidad = value;
                this.adFamilia = new dFamilia[(value - 1) + 1];
            }
        }

        public DateTime dFechaHoraAcept
        {
            get
            {
                return this.strdFechaHoraAcept;
            }
            set
            {
                this.strdFechaHoraAcept = value;
            }
        }

        public string dFechaHoraAceptS
        {
            get
            {
                return this.strdFechaHoraAcept.ToString("yyyyMMdd");
            }
            set
            {
                if (value == "")
                {
                    this.strdFechaHoraAcept = DateTime.ParseExact("20010101", "yyyyMMdd", null);
                }
                else
                {
                    this.strdFechaHoraAcept = DateTime.ParseExact(value, "yyyyMMdd", null);
                }
            }
        }

        public string dHashing
        {
            get
            {
                return this.strdHashing;
            }
            set
            {
                this.strdHashing = value;
            }
        }

        public int dIndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        public string DireccionServicio
        {
            get
            {
                return this.cDireccionServicio;
            }
            set
            {
                this.cDireccionServicio = value;
            }
        }

        public string DireccionServicioURL
        {
            get
            {
                return this.cDireccionServicioURL;
            }
            set
            {
                this.cDireccionServicioURL = value;
            }
        }

        public bool dLicenciaValida
        {
            get
            {
                return (((0x100 & this.LicenciaValor) == 0x100) & this.LicenciaDatosValida);
            }
        }

        public string dNroLegajo
        {
            get
            {
                return this.strdNroLegajo;
            }
            set
            {
                this.strdNroLegajo = value;
            }
        }

        public int dRespuestaCodError
        {
            get
            {
                return this.strdRespuestaCodError;
            }
        }

        public string dRespuestaDescError
        {
            get
            {
                return this.strdRespuestaDescError;
            }
        }

        public string dRespuestaDummyAuthServer
        {
            get
            {
                return this.strdRespuestaDummyAuthServer;
            }
        }

        public string dRespuestaDummyDbServer
        {
            get
            {
                return this.strdRespuestaDummyDbServer;
            }
        }

        public string dRespuetaDummyAppServer
        {
            get
            {
                return this.strdRespuestaDummyAppServer;
            }
        }

        public string dRol
        {
            get
            {
                return this.strdRol;
            }
            set
            {
                this.strdRol = value;
            }
        }

        public string dsign
        {
            get
            {
                return this.strdSign;
            }
            set
            {
                this.strdSign = value;
            }
        }

        public string dTicket
        {
            get
            {
                return this.strdTicket;
            }
            set
            {
                this.strdTicket = value;
            }
        }

        public DateTime dTicketHora
        {
            get
            {
                return this.tdTicketHora;
            }
        }

        public DateTime dTicketHoraVencimiento
        {
            get
            {
                return this.tdTicketHoraVencimiento;
            }
        }

        public bool dTicketValido
        {
            get
            {
                return this.bdTicketValido;
            }
        }

        public string dTipoAgente
        {
            get
            {
                return this.strdTipoAgente;
            }
            set
            {
                this.strdTipoAgente = value;
            }
        }

        public string dtoken
        {
            get
            {
                return this.strdToken;
            }
            set
            {
                this.strdToken = value;
            }
        }

        public string dURL
        {
            get
            {
                return this.strdURL;
            }
            set
            {
                this.strdURL = value;
            }
        }

        public int F1CabeceraCantReg
        {
            get
            {
                return this.iF1CabeceraCantReg;
            }
            set
            {
                this.iF1CabeceraCantReg = value;
                if (value == 0)
                {
                    this.aF1Detalle = new F1Detalle[value + 1];
                }
                else
                {
                    this.aF1Detalle = new F1Detalle[(value - 1) + 1];
                }
            }
        }

        public int F1CabeceraCbteTipo
        {
            get
            {
                return this.iF1CabeceraCbteTipo;
            }
            set
            {
                this.iF1CabeceraCbteTipo = value;
            }
        }

        public int F1CabeceraPtoVta
        {
            get
            {
                return this.iF1CabeceraPtoVta;
            }
            set
            {
                this.iF1CabeceraPtoVta = value;
            }
        }

        public string F1DetalleCAEA
        {
            get
            {
                return this.aF1Detalle[this.indice].CAEA;
            }
            set
            {
                this.aF1Detalle[this.indice].CAEA = value;
            }
        }

        public int F1DetalleCbteDesde
        {
            get
            {
                return (int) this.aF1Detalle[this.indice].CbteDesde;
            }
            set
            {
                this.aF1Detalle[this.indice].CbteDesde = value;
            }
        }

        public string F1DetalleCbteDesdeS
        {
            get
            {
                return this.aF1Detalle[this.indice].CbteDesde.ToString();
            }
            set
            {
                this.aF1Detalle[this.indice].CbteDesde = Conversions.ToLong(value);
            }
        }

        public string F1DetalleCbteFch
        {
            get
            {
                return this.aF1Detalle[this.indice].CbteFch;
            }
            set
            {
                this.aF1Detalle[this.indice].CbteFch = value;
            }
        }

        public int F1DetalleCbteHasta
        {
            get
            {
                return (int) this.aF1Detalle[this.indice].CbteHasta;
            }
            set
            {
                this.aF1Detalle[this.indice].CbteHasta = value;
            }
        }

        public string F1DetalleCbteHastaS
        {
            get
            {
                return this.aF1Detalle[this.indice].CbteHasta.ToString();
            }
            set
            {
                this.aF1Detalle[this.indice].CbteHasta = Conversions.ToLong(value);
            }
        }

        public int F1DetalleCbtesAsocItemCantidad
        {
            get
            {
                return this.aF1Detalle[this.indice].CbtesAsocItemCantidad;
            }
            set
            {
                this.aF1Detalle[this.indice].CbtesAsocItemCantidad = value;
                int value2 = this.F1CabeceraCantReg;
                if (value2 != 0)
                {
                    value2--;
                }
                if (value == 0)
                {
                    this.aF1DetalleCbtesAsoc = new F1DetalleCbtesAsoc[value2 + 1, value + 1];
                }
                else
                {
                    this.aF1DetalleCbtesAsoc = new F1DetalleCbtesAsoc[value2 + 1, (value - 1) + 1];
                }
            }
        }

        public int F1DetalleCbtesAsocNro
        {
            get
            {
                return (int) this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].Nro;
            }
            set
            {
                this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].Nro = value;
            }
        }

        public string F1DetalleCbtesAsocNroS
        {
            get
            {
                return this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].Nro.ToString();
            }
            set
            {
                this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].Nro = Conversions.ToLong(value);
            }
        }

        public int F1DetalleCbtesAsocPtoVta
        {
            get
            {
                return this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].PtoVta;
            }
            set
            {
                this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].PtoVta = value;
            }
        }

        public int F1DetalleCbtesAsocTipo
        {
            get
            {
                return this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].tipo;
            }
            set
            {
                this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].tipo = value;
            }
        }

        public int F1DetalleConcepto
        {
            get
            {
                return this.aF1Detalle[this.indice].concepto;
            }
            set
            {
                this.aF1Detalle[this.indice].concepto = value;
            }
        }

        public string F1DetalleDocNro
        {
            get
            {
                return this.aF1Detalle[this.indice].DocNro.ToString();
            }
            set
            {
                this.aF1Detalle[this.indice].DocNro = Conversions.ToLong(value);
            }
        }

        public int F1DetalleDocTipo
        {
            get
            {
                return this.aF1Detalle[this.indice].DocTipo;
            }
            set
            {
                this.aF1Detalle[this.indice].DocTipo = value;
            }
        }

        public string F1DetalleFchServDesde
        {
            get
            {
                return this.aF1Detalle[this.indice].FchServDesde;
            }
            set
            {
                this.aF1Detalle[this.indice].FchServDesde = value;
            }
        }

        public string F1DetalleFchServHasta
        {
            get
            {
                return this.aF1Detalle[this.indice].FchServHasta;
            }
            set
            {
                this.aF1Detalle[this.indice].FchServHasta = value;
            }
        }

        public string F1DetalleFchVtoPago
        {
            get
            {
                return this.aF1Detalle[this.indice].FchVtoPago;
            }
            set
            {
                this.aF1Detalle[this.indice].FchVtoPago = value;
            }
        }

        public double F1DetalleImpIva
        {
            get
            {
                return this.aF1Detalle[this.indice].ImpIva;
            }
            set
            {
                this.aF1Detalle[this.indice].ImpIva = value;
            }
        }

        public double F1DetalleImpNeto
        {
            get
            {
                return this.aF1Detalle[this.indice].ImpNeto;
            }
            set
            {
                this.aF1Detalle[this.indice].ImpNeto = value;
            }
        }

        public double F1DetalleImpOpEx
        {
            get
            {
                return this.aF1Detalle[this.indice].ImpOpEx;
            }
            set
            {
                this.aF1Detalle[this.indice].ImpOpEx = value;
            }
        }

        public double F1DetalleImpTotal
        {
            get
            {
                return this.aF1Detalle[this.indice].ImpTotal;
            }
            set
            {
                this.aF1Detalle[this.indice].ImpTotal = value;
            }
        }

        public double F1DetalleImpTotalConc
        {
            get
            {
                return this.aF1Detalle[this.indice].ImpTotalConc;
            }
            set
            {
                this.aF1Detalle[this.indice].ImpTotalConc = value;
            }
        }

        public double F1DetalleImpTrib
        {
            get
            {
                return this.aF1Detalle[this.indice].ImpTrib;
            }
            set
            {
                this.aF1Detalle[this.indice].ImpTrib = value;
            }
        }

        public double F1DetalleIvaBaseImp
        {
            get
            {
                return this.aF1DetalleIva[this.indice, this.IndiceItem].BaseImp;
            }
            set
            {
                this.aF1DetalleIva[this.indice, this.IndiceItem].BaseImp = value;
            }
        }

        public int F1DetalleIvaId
        {
            get
            {
                return this.aF1DetalleIva[this.indice, this.IndiceItem].id;
            }
            set
            {
                this.aF1DetalleIva[this.indice, this.IndiceItem].id = value;
            }
        }

        public double F1DetalleIvaImporte
        {
            get
            {
                return this.aF1DetalleIva[this.indice, this.IndiceItem].Importe;
            }
            set
            {
                this.aF1DetalleIva[this.indice, this.IndiceItem].Importe = value;
            }
        }

        public int F1DetalleIvaItemCantidad
        {
            get
            {
                return this.aF1Detalle[this.indice].IvaItemCantidad;
            }
            set
            {
                this.aF1Detalle[this.indice].IvaItemCantidad = value;
                int value2 = this.F1CabeceraCantReg;
                if (value2 != 0)
                {
                    value2--;
                }
                if (value == 0)
                {
                    this.aF1DetalleIva = new F1DetalleIva[value2 + 1, value + 1];
                }
                else
                {
                    this.aF1DetalleIva = new F1DetalleIva[value2 + 1, (value - 1) + 1];
                }
            }
        }

        public double F1DetalleMonCotiz
        {
            get
            {
                return this.aF1Detalle[this.indice].MonCotiz;
            }
            set
            {
                this.aF1Detalle[this.indice].MonCotiz = value;
            }
        }

        public string F1DetalleMonId
        {
            get
            {
                return this.aF1Detalle[this.indice].MonId;
            }
            set
            {
                this.aF1Detalle[this.indice].MonId = value;
            }
        }

        public string F1DetalleOpcionalId
        {
            get
            {
                return this.aF1DetalleOpcional[this.indice, this.IndiceItem].id;
            }
            set
            {
                this.aF1DetalleOpcional[this.indice, this.IndiceItem].id = value;
            }
        }

        public int F1DetalleOpcionalItemCantidad
        {
            get
            {
                return this.aF1Detalle[this.indice].OpcionalItemCantidad;
            }
            set
            {
                this.aF1Detalle[this.indice].OpcionalItemCantidad = value;
                int value2 = this.F1CabeceraCantReg;
                if (value2 != 0)
                {
                    value2--;
                }
                if (value == 0)
                {
                    this.aF1DetalleOpcional = new F1DetalleOpcional[value2 + 1, value + 1];
                }
                else
                {
                    this.aF1DetalleOpcional = new F1DetalleOpcional[value2 + 1, (value - 1) + 1];
                }
            }
        }

        public string F1DetalleOpcionalValor
        {
            get
            {
                return this.aF1DetalleOpcional[this.indice, this.IndiceItem].valor;
            }
            set
            {
                this.aF1DetalleOpcional[this.indice, this.IndiceItem].valor = value;
            }
        }

        public double F1DetalleTributoAlic
        {
            get
            {
                return this.aF1DetalleTributo[this.indice, this.IndiceItem].Alic;
            }
            set
            {
                this.aF1DetalleTributo[this.indice, this.IndiceItem].Alic = value;
            }
        }

        public double F1DetalleTributoBaseImp
        {
            get
            {
                return this.aF1DetalleTributo[this.indice, this.IndiceItem].BaseImp;
            }
            set
            {
                this.aF1DetalleTributo[this.indice, this.IndiceItem].BaseImp = value;
            }
        }

        public string F1DetalleTributoDesc
        {
            get
            {
                return this.aF1DetalleTributo[this.indice, this.IndiceItem].desc;
            }
            set
            {
                this.aF1DetalleTributo[this.indice, this.IndiceItem].desc = value;
            }
        }

        public int F1DetalleTributoId
        {
            get
            {
                return this.aF1DetalleTributo[this.indice, this.IndiceItem].id;
            }
            set
            {
                this.aF1DetalleTributo[this.indice, this.IndiceItem].id = value;
            }
        }

        public double F1DetalleTributoImporte
        {
            get
            {
                return this.aF1DetalleTributo[this.indice, this.IndiceItem].Importe;
            }
            set
            {
                this.aF1DetalleTributo[this.indice, this.IndiceItem].Importe = value;
            }
        }

        public int F1DetalleTributoItemCantidad
        {
            get
            {
                return this.aF1Detalle[this.indice].TributoItemCantidad;
            }
            set
            {
                this.aF1Detalle[this.indice].TributoItemCantidad = value;
                int value2 = this.F1CabeceraCantReg;
                if (value2 != 0)
                {
                    value2--;
                }
                if (value == 0)
                {
                    this.aF1DetalleTributo = new F1DetalleTributo[value2 + 1, value + 1];
                }
                else
                {
                    this.aF1DetalleTributo = new F1DetalleTributo[value2 + 1, (value - 1) + 1];
                }
            }
        }

        public string f1DireccionServicioURL
        {
            get
            {
                return this.cf1DireccionServicioURL;
            }
            set
            {
                this.cf1DireccionServicioURL = value;
            }
        }

        public int f1ErrorCode
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1ErrorItemCantidad - 1)))
                {
                    return this.af1Error[this.IndiceItem].code;
                }
                return 0;
            }
        }

        public int f1ErrorCode1
        {
            get
            {
                if ((this.f1ErrorItemCantidad - 1) >= 0)
                {
                    return this.af1Error[0].code;
                }
                return 0;
            }
        }

        public int f1ErrorCode2
        {
            get
            {
                if ((this.f1ErrorItemCantidad - 1) >= 1)
                {
                    return this.af1Error[1].code;
                }
                return 0;
            }
        }

        public int f1ErrorItemCantidad
        {
            get
            {
                return this.if1ErrorItemCantidad;
            }
        }

        public string f1ErrorMsg
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1ErrorItemCantidad - 1)))
                {
                    return this.af1Error[this.IndiceItem].msg;
                }
                return "";
            }
        }

        public string f1ErrorMsg1
        {
            get
            {
                if ((this.f1ErrorItemCantidad - 1) >= 0)
                {
                    return this.af1Error[0].msg;
                }
                return "";
            }
        }

        public string f1ErrorMsg2
        {
            get
            {
                if ((this.f1ErrorItemCantidad - 1) >= 1)
                {
                    return this.af1Error[1].msg;
                }
                return "";
            }
        }

        public int f1EventCode
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1EventItemCantidad - 1)))
                {
                    return this.af1Event[this.IndiceItem].code;
                }
                return 0;
            }
        }

        public int f1EventCode1
        {
            get
            {
                if ((this.f1EventItemCantidad - 1) >= 0)
                {
                    return this.af1Event[0].code;
                }
                return 0;
            }
        }

        public int f1EventCode2
        {
            get
            {
                if ((this.f1EventItemCantidad - 1) >= 1)
                {
                    return this.af1Event[1].code;
                }
                return 0;
            }
        }

        public int f1EventItemCantidad
        {
            get
            {
                return this.if1EventItemCantidad;
            }
        }

        public string f1EventMsg
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1EventItemCantidad - 1)))
                {
                    return this.af1Event[this.IndiceItem].msg;
                }
                return "";
            }
        }

        public string f1EventMsg1
        {
            get
            {
                if ((this.f1EventItemCantidad - 1) >= 0)
                {
                    return this.af1Event[0].msg;
                }
                return "";
            }
        }

        public string f1EventMsg2
        {
            get
            {
                if ((this.f1EventItemCantidad - 1) >= 1)
                {
                    return this.af1Event[1].msg;
                }
                return "";
            }
        }

        public int f1Indice
        {
            get
            {
                return this.iIndice;
            }
            set
            {
                this.iIndice = value;
            }
        }

        public int f1IndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        public bool f1LicenciaValidaCae
        {
            get
            {
                return (((0x800 & this.LicenciaValor) == 0x800) & this.LicenciaDatosValida);
            }
        }

        public bool f1LicenciaValidaCaea
        {
            get
            {
                return (((0x1000 & this.LicenciaValor) == 0x1000) & this.LicenciaDatosValida);
            }
        }

        public string f1PtosVenta_Bloqueado
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1PtosVentaItemCantidad - 1)))
                {
                    return this.af1PtosVenta[this.IndiceItem].Bloqueado;
                }
                return "";
            }
        }

        public string f1PtosVenta_EmisisionTipo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1PtosVentaItemCantidad - 1)))
                {
                    return this.af1PtosVenta[this.IndiceItem].EmisionTipo;
                }
                return "";
            }
        }

        public string f1PtosVenta_fchBaja
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1PtosVentaItemCantidad - 1)))
                {
                    return this.af1PtosVenta[this.IndiceItem].fchBaja;
                }
                return "";
            }
        }

        public int f1PtosVenta_nro
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1PtosVentaItemCantidad - 1)))
                {
                    return this.af1PtosVenta[this.IndiceItem].nro;
                }
                return 0;
            }
        }

        public int f1PtosVentaItemCantidad
        {
            get
            {
                return this.if1PtosVentaItemCantidad;
            }
        }

        public string f1RespuestaCAEA
        {
            get
            {
                return this.strF1RespuestaCAEA;
            }
        }

        public string f1RespuestaCAEAFchProceso
        {
            get
            {
                return this.strF1RespuestaCAEAFchProceso;
            }
        }

        public string f1RespuestaCAEAFchTopeInf
        {
            get
            {
                return this.strF1RespuestaCAEAFchTopeInf;
            }
        }

        public string f1RespuestaCAEAFchVigDesde
        {
            get
            {
                return this.strF1RespuestaCAEAFchVigDesde;
            }
        }

        public string f1RespuestaCAEAFchVigHasta
        {
            get
            {
                return this.strF1RespuestaCAEAFchVigHasta;
            }
        }

        public int F1RespuestaCAEAItemCantidad
        {
            get
            {
                return this.iF1RespuestaCAEAItemCantidad;
            }
        }

        public int f1RespuestaCAEAOrden
        {
            get
            {
                return this.iF1RespuestaCAEAOrden;
            }
        }

        public string f1RespuestaCAEAOrdenS
        {
            get
            {
                return this.iF1RespuestaCAEAOrden.ToString();
            }
        }

        public int f1RespuestaCAEAPeriodo
        {
            get
            {
                return this.iF1RespuestaCAEAPeriodo;
            }
        }

        public string f1RespuestaCAEAPeriodoS
        {
            get
            {
                return this.iF1RespuestaCAEAPeriodo.ToString();
            }
        }

        public int F1RespuestaCantidadReg
        {
            get
            {
                return this.iF1RespuetaCantidadReg;
            }
        }

        public string F1RespuestaDetalleCae
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CAE;
            }
        }

        public string F1RespuestaDetalleCAEA
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CAEA;
            }
        }

        public string F1RespuestaDetalleCAEACAEA
        {
            get
            {
                return this.aF1RespuestaDetalleCAEA[this.IndiceItem].CAEA;
            }
        }

        public string F1RespuestaDetalleCAEAFchProceso
        {
            get
            {
                return this.aF1RespuestaDetalleCAEA[this.IndiceItem].FchProceso;
            }
        }

        public int F1RespuestaDetalleCAEAPtoVta
        {
            get
            {
                return this.aF1RespuestaDetalleCAEA[this.IndiceItem].PtoVta;
            }
        }

        public string F1RespuestaDetalleCAEFchVto
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CAEFchVto;
            }
        }

        public int F1RespuestaDetalleCbteDesde
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CbteDesde;
            }
        }

        public string F1RespuestaDetalleCbteDesdeS
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CbteDesde.ToString();
            }
        }

        public string F1RespuestaDetalleCbteFch
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CbteFch;
            }
        }

        public int F1RespuestaDetalleCbteHasta
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CbteHasta;
            }
        }

        public string F1RespuestaDetalleCbteHastaS
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CbteHasta.ToString();
            }
        }

        public string F1RespuestaDetalleCodAutorizacion
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CodAutorizacion;
            }
        }

        public int F1RespuestaDetalleConcepto
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].concepto;
            }
        }

        public string F1RespuestaDetalleDocNro
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].DocNro.ToString();
            }
        }

        public int F1RespuestaDetalleDocTipo
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].DocTipo;
            }
        }

        public string F1RespuestaDetalleEmisionTipo
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].EmisionTipo;
            }
        }

        public int F1RespuestaDetalleObservacionCode
        {
            get
            {
                return this.aF1RespuestaDetalleObs[this.indice, this.IndiceItem].code;
            }
        }

        public int F1RespuestaDetalleObservacionCode1
        {
            get
            {
                if (this.F1RespuestaDetalleObservacionItemCantidad > 0)
                {
                    return this.aF1RespuestaDetalleObs[this.indice, 0].code;
                }
                return 0;
            }
        }

        public int F1RespuestaDetalleObservacionItemCantidad
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].ObservacionItemCantidad;
            }
        }

        public string F1RespuestaDetalleObservacionMsg
        {
            get
            {
                return this.aF1RespuestaDetalleObs[this.indice, this.IndiceItem].msg;
            }
        }

        public string F1RespuestaDetalleObservacionMsg1
        {
            get
            {
                if (this.F1RespuestaDetalleObservacionItemCantidad > 0)
                {
                    return this.aF1RespuestaDetalleObs[this.indice, 0].msg;
                }
                return "";
            }
        }

        public string F1RespuestaDetalleResultado
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].Resultado;
            }
        }

        public string f1RespuestaDummyAuthServer
        {
            get
            {
                return this.strf1RespuestaDummyAuthServer;
            }
        }

        public string f1RespuestaDummyDbServer
        {
            get
            {
                return this.strf1RespuestaDummyDbServer;
            }
        }

        public string F1RespuestaFchProceso
        {
            get
            {
                return this.strF1RespuestaFchProceso;
            }
        }

        public double f1RespuestaMonedaCotiz
        {
            get
            {
                return this.iF1RespuestaMonedaCotiz;
            }
        }

        public string f1RespuestaMonedaFchCotiz
        {
            get
            {
                return this.strF1RespuestaMonedaFchCotiz;
            }
        }

        public string f1RespuestaMonedaId
        {
            get
            {
                return this.strF1RespuestaMonedaId;
            }
        }

        public string F1RespuestaReProceso
        {
            get
            {
                return this.strF1RespuestaReProceso;
            }
        }

        public string F1RespuestaResultado
        {
            get
            {
                return this.strF1RespuestaResultado;
            }
        }

        public string f1RespuetaDummyAppServer
        {
            get
            {
                return this.strf1RespuestaDummyAppServer;
            }
        }

        public string f1sign
        {
            get
            {
                return this.strf1Sign;
            }
            set
            {
                this.strf1Sign = value;
            }
        }

        public bool f1TicketEsValido
        {
            get
            {
                if (!this.f1TicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.f1TicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        public DateTime f1TicketHora
        {
            get
            {
                return this.tf1TicketHora;
            }
        }

        public DateTime f1TicketHoraVencimiento
        {
            get
            {
                return this.tf1TicketHoraVencimiento;
            }
        }

        public bool f1TicketValido
        {
            get
            {
                return this.bf1TicketValido;
            }
        }

        public string f1TiposCbte_Desc
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposCbteItemCantidad - 1)))
                {
                    return this.af1TiposCbte[this.IndiceItem].desc;
                }
                return "";
            }
        }

        public string f1TiposCbte_fchDesde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposCbteItemCantidad - 1)))
                {
                    return this.af1TiposCbte[this.IndiceItem].fchDesde;
                }
                return "";
            }
        }

        public string f1TiposCbte_fchHasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposCbteItemCantidad - 1)))
                {
                    return this.af1TiposCbte[this.IndiceItem].fchHasta;
                }
                return "";
            }
        }

        public int f1TiposCbte_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposCbteItemCantidad - 1)))
                {
                    return this.af1TiposCbte[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public int f1TiposCbteItemCantidad
        {
            get
            {
                return this.if1TiposCbteItemCantidad;
            }
        }

        public string f1TiposConcepto_Desc
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposConceptoItemCantidad - 1)))
                {
                    return this.af1TiposConcepto[this.IndiceItem].desc;
                }
                return "";
            }
        }

        public string f1TiposConcepto_fchDesde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposConceptoItemCantidad - 1)))
                {
                    return this.af1TiposConcepto[this.IndiceItem].fchDesde;
                }
                return "";
            }
        }

        public string f1TiposConcepto_fchHasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposConceptoItemCantidad - 1)))
                {
                    return this.af1TiposConcepto[this.IndiceItem].fchHasta;
                }
                return "";
            }
        }

        public int f1TiposConcepto_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposConceptoItemCantidad - 1)))
                {
                    return this.af1TiposConcepto[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public int f1TiposConceptoItemCantidad
        {
            get
            {
                return this.if1TiposConceptoItemCantidad;
            }
        }

        public string f1TiposDoc_Desc
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposDocItemCantidad - 1)))
                {
                    return this.af1TiposDoc[this.IndiceItem].desc;
                }
                return "";
            }
        }

        public string f1TiposDoc_fchDesde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposDocItemCantidad - 1)))
                {
                    return this.af1TiposDoc[this.IndiceItem].fchDesde;
                }
                return "";
            }
        }

        public string f1TiposDoc_fchHasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposDocItemCantidad - 1)))
                {
                    return this.af1TiposDoc[this.IndiceItem].fchHasta;
                }
                return "";
            }
        }

        public int f1TiposDoc_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposDocItemCantidad - 1)))
                {
                    return this.af1TiposDoc[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public int f1TiposDocItemCantidad
        {
            get
            {
                return this.if1TiposDocItemCantidad;
            }
        }

        public string f1TiposIva_Desc
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposIvaItemCantidad - 1)))
                {
                    return this.af1TiposIva[this.IndiceItem].desc;
                }
                return "";
            }
        }

        public string f1TiposIva_fchDesde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposIvaItemCantidad - 1)))
                {
                    return this.af1TiposIva[this.IndiceItem].fchDesde;
                }
                return "";
            }
        }

        public string f1TiposIva_fchHasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposIvaItemCantidad - 1)))
                {
                    return this.af1TiposIva[this.IndiceItem].fchHasta;
                }
                return "";
            }
        }

        public int f1TiposIva_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposIvaItemCantidad - 1)))
                {
                    return this.af1TiposIva[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public int f1TiposIvaItemCantidad
        {
            get
            {
                return this.if1TiposIvaItemCantidad;
            }
        }

        public string f1TiposMoneda_Desc
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposMonedaItemCantidad - 1)))
                {
                    return this.af1TiposMoneda[this.IndiceItem].desc;
                }
                return "";
            }
        }

        public string f1TiposMoneda_fchDesde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposMonedaItemCantidad - 1)))
                {
                    return this.af1TiposMoneda[this.IndiceItem].fchDesde;
                }
                return "";
            }
        }

        public string f1TiposMoneda_fchHasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposMonedaItemCantidad - 1)))
                {
                    return this.af1TiposMoneda[this.IndiceItem].fchHasta;
                }
                return "";
            }
        }

        public string f1TiposMoneda_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposMonedaItemCantidad - 1)))
                {
                    return this.af1TiposMoneda[this.IndiceItem].id;
                }
                return "";
            }
        }

        public int f1TiposMonedaItemCantidad
        {
            get
            {
                return this.if1TiposMonedaItemCantidad;
            }
        }

        public string f1TiposOpcional_Desc
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposOpcionalItemCantidad - 1)))
                {
                    return this.af1TiposOpcional[this.IndiceItem].desc;
                }
                return "";
            }
        }

        public string f1TiposOpcional_fchDesde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposOpcionalItemCantidad - 1)))
                {
                    return this.af1TiposOpcional[this.IndiceItem].fchDesde;
                }
                return "";
            }
        }

        public string f1TiposOpcional_fchHasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposOpcionalItemCantidad - 1)))
                {
                    return this.af1TiposOpcional[this.IndiceItem].fchHasta;
                }
                return "";
            }
        }

        public int f1TiposOpcional_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposOpcionalItemCantidad - 1)))
                {
                    return this.af1TiposOpcional[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public int f1TiposOpcionalItemCantidad
        {
            get
            {
                return this.if1TiposOpcionalItemCantidad;
            }
        }

        public string f1TiposTributo_Desc
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposTributoItemCantidad - 1)))
                {
                    return this.af1TiposTributo[this.IndiceItem].desc;
                }
                return "";
            }
        }

        public string f1TiposTributo_fchDesde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposTributoItemCantidad - 1)))
                {
                    return this.af1TiposTributo[this.IndiceItem].fchDesde;
                }
                return "";
            }
        }

        public string f1TiposTributo_fchHasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposTributoItemCantidad - 1)))
                {
                    return this.af1TiposTributo[this.IndiceItem].fchHasta;
                }
                return "";
            }
        }

        public int f1TiposTributo_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposTributoItemCantidad - 1)))
                {
                    return this.af1TiposTributo[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public int f1TiposTributoItemCantidad
        {
            get
            {
                return this.if1TiposTributoItemCantidad;
            }
        }

        public string f1token
        {
            get
            {
                return this.strf1Token;
            }
            set
            {
                this.strf1Token = value;
            }
        }

        public int FECabeceraCantReg
        {
            get
            {
                return this.iFECabeceraCantReg;
            }
            set
            {
                this.iFECabeceraCantReg = value;
                if (value == 0)
                {
                    this.aFEDetalle = new FEDetalle[value + 1];
                }
                else
                {
                    this.aFEDetalle = new FEDetalle[(value - 1) + 1];
                }
            }
        }

        public int FECabeceraPresta_serv
        {
            get
            {
                return this.iFECabeceraPresta_serv;
            }
            set
            {
                this.iFECabeceraPresta_serv = value;
            }
        }

        public int FEDetalleCbt_desde
        {
            get
            {
                return (int) this.aFEDetalle[this.indice].cbt_desde;
            }
            set
            {
                this.aFEDetalle[this.indice].cbt_desde = value;
            }
        }

        public int FEDetalleCbt_hasta
        {
            get
            {
                return (int) this.aFEDetalle[this.indice].cbt_hasta;
            }
            set
            {
                this.aFEDetalle[this.indice].cbt_hasta = value;
            }
        }

        public string FEDetalleFecha_cbte
        {
            get
            {
                return this.aFEDetalle[this.indice].fecha_cbte;
            }
            set
            {
                this.aFEDetalle[this.indice].fecha_cbte = value;
            }
        }

        public string FEDetalleFecha_serv_desde
        {
            get
            {
                return this.aFEDetalle[this.indice].fecha_serv_desde;
            }
            set
            {
                this.aFEDetalle[this.indice].fecha_serv_desde = value;
            }
        }

        public string FEDetalleFecha_serv_hasta
        {
            get
            {
                return this.aFEDetalle[this.indice].fecha_serv_hasta;
            }
            set
            {
                this.aFEDetalle[this.indice].fecha_serv_hasta = value;
            }
        }

        public string FEDetalleFecha_vence_pago
        {
            get
            {
                return this.aFEDetalle[this.indice].fecha_venc_pago;
            }
            set
            {
                this.aFEDetalle[this.indice].fecha_venc_pago = value;
            }
        }

        public double FEDetalleImp_neto
        {
            get
            {
                return this.aFEDetalle[this.indice].imp_neto;
            }
            set
            {
                this.aFEDetalle[this.indice].imp_neto = value;
            }
        }

        public double FEDetalleImp_op_ex
        {
            get
            {
                return this.aFEDetalle[this.indice].imp_op_ex;
            }
            set
            {
                this.aFEDetalle[this.indice].imp_op_ex = value;
            }
        }

        public double FEDetalleImp_tot_conc
        {
            get
            {
                return this.aFEDetalle[this.indice].imp_tot_conc;
            }
            set
            {
                this.aFEDetalle[this.indice].imp_tot_conc = value;
            }
        }

        public double FEDetalleImp_total
        {
            get
            {
                return this.aFEDetalle[this.indice].imp_total;
            }
            set
            {
                this.aFEDetalle[this.indice].imp_total = value;
            }
        }

        public double FEDetalleImpto_liq
        {
            get
            {
                return this.aFEDetalle[this.indice].impto_liq;
            }
            set
            {
                this.aFEDetalle[this.indice].impto_liq = value;
            }
        }

        public double FEdetalleImto_liq_rni
        {
            get
            {
                return this.aFEDetalle[this.indice].impto_liq_rni;
            }
            set
            {
                this.aFEDetalle[this.indice].impto_liq_rni = value;
            }
        }

        public string FEDetalleNro_doc
        {
            get
            {
                return this.aFEDetalle[this.indice].nro_doc.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.aFEDetalle[this.indice].nro_doc = Conversions.ToLong(value);
            }
        }

        public int FEDetallePunto_vta
        {
            get
            {
                return this.aFEDetalle[this.indice].punto_vta;
            }
            set
            {
                this.aFEDetalle[this.indice].punto_vta = value;
            }
        }

        public TipoComprobante FEDetalleTipo_cbte
        {
            get
            {
                return this.aFEDetalle[this.indice].tipo_cbte;
            }
            set
            {
                this.aFEDetalle[this.indice].tipo_cbte = value;
            }
        }

        public TipoDocumento FEDetalleTipo_doc
        {
            get
            {
                return this.aFEDetalle[this.indice].tipo_doc;
            }
            set
            {
                this.aFEDetalle[this.indice].tipo_doc = value;
            }
        }

        public int FERespuestaCantidadReg
        {
            get
            {
                return this.iFERespuestaCantidadReg;
            }
        }

        public string FERespuestaCuit
        {
            get
            {
                return this.uFERespuestaCuit.ToString();
            }
        }

        public string FERespuestaDetalleCae
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].cae;
            }
        }

        public int FERespuestaDetalleCbt_desde
        {
            get
            {
                return (int) this.aFERespuestaDetalle[this.indice].cbt_desde;
            }
        }

        public int FERespuestaDetalleCbt_hasta
        {
            get
            {
                return (int) this.aFERespuestaDetalle[this.indice].cbt_hasta;
            }
        }

        public string FERespuestaDetalleFecha_cbte
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].fecha_cbte;
            }
        }

        public string FERespuestaDetalleFecha_serv_desde
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].fecha_serv_desde;
            }
        }

        public string FERespuestaDetalleFecha_serv_hasta
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].fecha_serv_hasta;
            }
        }

        public string FERespuestaDetalleFecha_venc_pago
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].fecha_venc_pago;
            }
        }

        public string FERespuestaDetalleFecha_vto
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].fecha_vto;
            }
        }

        public double FERespuestaDetalleImp_neto
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].imp_neto;
            }
        }

        public double FERespuestaDetalleImp_op_ex
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].imp_op_ex;
            }
        }

        public double FERespuestaDetalleImp_tot_conc
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].imp_tot_conc;
            }
        }

        public double FERespuestaDetalleImp_total
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].imp_total;
            }
        }

        public double FERespuestaDetalleImpt_liq_rni
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].impto_liq_rni;
            }
        }

        public double FERespuestaDetalleImpto_liq
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].impto_liq;
            }
        }

        public string FERespuestaDetalleMotivo
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].motivo;
            }
        }

        public string FERespuestaDetalleNor_doc
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].nro_doc.ToString();
            }
        }

        public int FERespuestaDetallePunto_vta
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].punto_vta;
            }
        }

        public string FERespuestaDetalleResultado
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].resultado;
            }
        }

        public TipoComprobante FERespuestaDetalleTipo_cbte
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].tipo_cbte;
            }
        }

        public TipoDocumento FERespuestaDetalleTipo_doc
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].tipo_doc;
            }
        }

        public string FERespuestaFecha_cae
        {
            get
            {
                return this.strFERespuestaFecha_cae;
            }
        }

        public string FERespuestaId
        {
            get
            {
                return this.uFERespuestaId.ToString();
            }
        }

        public string FERespuestaMotivo
        {
            get
            {
                return this.strFERespuestaMotivo;
            }
        }

        public int FERespuestaPresta_serv
        {
            get
            {
                return this.iFERespuestaPresta_serv;
            }
        }

        public string FERespuestaReproceso
        {
            get
            {
                return this.strFERespuestaReproceso;
            }
        }

        public string FERespuestaResultado
        {
            get
            {
                return this.strFERespuestaResultado;
            }
        }

        public int fxCAEAItemCantidad
        {
            get
            {
                return this.ifxCAEAItemCantidad;
            }
            set
            {
                this.ifxCAEAItemCantidad = value;
                this.aFxCAEAs = new fxCAEA[(value - 1) + 1];
            }
        }

        public string fxCodigoAutorizacion
        {
            get
            {
                return this.lfxCodigoAutorizacion.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.lfxCodigoAutorizacion = Conversions.ToLong(value);
            }
        }

        public bool fxCodigoAutorizacionNO
        {
            get
            {
                return this.fxNoEspecificar("CodigoAutorizacion", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("CodigoAutorizacion", 0);
                }
                else
                {
                    this.fxNoEspecificar("CodigoAutorizacion", 1);
                }
            }
        }

        public int fxCodigoConcepto
        {
            get
            {
                return this.ifxCodigoConcepto;
            }
            set
            {
                this.ifxCodigoConcepto = value;
            }
        }

        public string fxCodigoMoneda
        {
            get
            {
                return this.strfxCodigoMoneda;
            }
            set
            {
                this.strfxCodigoMoneda = value;
            }
        }

        public string fxCodigoTipoAutorizacion
        {
            get
            {
                return this.ifxCodigoTipoAutorizacion;
            }
            set
            {
                this.ifxCodigoTipoAutorizacion = value;
            }
        }

        public bool fxCodigoTipoAutorizacionNO
        {
            get
            {
                return this.fxNoEspecificar("CodigoTipoAutorizacion", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("CodigoTipoAutorizacion", 0);
                }
                else
                {
                    this.fxNoEspecificar("CodigoTipoAutorizacion", 1);
                }
            }
        }

        public int fxCodigoTipoComprobante
        {
            get
            {
                return this.ifxCodigoTipoComprobante;
            }
            set
            {
                this.ifxCodigoTipoComprobante = value;
            }
        }

        public int fxCodigoTipoDocumento
        {
            get
            {
                return this.ifxCodigoTipoDocumento;
            }
            set
            {
                this.ifxCodigoTipoDocumento = value;
            }
        }

        public bool fxCodigoTipoDocumentoNO
        {
            get
            {
                return this.fxNoEspecificar("CodigoTipoDocumento", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("CodigoTipoDocumento", 0);
                }
                else
                {
                    this.fxNoEspecificar("CodigoTipoDocumento", 1);
                }
            }
        }

        public int fxComprobanteAsosiadoCodigoTipoComprobante
        {
            get
            {
                return this.aFxComprobantesAsociados[this.fxIndiceItem].codigoTipoComprobante;
            }
            set
            {
                this.aFxComprobantesAsociados[this.fxIndiceItem].codigoTipoComprobante = value;
            }
        }

        public int fxComprobanteAsosiadoNumeroComprobante
        {
            get
            {
                return (int) this.aFxComprobantesAsociados[this.fxIndiceItem].numeroComprobante;
            }
            set
            {
                this.aFxComprobantesAsociados[this.fxIndiceItem].numeroComprobante = value;
            }
        }

        public int fxComprobanteAsosiadoNumeroPuntoVenta
        {
            get
            {
                return (int) this.aFxComprobantesAsociados[this.fxIndiceItem].numeroPuntoVenta;
            }
            set
            {
                this.aFxComprobantesAsociados[this.fxIndiceItem].numeroPuntoVenta = value;
            }
        }

        public int fxComprobantesAsociadosItemCantidad
        {
            get
            {
                return this.ifxComprobantesAsociadosItemCantidad;
            }
            set
            {
                this.ifxComprobantesAsociadosItemCantidad = value;
                this.aFxComprobantesAsociados = new fxComprobantesAsociados[(value - 1) + 1];
            }
        }

        public double fxCotizacionMoneda
        {
            get
            {
                return this.ifxCotizacionMoneda;
            }
            set
            {
                this.ifxCotizacionMoneda = value;
            }
        }

        public string fxDireccionServicioURL
        {
            get
            {
                return this.cfxDireccionServicioURL;
            }
            set
            {
                this.cfxDireccionServicioURL = value;
            }
        }

        public int fxErrorCode
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.fxErrorItemCantidad - 1)))
                {
                    return this.afxError[this.IndiceItem].code;
                }
                return 0;
            }
        }

        public int fxErrorCode1
        {
            get
            {
                if ((this.fxErrorItemCantidad - 1) >= 0)
                {
                    return this.afxError[0].code;
                }
                return 0;
            }
        }

        public int fxErrorCode2
        {
            get
            {
                if ((this.fxErrorItemCantidad - 1) >= 1)
                {
                    return this.afxError[1].code;
                }
                return 0;
            }
        }

        public int fxErrorItemCantidad
        {
            get
            {
                return this.ifxErrorItemCantidad;
            }
        }

        public string fxErrorMsg
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.fxErrorItemCantidad - 1)))
                {
                    return this.afxError[this.IndiceItem].msg;
                }
                return "";
            }
        }

        public string fxErrorMsg1
        {
            get
            {
                if ((this.fxErrorItemCantidad - 1) >= 0)
                {
                    return this.afxError[0].msg;
                }
                return "";
            }
        }

        public string fxErrorMsg2
        {
            get
            {
                if ((this.fxErrorItemCantidad - 1) >= 1)
                {
                    return this.afxError[1].msg;
                }
                return "";
            }
        }

        public int fxEventCode
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.fxEventItemCantidad - 1)))
                {
                    return this.afxEvent[this.IndiceItem].code;
                }
                return 0;
            }
        }

        public int fxEventCode1
        {
            get
            {
                if ((this.fxEventItemCantidad - 1) >= 0)
                {
                    return this.afxEvent[0].code;
                }
                return 0;
            }
        }

        public int fxEventCode2
        {
            get
            {
                if ((this.fxEventItemCantidad - 1) >= 1)
                {
                    return this.afxEvent[1].code;
                }
                return 0;
            }
        }

        public int fxEventItemCantidad
        {
            get
            {
                return this.ifxEventItemCantidad;
            }
        }

        public string fxEventMsg
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.fxEventItemCantidad - 1)))
                {
                    return this.afxEvent[this.IndiceItem].msg;
                }
                return "";
            }
        }

        public string fxEventMsg1
        {
            get
            {
                if ((this.fxEventItemCantidad - 1) >= 0)
                {
                    return this.afxEvent[0].msg;
                }
                return "";
            }
        }

        public string fxEventMsg2
        {
            get
            {
                if ((this.fxEventItemCantidad - 1) >= 1)
                {
                    return this.afxEvent[1].msg;
                }
                return "";
            }
        }

        public string fxFechaEmision
        {
            get
            {
                return this.dfxFechaEmision.ToString("yyyyMMdd");
            }
            set
            {
                if (value == "")
                {
                    value = "20010101";
                }
                this.dfxFechaEmision = DateTime.ParseExact(value, "yyyyMMdd", null);
            }
        }

        public bool fxFechaEmisionNO
        {
            get
            {
                return this.fxNoEspecificar("FechaEmision", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("FechaEmision", 0);
                }
                else
                {
                    this.fxNoEspecificar("FechaEmision", 1);
                }
            }
        }

        public string fxFechaServicioDesde
        {
            get
            {
                return this.dfxFechaServicioDesde.ToString("yyyyMMdd");
            }
            set
            {
                if (value == "")
                {
                    value = "20010101";
                }
                this.dfxFechaServicioDesde = DateTime.ParseExact(value, "yyyyMMdd", null);
            }
        }

        public bool fxFechaServicioDesdeNO
        {
            get
            {
                return this.fxNoEspecificar("FechaServicioDesde", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("FechaServicioDesde", 0);
                }
                else
                {
                    this.fxNoEspecificar("FechaServicioDesde", 1);
                }
            }
        }

        public string fxFechaServicioHasta
        {
            get
            {
                return this.dfxFechaServicioHasta.ToString("yyyyMMdd");
            }
            set
            {
                if (value == "")
                {
                    value = "20010101";
                }
                this.dfxFechaServicioHasta = DateTime.ParseExact(value, "yyyyMMdd", null);
            }
        }

        public bool fxFechaServicioHastaNO
        {
            get
            {
                return this.fxNoEspecificar("FechaServicioHasta", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("FechaServicioHasta", 0);
                }
                else
                {
                    this.fxNoEspecificar("FechaServicioHasta", 1);
                }
            }
        }

        public string fxFechaVencimiento
        {
            get
            {
                return this.dfxFechaVencimiento.ToString("yyyyMMdd");
            }
            set
            {
                if (value == "")
                {
                    value = "20010101";
                }
                this.dfxFechaVencimiento = DateTime.ParseExact(value, "yyyyMMdd", null);
            }
        }

        public bool fxFechaVencimientoNO
        {
            get
            {
                return this.fxNoEspecificar("FechaVencimiento", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("FechaVencimiento", 0);
                }
                else
                {
                    this.fxNoEspecificar("FechaVencimiento", 1);
                }
            }
        }

        public string fxFechaVencimientoPago
        {
            get
            {
                return this.dfxFechaVencimientoPago.ToString("yyyyMMdd");
            }
            set
            {
                if (value == "")
                {
                    value = "20010101";
                }
                this.dfxFechaVencimientoPago = DateTime.ParseExact(value, "yyyyMMdd", null);
            }
        }

        public bool fxFechaVencimientoPagoNO
        {
            get
            {
                return this.fxNoEspecificar("FechaVencimientoPago", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("FechaVencimientoPago", 0);
                }
                else
                {
                    this.fxNoEspecificar("FechaVencimientoPago", 1);
                }
            }
        }

        public double fxImporteExento
        {
            get
            {
                return this.nfxImporteExento;
            }
            set
            {
                this.nfxImporteExento = value;
            }
        }

        public bool fxImporteExentoNO
        {
            get
            {
                return this.fxNoEspecificar("ImporteExento", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("ImporteExento", 0);
                }
                else
                {
                    this.fxNoEspecificar("ImporteExento", 1);
                }
            }
        }

        public double fxImporteGravado
        {
            get
            {
                return this.nfxImporteGravado;
            }
            set
            {
                this.nfxImporteGravado = value;
            }
        }

        public bool fxImporteGravadoNO
        {
            get
            {
                return this.fxNoEspecificar("ImporteGravado", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("ImporteGravado", 0);
                }
                else
                {
                    this.fxNoEspecificar("ImporteGravado", 1);
                }
            }
        }

        public double fxImporteNoGravado
        {
            get
            {
                return this.nfxImporteNoGravado;
            }
            set
            {
                this.nfxImporteNoGravado = value;
            }
        }

        public bool fxImporteNoGravadoNO
        {
            get
            {
                return this.fxNoEspecificar("ImporteNoGravado", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("ImporteNoGravado", 0);
                }
                else
                {
                    this.fxNoEspecificar("ImporteNoGravado", 1);
                }
            }
        }

        public double fxImporteOtrosTributos
        {
            get
            {
                return this.nfxImporteOtrosTributos;
            }
            set
            {
                this.nfxImporteOtrosTributos = value;
            }
        }

        public bool fxImporteOtrosTributosNO
        {
            get
            {
                return this.fxNoEspecificar("ImporteOtrosTributos", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("ImporteOtrosTributos", 0);
                }
                else
                {
                    this.fxNoEspecificar("ImporteOtrosTributos", 1);
                }
            }
        }

        public double fxImporteSubTotal
        {
            get
            {
                return this.nfxImporteSubtotal;
            }
            set
            {
                this.nfxImporteSubtotal = value;
            }
        }

        public double fxImporteTotal
        {
            get
            {
                return this.nfxImporteTotal;
            }
            set
            {
                this.nfxImporteTotal = value;
            }
        }

        public int fxIndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        public double fxItemCantidad
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].cantidad;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].cantidad = value;
            }
        }

        public bool fxItemCantidadNO
        {
            get
            {
                return this.fxNoEspecificarItem("ItemCantidad", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificarItem("ItemCantidad", 0);
                }
                else
                {
                    this.fxNoEspecificarItem("ItemCantidad", 1);
                }
            }
        }

        public string fxItemCodigo
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].codigo;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].codigo = value;
            }
        }

        public int fxItemCodigoCondicionIva
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].CodigoCondicionIva;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].CodigoCondicionIva = value;
            }
        }

        public string fxItemCodigoMtx
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].codigoMtx;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].codigoMtx = value;
            }
        }

        public int fxItemCodigoUnidadMedida
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].codigoUnidaMedida;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].codigoUnidaMedida = value;
            }
        }

        public string fxItemDescripcion
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].descripcion;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].descripcion = value;
            }
        }

        public double fxItemImporteBonificacion
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].importeBonifacion;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].importeBonifacion = value;
            }
        }

        public bool fxItemImporteBonificacionNO
        {
            get
            {
                return this.fxNoEspecificarItem("ItemImporteBonificacion", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificarItem("ItemImporteBonificacion", 0);
                }
                else
                {
                    this.fxNoEspecificarItem("ItemImporteBonificacion", 1);
                }
            }
        }

        public double fxItemImporteItem
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].importeItem;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].importeItem = value;
            }
        }

        public double fxItemImporteIva
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].importeIva;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].importeIva = value;
            }
        }

        public bool fxItemImporteIvaNO
        {
            get
            {
                return this.fxNoEspecificarItem("ItemImporteIva", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificarItem("ItemImporteIva", 0);
                }
                else
                {
                    this.fxNoEspecificarItem("ItemImporteIva", 1);
                }
            }
        }

        public double fxItemPrecioUnitario
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].precioUnitario;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].precioUnitario = value;
            }
        }

        public bool fxItemPrecioUnitarioNO
        {
            get
            {
                return this.fxNoEspecificarItem("ItemPrecioUnitario", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificarItem("ItemPrecioUnitario", 0);
                }
                else
                {
                    this.fxNoEspecificarItem("ItemPrecioUnitario", 1);
                }
            }
        }

        public int fxItemsItemCantidad
        {
            get
            {
                return this.ifxItemsCantidad;
            }
            set
            {
                this.ifxItemsCantidad = value;
                this.aFxItems = new fxItems[(value - 1) + 1];
            }
        }

        public int fxItemUnidadesMtx
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].UnidadesMts;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].UnidadesMts = value;
            }
        }

        public bool fxItemUnidadesMtxNO
        {
            get
            {
                return this.fxNoEspecificarItem("ItemUnidadesMtx", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificarItem("ItemUnidadesMtx", 0);
                }
                else
                {
                    this.fxNoEspecificarItem("ItemUnidadesMtx", 1);
                }
            }
        }

        public string fxItemUnidadesMtxS
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].UnidadesMts.ToString();
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].UnidadesMts = Conversions.ToInteger(value);
            }
        }

        public bool fxLicenciaValidaCAE
        {
            get
            {
                return (((0x200 & this.LicenciaValor) == 0x200) & this.LicenciaDatosValida);
            }
        }

        public bool fxLicenciaValidaCAEA
        {
            get
            {
                return (((0x400 & this.LicenciaValor) == 0x400) & this.LicenciaDatosValida);
            }
        }

        public int fxListaCodigo
        {
            get
            {
                return this.afxLista[this.fxIndiceItem].codigo;
            }
        }

        public string fxListaCodigo2
        {
            get
            {
                return this.afxLista[this.fxIndiceItem].codigo2;
            }
        }

        public string fxListaDescripcion
        {
            get
            {
                return this.afxLista[this.fxIndiceItem].descripcion;
            }
        }

        public string fxListaDesde
        {
            get
            {
                return this.afxLista[this.fxIndiceItem].fecha1;
            }
        }

        public string fxListaHasta
        {
            get
            {
                return this.afxLista[this.fxIndiceItem].fecha2;
            }
        }

        public int fxListaItemCantidad
        {
            get
            {
                return this.ifxListaItemCantidad;
            }
        }

        public int fxNumeroComprobante
        {
            get
            {
                return (int) this.lfxNumeroComprobante;
            }
            set
            {
                this.lfxNumeroComprobante = value;
            }
        }

        public string fxNumeroDocumento
        {
            get
            {
                return this.lfxNumeroDocumento.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.lfxNumeroDocumento = Conversions.ToLong(value);
            }
        }

        public bool fxNumeroDocumentoNO
        {
            get
            {
                return this.fxNoEspecificar("NumeroDocumento", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("NumeroDocumento", 0);
                }
                else
                {
                    this.fxNoEspecificar("NumeroDocumento", 1);
                }
            }
        }

        public int fxNumeroPuntoVenta
        {
            get
            {
                return this.ifxPuntoVenta;
            }
            set
            {
                this.ifxPuntoVenta = value;
            }
        }

        public int fxObervacionCodigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.fxObervacionItemCantidad - 1)))
                {
                    return this.afxObervacion[this.IndiceItem].codigo;
                }
                return 0;
            }
        }

        public int fxObervacionCodigo1
        {
            get
            {
                if ((this.fxObervacionItemCantidad - 1) >= 0)
                {
                    return this.afxObervacion[0].codigo;
                }
                return 0;
            }
        }

        public string fxObervacionDescripcion
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.fxObervacionItemCantidad - 1)))
                {
                    return this.afxObervacion[this.IndiceItem].descripcion;
                }
                return "";
            }
        }

        public string fxObervacionDescripcion1
        {
            get
            {
                if ((this.fxObervacionItemCantidad - 1) >= 0)
                {
                    return this.afxObervacion[0].descripcion;
                }
                return "";
            }
        }

        public int fxObervacionItemCantidad
        {
            get
            {
                return this.ifxObervacionItemCantidad;
            }
        }

        public string fxObservaciones
        {
            get
            {
                return this.strfxObservaciones;
            }
            set
            {
                this.strfxObservaciones = value;
            }
        }

        public double fxOtrosTributosBaseImponible
        {
            get
            {
                return this.aFxOtrosTributos[this.fxIndiceItem].baseImponible;
            }
            set
            {
                this.aFxOtrosTributos[this.fxIndiceItem].baseImponible = value;
            }
        }

        public int fxOtrosTributosCodigo
        {
            get
            {
                return this.aFxOtrosTributos[this.fxIndiceItem].codigo;
            }
            set
            {
                this.aFxOtrosTributos[this.fxIndiceItem].codigo = value;
            }
        }

        public string fxOtrosTributosDescripcion
        {
            get
            {
                return this.aFxOtrosTributos[this.fxIndiceItem].descripcion;
            }
            set
            {
                this.aFxOtrosTributos[this.fxIndiceItem].descripcion = value;
            }
        }

        public double fxOtrosTributosImporte
        {
            get
            {
                return this.aFxOtrosTributos[this.fxIndiceItem].importe;
            }
            set
            {
                this.aFxOtrosTributos[this.fxIndiceItem].importe = value;
            }
        }

        public int fxOtrosTributosItemCantidad
        {
            get
            {
                return this.ifxOtrosTributosItemCantidad;
            }
            set
            {
                this.ifxOtrosTributosItemCantidad = value;
                this.aFxOtrosTributos = new fxOtrosTributos[(value - 1) + 1];
            }
        }

        public string fxRespuestaCAE
        {
            get
            {
                return this.lfxRespuestaCAE.ToString();
            }
        }

        public string fxRespuestaCAEA
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].strFxRespuestaCAEA;
            }
        }

        public string fxRespuestaCAEAFechaDesde
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaDesde.ToString("yyyyMMdd");
            }
        }

        public string fxRespuestaCAEAFechaHasta
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaHasta.ToString("yyyyMMdd");
            }
        }

        public string fxRespuestaCAEAFechaProceso
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaProceso.ToString("yyyyMMdd");
            }
        }

        public string fxRespuestaCAEAFechaTopeInforme
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaTopeInforme.ToString("yyyyMMdd");
            }
        }

        public int FxRespuestaCAEAItemCantidad
        {
            get
            {
                return this.iFxRespuestaCAEAItemCantidad;
            }
        }

        public int fxRespuestaCAEAOrden
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAOrden;
            }
        }

        public string fxRespuestaCAEAOrdenS
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAOrden.ToString();
            }
        }

        public int fxRespuestaCAEAPeriodo
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAPeriodo;
            }
        }

        public string fxRespuestaCAEAPeriodoS
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAPeriodo.ToString();
            }
        }

        public int fxRespuestaCodigoTipoComprobante
        {
            get
            {
                return this.ifxRespuestaCodigoTipoComprobante;
            }
        }

        public string fxRespuestaCUIT
        {
            get
            {
                return this.lfxRespuestaCUIT.ToString();
            }
        }

        public string FxRespuestaDetalleCAEABloqueado
        {
            get
            {
                return this.aFxRespuestaDetalleCAEA[this.fxIndiceItem].Bloqueado;
            }
        }

        public string FxRespuestaDetalleCAEAFechaBaja
        {
            get
            {
                return this.aFxRespuestaDetalleCAEA[this.fxIndiceItem].Fechabaja.ToString("yyyyMMdd");
            }
        }

        public int FxRespuestaDetalleCAEANumeroPuntoventa
        {
            get
            {
                return this.aFxRespuestaDetalleCAEA[this.fxIndiceItem].NumeroPuntoDeventa;
            }
        }

        public string fxRespuestaDummyAuthServer
        {
            get
            {
                return this.strfxRespuestaDummyAuthServer;
            }
        }

        public string fxRespuestaFechaEmision
        {
            get
            {
                return this.dfxRespuestaFechaEmision.ToString("yyyyMMdd");
            }
        }

        public string fxRespuestaFechaVencimientoCAE
        {
            get
            {
                return this.dfxRespuestaFechaVencimientoCAE.ToString("yyyyMMdd");
            }
        }

        public int fxRespuestaNumeroComprobante
        {
            get
            {
                return (int) this.lfxRespuestaNumeroComprobante;
            }
        }

        public int fxRespuestaNumeroPuntoVenta
        {
            get
            {
                return this.ifxRespuestaNumeroPuntoVenta;
            }
        }

        public int FxRespuestaObservacionCodigo1
        {
            get
            {
                if (this.FxRespuestaObservacionItemCantidad > 0)
                {
                    return this.afxObervacion[0].codigo;
                }
                return 0;
            }
        }

        public string FxRespuestaObservacionDescripcion1
        {
            get
            {
                if (this.FxRespuestaObservacionItemCantidad > 0)
                {
                    return this.afxObervacion[0].descripcion;
                }
                return "";
            }
        }

        public int FxRespuestaObservacionItemCantidad
        {
            get
            {
                return this.ifxObervacionItemCantidad;
            }
        }

        public string fxRespuestaResultado
        {
            get
            {
                return this.strfxRespuestaResultado;
            }
        }

        public string fxRespuetaDummyAppServer
        {
            get
            {
                return this.strfxRespuestaDummyAppServer;
            }
        }

        public string fxsign
        {
            get
            {
                return this.strfxSign;
            }
            set
            {
                this.strfxSign = value;
            }
        }

        public int fxSubTotalesItemCantidad
        {
            get
            {
                return this.ifxSubTotalesIvaItemCantidad;
            }
            set
            {
                this.ifxSubTotalesIvaItemCantidad = value;
                this.aFxSubTotalesIva = new fxSubTotalesIva[(value - 1) + 1];
            }
        }

        public int fxSubTotalesIvaCodigo
        {
            get
            {
                return this.aFxSubTotalesIva[this.fxIndiceItem].codigo;
            }
            set
            {
                this.aFxSubTotalesIva[this.fxIndiceItem].codigo = value;
            }
        }

        public double fxSubTotalesIvaImporte
        {
            get
            {
                return this.aFxSubTotalesIva[this.fxIndiceItem].importe;
            }
            set
            {
                this.aFxSubTotalesIva[this.fxIndiceItem].importe = value;
            }
        }

        public bool fxTicketEsValido
        {
            get
            {
                if (!this.fxTicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.fxTicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        public DateTime fxTicketHora
        {
            get
            {
                return this.tfxTicketHora;
            }
        }

        public DateTime fxTicketHoraVencimiento
        {
            get
            {
                return this.tfxTicketHoraVencimiento;
            }
        }

        public bool fxTicketValido
        {
            get
            {
                return this.bfxTicketValido;
            }
        }

        public string fxtoken
        {
            get
            {
                return this.strfxToken;
            }
            set
            {
                this.strfxToken = value;
            }
        }

        public string gCosechaCodigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gCosechaItemCantidad - 1)))
                {
                    return this.agCosecha[this.IndiceItem].codigoCosecha;
                }
                return "";
            }
        }

        public string gCosechaDescripcion
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gCosechaItemCantidad - 1)))
                {
                    return this.agCosecha[this.IndiceItem].descripcionCosecha;
                }
                return "";
            }
        }

        public int gCosechaItemCantidad
        {
            get
            {
                return this.igCosechaItemCantidad;
            }
            set
            {
                this.igCosechaItemCantidad = value;
                this.agCosecha = new gCosecha[(value - 1) + 1];
            }
        }

        public int gCTGCantHoras
        {
            get
            {
                return this.giCTGCantHoras;
            }
            set
            {
                this.giCTGCantHoras = value;
            }
        }

        public string gCTGCodigoCosecha
        {
            get
            {
                return this.gstrCTGCodigoCosecha;
            }
            set
            {
                this.gstrCTGCodigoCosecha = value;
            }
        }

        public string gCTGCodigoEspecie
        {
            get
            {
                return this.gstrCTGCodigoEspecie;
            }
            set
            {
                this.gstrCTGCodigoEspecie = value;
            }
        }

        public int gCTGCodigoLocalidadDestino
        {
            get
            {
                return this.giCTGcodigoLocalidadDestino;
            }
            set
            {
                this.giCTGcodigoLocalidadDestino = value;
            }
        }

        public int gCTGCodigoLocalidadOrigen
        {
            get
            {
                return this.giCTGcodigoLocalidadOrigen;
            }
            set
            {
                this.giCTGcodigoLocalidadOrigen = value;
            }
        }

        public string gCTGCuitDestinatario
        {
            get
            {
                return this.glCTGCUITDestinatario.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.glCTGCUITDestinatario = Conversions.ToLong(value);
            }
        }

        public string gCTGCuitDestino
        {
            get
            {
                return this.glCTGCUITDestino.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.glCTGCUITDestino = Conversions.ToLong(value);
            }
        }

        public string gCTGCuitRemitenteComercial
        {
            get
            {
                return this.glCTGCUITRemitenteComercial.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.glCTGCUITRemitenteComercial = Conversions.ToLong(value);
            }
        }

        public string gCTGCuitRepresentado
        {
            get
            {
                return this.glCTGCUITRepresentado.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.glCTGCUITRepresentado = Conversions.ToLong(value);
            }
        }

        public string gCTGCuitTrasnportista
        {
            get
            {
                return this.glCTGCUITTransportista.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.glCTGCUITTransportista = Conversions.ToLong(value);
            }
        }

        public string gCTGNumeroCartaPorte
        {
            get
            {
                return this.glCTGNumeroCartaPorte.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.glCTGNumeroCartaPorte = Conversions.ToLong(value);
            }
        }

        public string gCTGPatenteVehiculo
        {
            get
            {
                return this.gstrCTGPatenteVehiculo;
            }
            set
            {
                this.gstrCTGPatenteVehiculo = value;
            }
        }

        public string gCTGPatenteVehiculoS
        {
            get
            {
                return this.gstrCTGPatenteVehiculo;
            }
            set
            {
                this.gstrCTGPatenteVehiculo = value.Trim();
            }
        }

        public string gCTGPesoNetoCarga
        {
            get
            {
                return this.glCTGpesoNetoCarga.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.glCTGpesoNetoCarga = Conversions.ToLong(value);
            }
        }

        public string gCTGRespuestaCodigoTransaccion
        {
            get
            {
                return this.glRespuestaCodigoTransaccion.ToString();
            }
        }

        public string gCTGRespuestaNumeroCartaPorte
        {
            get
            {
                return this.glRespuestaNumeroCartaPorte.ToString();
            }
        }

        public string gCTGRespuestaNumeroCTG
        {
            get
            {
                return this.glRespuestaNumeroCTG.ToString();
            }
        }

        public string gCTGRespuestaObervaciones
        {
            get
            {
                return this.gstrRespuestaObservaciones;
            }
        }

        public string gErrorCodigo
        {
            get
            {
                return this.gstrErrorCodigo;
            }
        }

        public string gErrorMensaje
        {
            get
            {
                return this.gstrErrorMensaje;
            }
        }

        public int gEspecieCodigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gEspecieItemCantidad - 1)))
                {
                    return this.agEspecie[this.IndiceItem].codigoEspecie;
                }
                return 0;
            }
        }

        public string gEspecieDescripcion
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gEspecieItemCantidad - 1)))
                {
                    return this.agEspecie[this.IndiceItem].descripcionEspecie;
                }
                return "";
            }
        }

        public int gEspecieItemCantidad
        {
            get
            {
                return this.igEspecieItemCantidad;
            }
            set
            {
                this.igEspecieItemCantidad = value;
                this.agEspecie = new gEspecie[(value - 1) + 1];
            }
        }

        public int gIndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        public bool gLicenciaValida
        {
            get
            {
                return (((0x40 & this.LicenciaValor) == 0x40) & this.LicenciaDatosValida);
            }
        }

        public int gLocalidadCodigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gLocalidadItemCantidad - 1)))
                {
                    return this.agLocalidad[this.IndiceItem].codigoLocalidad;
                }
                return 0;
            }
        }

        public string gLocalidadDescripcion
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gLocalidadItemCantidad - 1)))
                {
                    return this.agLocalidad[this.IndiceItem].descripcionLocalidad;
                }
                return "";
            }
        }

        public int gLocalidadItemCantidad
        {
            get
            {
                return this.igLocalidadItemCantidad;
            }
            set
            {
                this.igLocalidadItemCantidad = value;
                this.agLocalidad = new gLocalidad[(value - 1) + 1];
            }
        }

        public int gLocalidadTodasCodigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gLocalidadTodasItemCantidad - 1)))
                {
                    return this.agLocalidadTodas[this.IndiceItem].codigoLocalidad;
                }
                return 0;
            }
        }

        public int gLocalidadTodasCodigoProvincia
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gLocalidadTodasItemCantidad - 1)))
                {
                    return this.agLocalidadTodas[this.IndiceItem].codigoProvincia;
                }
                return 0;
            }
        }

        public string gLocalidadTodasDescripcion
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gLocalidadTodasItemCantidad - 1)))
                {
                    return this.agLocalidadTodas[this.IndiceItem].descripcionLocalidad;
                }
                return "";
            }
        }

        public string gLocalidadTodasDescripcionProvincia
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gLocalidadTodasItemCantidad - 1)))
                {
                    return this.agLocalidadTodas[this.IndiceItem].descripcionProvincia;
                }
                return "";
            }
        }

        public int gLocalidadTodasItemCantidad
        {
            get
            {
                return this.igLocalidadTodasItemCantidad;
            }
            set
            {
                if (value == 0)
                {
                    this.igLocalidadTodasItemCantidad = value;
                    this.agLocalidadTodas = new gLocalidadTodas[(value - 1) + 1];
                }
                else
                {
                    this.igLocalidadTodasItemCantidad = value;
                    this.agLocalidadTodas = (gLocalidadTodas[]) Microsoft.VisualBasic.CompilerServices.Utils.CopyArray((Array) this.agLocalidadTodas, new gLocalidadTodas[(value - 1) + 1]);
                }
            }
        }

        public int gProvinciaCodigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gProvinciaItemCantidad - 1)))
                {
                    return this.agProvincia[this.IndiceItem].codigoProvincia;
                }
                return 0;
            }
        }

        public string gProvinciaDescripcion
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gProvinciaItemCantidad - 1)))
                {
                    return this.agProvincia[this.IndiceItem].descripcionProvincia;
                }
                return "";
            }
        }

        public int gProvinciaItemCantidad
        {
            get
            {
                return this.igProvinciaItemCantidad;
            }
            set
            {
                this.igProvinciaItemCantidad = value;
                this.agProvincia = new gProvincia[(value - 1) + 1];
            }
        }

        public string gRespuestaDummyAuthServer
        {
            get
            {
                return this.strgRespuestaDummyAuthServer;
            }
        }

        public string gRespuestaDummyDbServer
        {
            get
            {
                return this.strgRespuestaDummyDbServer;
            }
        }

        public string gRespuetaDummyAppServer
        {
            get
            {
                return this.strgRespuestaDummyAppServer;
            }
        }

        public string gsign
        {
            get
            {
                return this.strgSign;
            }
            set
            {
                this.strgSign = value;
            }
        }

        public bool gTicketEsValido
        {
            get
            {
                if (!this.gTicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.gTicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        public DateTime gTicketHora
        {
            get
            {
                return this.tgTicketHora;
            }
        }

        public DateTime gTicketHoraVencimiento
        {
            get
            {
                return this.tgTicketHoraVencimiento;
            }
        }

        public bool gTicketValido
        {
            get
            {
                return this.bgTicketValido;
            }
        }

        public string gtoken
        {
            get
            {
                return this.strgToken;
            }
            set
            {
                this.strgToken = value;
            }
        }

        public string Identificador
        {
            get
            {
                return this.uIdentificador.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.uIdentificador = Conversions.ToLong(value);
            }
        }

        public int indice
        {
            get
            {
                return this.iIndice;
            }
            set
            {
                this.iIndice = value;
            }
        }

        public int IndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        internal SClicencia Licencia
        {
            get
            {
                return this.oLicencia;
            }
        }

        public bool LicenciaArchivoValido
        {
            get
            {
                if (this.oLicencia == null)
                {
                    return false;
                }
                return true;
            }
        }

        public string LicenciaCodigo
        {
            get
            {
                if (this.Licencia != null)
                {
                    return this.Licencia.Codigo;
                }
                return "";
            }
        }

        public string LicenciaDatos
        {
            get
            {
                if (this.Licencia != null)
                {
                    return this.Licencia.Datos;
                }
                return "";
            }
        }

        public bool LicenciaDatosValida
        {
            get
            {
                if (this.Licencia == null)
                {
                    return false;
                }
                return (this.LicenciaDatos.Trim() == this.cuit.Trim());
            }
        }

        public DateTime LicenciaFecha
        {
            get
            {
                if (this.Licencia != null)
                {
                    return this.Licencia.Fecha;
                }
                return Conversions.ToDate("01/01/1900");
            }
        }

        //public bool this[DateTime dFecha]
        //{
        //    get
        //    {
        //        if (this.Licencia == null)
        //        {
        //            return false;
        //        }
        //        if (DateTime.Compare(dFecha, this.Licencia.Hasta) > 0)
        //        {
        //            return false;
        //        }
        //        return true;
        //    }
        //}

        public DateTime LicenciaHasta
        {
            get
            {
                if (this.Licencia != null)
                {
                    return this.Licencia.Hasta;
                }
                return Conversions.ToDate("01/01/1900");
            }
        }

        public int LicenciaLimite
        {
            get
            {
                if (this.Licencia != null)
                {
                    return this.Licencia.Limite;
                }
                return 0;
            }
        }

        public bool LicenciaLote
        {
            get
            {
                return ((0x10 & this.LicenciaValor) == 0x10);
            }
        }

        public int LicenciaUsado
        {
            get
            {
                if (this.Licencia != null)
                {
                    return this.Licencia.Usado;
                }
                return 0;
            }
        }

        public bool LicenciaValida
        {
            get
            {
                return (((2 & this.LicenciaValor) == 2) & this.LicenciaDatosValida);
            }
        }

        public int LicenciaValor
        {
            get
            {
                if (this.Licencia != null)
                {
                    return this.Licencia.valor;
                }
                return 0;
            }
        }

        public modoFiscal Modo
        {
            get
            {
                return this.iModo;
            }
            set
            {
                this.iModo = value;
            }
        }

        public string mRespuestaDummyAuthServer
        {
            get
            {
                return this.strmRespuestaDummyAuthServer;
            }
        }

        public string mRespuestaDummyDbServer
        {
            get
            {
                return this.strmRespuestaDummyDbServer;
            }
        }

        public string mRespuetaDummyAppServer
        {
            get
            {
                return this.strmRespuestaDummyAppServer;
            }
        }

        public string msign
        {
            get
            {
                return this.strmSign;
            }
            set
            {
                this.strmSign = value;
            }
        }

        public bool mTicketEsValido
        {
            get
            {
                if (!this.mTicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.mTicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        public DateTime mTicketHora
        {
            get
            {
                return this.tmTicketHora;
            }
        }

        public DateTime mTicketHoraVencimiento
        {
            get
            {
                return this.tmTicketHoraVencimiento;
            }
        }

        public bool mTicketValido
        {
            get
            {
                return this.bmTicketValido;
            }
        }

        public string mtoken
        {
            get
            {
                return this.strmToken;
            }
            set
            {
                this.strmToken = value;
            }
        }

        public string NombreServicio
        {
            get
            {
                return this.strServicio;
            }
            set
            {
                this.strServicio = value;
            }
        }

        public bool OLicenciaValida
        {
            get
            {
                return (((0x80 & this.LicenciaValor) == 0x80) & this.LicenciaDatosValida);
            }
        }

        public string oRespuestaDummyAuthServer
        {
            get
            {
                return this.stroRespuestaDummyAuthServer;
            }
        }

        public string oRespuestaDummyDbServer
        {
            get
            {
                return this.stroRespuestaDummyDbServer;
            }
        }

        public string oRespuetaDummyAppServer
        {
            get
            {
                return this.stroRespuestaDummyAppServer;
            }
        }

        public string osign
        {
            get
            {
                return this.stroSign;
            }
            set
            {
                this.stroSign = value;
            }
        }

        public DateTime oTicketHora
        {
            get
            {
                return this.toTicketHora;
            }
        }

        public DateTime oTicketHoraVencimiento
        {
            get
            {
                return this.toTicketHoraVencimiento;
            }
        }

        public bool oTicketValido
        {
            get
            {
                return this.boTicketValido;
            }
        }

        public string otoken
        {
            get
            {
                return this.stroToken;
            }
            set
            {
                this.stroToken = value;
            }
        }

        public int paso
        {
            get
            {
                return this.iPaso;
            }
            set
            {
                this.iPaso = value;
            }
        }

        public int PerCode
        {
            get
            {
                return this.iPerCode;
            }
        }

        public string PerCodeSt
        {
            get
            {
                return this.iPerCode.ToString();
            }
        }

        public string Permsg
        {
            get
            {
                return this.strPermsg;
            }
        }

        public string ProxyDomain
        {
            get
            {
                return this.strProxyDomain;
            }
            set
            {
                this.strProxyDomain = value;
            }
        }

        public string ProxyHost
        {
            get
            {
                return this.strProxyHost;
            }
            set
            {
                this.strProxyHost = value;
            }
        }

        public int ProxyPort
        {
            get
            {
                return this.strProxyPort;
            }
            set
            {
                this.strProxyPort = value;
            }
        }

        public string ProxyUserName
        {
            get
            {
                return this.strProxyUserName;
            }
            set
            {
                this.strProxyUserName = value;
            }
        }

        public string ProxyUserPassword
        {
            get
            {
                return this.strProxyUserPassword;
            }
            set
            {
                this.strProxyUserPassword = value;
            }
        }

        public string RespuestaDummyAuthServer
        {
            get
            {
                return this.strRespuestaDummyAuthServer;
            }
        }

        public string RespuestaDummyDbServer
        {
            get
            {
                return this.strRespuestaDummyDbServer;
            }
        }

        public string RespuetaDummyAppServer
        {
            get
            {
                return this.strRespuestaDummyAppServer;
            }
        }

        public string revision
        {
            get
            {
                return FileVersionInfo.GetVersionInfo(Assembly.GetExecutingAssembly().Location).FileVersion;
            }
        }

        public string RutaArchivoCertificado
        {
            get
            {
                return this.strRutaArthivoCertificado;
            }
            set
            {
                this.strRutaArthivoCertificado = value;
            }
        }

        public int scbte_nro
        {
            get
            {
                return this.isCbte_numero;
            }
            set
            {
                this.isCbte_numero = value;
            }
        }

        public int serrcode
        {
            get
            {
                return this.iserrcode;
            }
        }

        public string serrcodeST
        {
            get
            {
                return this.iserrcode.ToString();
            }
        }

        public string serrmsg
        {
            get
            {
                return this.strserrmsg;
            }
        }

        public int sEventCode
        {
            get
            {
                return this.isEventCode;
            }
        }

        public string sEventMsg
        {
            get
            {
                return this.strsEventMsg;
            }
        }

        public string sFecha_cae
        {
            get
            {
                return this.strsFecha_cae;
            }
            set
            {
                this.strsFecha_cae = value;
            }
        }

        public string sFecha_cbte
        {
            get
            {
                return this.strsFecha_cbte;
            }
            set
            {
                this.strsFecha_cbte = value;
            }
        }

        public string sFecha_cbte_cae
        {
            get
            {
                return this.strsFecha_cbte_cae;
            }
            set
            {
                this.strsFecha_cbte_cae = value;
            }
        }

        public string sFecha_cbte_orig
        {
            get
            {
                return this.strsFecha_cbte_orig;
            }
            set
            {
                this.strsFecha_cbte_orig = value;
            }
        }

        public string sign
        {
            get
            {
                return this.strSign;
            }
            set
            {
                this.strSign = value;
            }
        }

        public double sImp_iibb
        {
            get
            {
                return this.isimp_iibb;
            }
            set
            {
                this.isimp_iibb = value;
            }
        }

        public double sImp_internos
        {
            get
            {
                return this.isImp_internos;
            }
            set
            {
                this.isImp_internos = value;
            }
        }

        public double sImp_moneda_ctz
        {
            get
            {
                return this.isImp_moneda_ctz;
            }
            set
            {
                this.isImp_moneda_ctz = value;
            }
        }

        public string sImp_moneda_id
        {
            get
            {
                return this.isImp_moneda_id;
            }
            set
            {
                this.isImp_moneda_id = value;
            }
        }

        public double sImp_neto
        {
            get
            {
                return this.isimp_neto;
            }
            set
            {
                this.isimp_neto = value;
            }
        }

        public double simp_op_ex
        {
            get
            {
                return this.isimp_op_ex;
            }
            set
            {
                this.isimp_op_ex = value;
            }
        }

        public double sImp_otrib_prov
        {
            get
            {
                return this.isImp_otrib_prov;
            }
            set
            {
                this.isImp_otrib_prov = value;
            }
        }

        public double sImp_perc
        {
            get
            {
                return this.isImp_perc;
            }
            set
            {
                this.isImp_perc = value;
            }
        }

        public double sImp_perc_mun
        {
            get
            {
                return this.isImp_perc_mun;
            }
            set
            {
                this.isImp_perc_mun = value;
            }
        }

        public double sImp_total
        {
            get
            {
                return this.isimp_total;
            }
            set
            {
                this.isimp_total = value;
            }
        }

        public double sImp_total_conc
        {
            get
            {
                return this.isimp_total_conc;
            }
            set
            {
                this.isimp_total_conc = value;
            }
        }

        public double simpto_liq
        {
            get
            {
                return this.isimpto_liq;
            }
            set
            {
                this.isimpto_liq = value;
            }
        }

        public double simpto_liq_rni
        {
            get
            {
                return this.isimpto_liq_rni;
            }
            set
            {
                this.isimpto_liq_rni = value;
            }
        }

        public int sIndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        public int sItemCantidad
        {
            get
            {
                return this.iItemCantidad;
            }
            set
            {
                this.iItemCantidad = value;
                this.asItem = new sItem[(value - 1) + 1];
            }
        }

        public string sItemds
        {
            get
            {
                return this.asItem[this.IndiceItem].ds;
            }
            set
            {
                this.asItem[this.IndiceItem].ds = value;
            }
        }

        public string sItemEndoso
        {
            get
            {
                return this.asItem[this.IndiceItem].endoso;
            }
            set
            {
                this.asItem[this.IndiceItem].endoso = value;
            }
        }

        public double sItemimp_bonif
        {
            get
            {
                return this.asItem[this.IndiceItem].imp_bonif;
            }
            set
            {
                this.asItem[this.IndiceItem].imp_bonif = value;
            }
        }

        public string sItemimp_moneda_vaseg
        {
            get
            {
                return this.asItem[this.IndiceItem].imp_moneda_vaseg;
            }
            set
            {
                this.asItem[this.IndiceItem].imp_moneda_vaseg = value;
            }
        }

        public double sItemimp_total
        {
            get
            {
                return this.asItem[this.IndiceItem].imp_total;
            }
            set
            {
                this.asItem[this.IndiceItem].imp_total = value;
            }
        }

        public double sItemimp_valor_aseg
        {
            get
            {
                return this.asItem[this.IndiceItem].imp_valor_aseg;
            }
            set
            {
                this.asItem[this.IndiceItem].imp_valor_aseg = value;
            }
        }

        public int sItemIva_id
        {
            get
            {
                return this.asItem[this.IndiceItem].iva_id;
            }
            set
            {
                this.asItem[this.IndiceItem].iva_id = value;
            }
        }

        public string sItemPoliza
        {
            get
            {
                return this.asItem[this.IndiceItem].poliza;
            }
            set
            {
                this.asItem[this.IndiceItem].poliza = value;
            }
        }

        public double sItemprecio_uni
        {
            get
            {
                return this.asItem[this.IndiceItem].precio_uni;
            }
            set
            {
                this.asItem[this.IndiceItem].precio_uni = value;
            }
        }

        public double sItemqty
        {
            get
            {
                return this.asItem[this.IndiceItem].qty;
            }
            set
            {
                this.asItem[this.IndiceItem].qty = value;
            }
        }

        public bool sLicenciaValida
        {
            get
            {
                return (((8 & this.LicenciaValor) == 8) & this.LicenciaDatosValida);
            }
        }

        public string sMonedaDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sMonedaItemCantidad - 1)))
                {
                    return this.aSMoneda[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public string sMonedaId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sMonedaItemCantidad - 1)))
                {
                    return this.aSMoneda[this.IndiceItem].id;
                }
                return "";
            }
        }

        public int sMonedaItemCantidad
        {
            get
            {
                return this.isMonedaItemCantidad;
            }
        }

        public string sMonedaVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sMonedaItemCantidad - 1)))
                {
                    return this.aSMoneda[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        public string sMonedaVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sMonedaItemCantidad - 1)))
                {
                    return this.aSMoneda[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        public string sNro_doc
        {
            get
            {
                return this.lsnro_doc.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.lsnro_doc = Conversions.ToLong(value);
            }
        }

        public int sPunto_vta
        {
            get
            {
                return this.ispunto_vta;
            }
            set
            {
                this.ispunto_vta = value;
            }
        }

        public string sRespuestaCAE
        {
            get
            {
                return this.strsRespuestaCAE;
            }
        }

        public int sRespuestaCbte_numero
        {
            get
            {
                return this.isRespuestaCbte_numero;
            }
        }

        public string sRespuestaDummyAuthServer
        {
            get
            {
                return this.strsRespuestaDummyAuthServer;
            }
        }

        public string sRespuestaDummyDbServer
        {
            get
            {
                return this.strsRespuestaDummyDbServer;
            }
        }

        public string sRespuestaFch_cbte
        {
            get
            {
                return this.strsRespuestaFch_cbte;
            }
        }

        public string sRespuestaFch_venc_cae
        {
            get
            {
                return this.strsRespuestafch_venc_cae;
            }
        }

        public string sRespuestaId
        {
            get
            {
                return this.isRespuestaId.ToString();
            }
        }

        public string sRespuestaOBS
        {
            get
            {
                return this.strsRespuestaObs;
            }
        }

        public string sRespuestaReproceso
        {
            get
            {
                return this.strsRespuestaReProceso;
            }
        }

        public string sRespuestaResultado
        {
            get
            {
                return this.strsRespuestaResultado;
            }
        }

        public string sRespuestasCUIT
        {
            get
            {
                return this.strsRespuestaCUIT;
            }
        }

        public string sRespuetaDummyAppServer
        {
            get
            {
                return this.strsRespuestaDummyAppServer;
            }
        }

        public string ssign
        {
            get
            {
                return this.strsSign;
            }
            set
            {
                this.strsSign = value;
            }
        }

        public bool sTicketEsValido
        {
            get
            {
                if (!this.bsTicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.tsTicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        public DateTime sTicketHora
        {
            get
            {
                return this.tsTicketHora;
            }
        }

        public DateTime sTicketHoraVencimiento
        {
            get
            {
                return this.tsTicketHoraVencimiento;
            }
        }

        public bool sTicketValido
        {
            get
            {
                return this.bsTicketValido;
            }
        }

        public int sTipo_cbte
        {
            get
            {
                return this.istipo_cbte;
            }
            set
            {
                this.istipo_cbte = value;
            }
        }

        public string sTipo_cbteDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public int sTipo_cbteId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public int sTipo_CbteItemCantidad
        {
            get
            {
                return this.isTipo_CbteItemCantidad;
            }
        }

        public string sTipo_cbteVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        public string sTipo_cbteVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        public string sTipo_cpteDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipo_CbteItemCantidad - 1)))
                {
                    return this.aSTipo_cpte[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public int sTipo_cpteId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipo_CbteItemCantidad - 1)))
                {
                    return this.aSTipo_cpte[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public string sTipo_cpteVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipo_CbteItemCantidad - 1)))
                {
                    return this.aSTipo_cpte[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        public string sTipo_cpteVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipo_CbteItemCantidad - 1)))
                {
                    return this.aSTipo_cpte[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        public int sTipo_Doc
        {
            get
            {
                return this.istipo_doc;
            }
            set
            {
                this.istipo_doc = value;
            }
        }

        public string sTipoDocDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoDocItemCantidad - 1)))
                {
                    return this.asTipoDoc[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public int sTipoDocID
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoDocItemCantidad - 1)))
                {
                    return this.asTipoDoc[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public int sTipoDocItemCantidad
        {
            get
            {
                return this.isTipoDocItemCantidad;
            }
        }

        public string sTipoDocVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoDocItemCantidad - 1)))
                {
                    return this.asTipoDoc[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        public string sTipoDocVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoDocItemCantidad - 1)))
                {
                    return this.asTipoDoc[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        public string sTipoIvaDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoIvaItemCantidad - 1)))
                {
                    return this.asTipoIva[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public int sTipoIvaId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoIvaItemCantidad - 1)))
                {
                    return this.asTipoIva[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public int sTipoIvaItemCantidad
        {
            get
            {
                return this.isTipoIvaItemCantidad;
            }
        }

        public string sTipoIvaVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoIvaItemCantidad - 1)))
                {
                    return this.asTipoIva[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        public string sTipoIvaVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoIvaItemCantidad - 1)))
                {
                    return this.aSMoneda[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        public string stoken
        {
            get
            {
                return this.strsToken;
            }
            set
            {
                this.strsToken = value;
            }
        }

        public bool TicketEsValido
        {
            get
            {
                if (!this.TicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.TicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        public DateTime TicketHora
        {
            get
            {
                return this.tTicketHora;
            }
        }

        public DateTime TicketHoraVencimiento
        {
            get
            {
                return this.tTicketHoraVencimiento;
            }
        }

        public bool TicketValido
        {
            get
            {
                return this.lTicketValido;
            }
        }

        public int TimeOut
        {
            get
            {
                return this.iTimeOut;
            }
            set
            {
                this.iTimeOut = value;
            }
        }

        public string token
        {
            get
            {
                return this.strToken;
            }
            set
            {
                this.strToken = value;
            }
        }

        public string UltimoMensajeError
        {
            get
            {
                return this.strUltimoMensajeError;
            }
        }

        public int UltimoNumeroError
        {
            get
            {
                return this.iUltimoNumeroError;
            }
        }

        [DispId(0x17)]
        string WSAFIPFE._Factura.ArchivoXMLEnviado
        {
            get
            {
                return this.strArchivoXMLEnviado;
            }
            set
            {
                this.strArchivoXMLEnviado = value;
            }
        }

        [DispId(0x15)]
        string WSAFIPFE._Factura.ArchivoXMLError
        {
            get
            {
                return this.strArchivoXMLError;
            }
        }

        [DispId(0x16)]
        string WSAFIPFE._Factura.ArchivoXMLRecibido
        {
            get
            {
                return this.strArchivoXMLRecibido;
            }
            set
            {
                this.strArchivoXMLRecibido = value;
            }
        }

        [DispId(0x1d3)]
        string WSAFIPFE._Factura.Autenticidad
        {
            get
            {
                return "Verificar autenticidad en http://sites.google.com/site/facturaelectronicax/Home/soporte";
            }
            set
            {
            }
        }

        [DispId(0xd4)]
        int WSAFIPFE._Factura.bcbte_nro
        {
            get
            {
                return this.ibCbte_numero;
            }
            set
            {
                this.ibCbte_numero = value;
            }
        }

        [DispId(0x1d9)]
        string WSAFIPFE._Factura.bDireccionServicio
        {
            get
            {
                return this.cbDireccionServicio;
            }
            set
            {
                this.cbDireccionServicio = value;
            }
        }

        [DispId(0x1da)]
        string WSAFIPFE._Factura.bDireccionServicioURL
        {
            get
            {
                return this.cbDireccionServicioURL;
            }
            set
            {
                this.cbDireccionServicioURL = value;
            }
        }

        [DispId(130)]
        int WSAFIPFE._Factura.berrcode
        {
            get
            {
                return this.iberrcode;
            }
        }

        [DispId(0x84)]
        string WSAFIPFE._Factura.berrcodeST
        {
            get
            {
                return this.iberrcode.ToString();
            }
        }

        [DispId(0x7d)]
        string WSAFIPFE._Factura.berrmsg
        {
            get
            {
                return this.strberrmsg;
            }
        }

        [DispId(0x3b)]
        int WSAFIPFE._Factura.bEventCode
        {
            get
            {
                return this.iBEventCode;
            }
        }

        [DispId(0x41)]
        string WSAFIPFE._Factura.bEventMsg
        {
            get
            {
                return this.strBEventMsg;
            }
        }

        [DispId(0xe4)]
        string WSAFIPFE._Factura.bFecha_cae
        {
            get
            {
                return this.strbFecha_cae;
            }
            set
            {
                this.strbFecha_cae = value;
            }
        }

        [DispId(0xe1)]
        string WSAFIPFE._Factura.bFecha_cbte
        {
            get
            {
                return this.strbFecha_cbte;
            }
            set
            {
                this.strbFecha_cbte = value;
            }
        }

        [DispId(0xe3)]
        string WSAFIPFE._Factura.bFecha_cbte_cae
        {
            get
            {
                return this.strBFecha_cbte_cae;
            }
            set
            {
                this.strBFecha_cbte_cae = value;
            }
        }

        [DispId(0xe2)]
        string WSAFIPFE._Factura.bFecha_cbte_orig
        {
            get
            {
                return this.strbFecha_cbte_orig;
            }
            set
            {
                this.strbFecha_cbte_orig = value;
            }
        }

        [DispId(0xdd)]
        double WSAFIPFE._Factura.bImp_iibb
        {
            get
            {
                return this.ibimp_iibb;
            }
            set
            {
                this.ibimp_iibb = value;
            }
        }

        [DispId(0xde)]
        double WSAFIPFE._Factura.bImp_internos
        {
            get
            {
                return this.ibImp_internos;
            }
            set
            {
                this.ibImp_internos = value;
            }
        }

        [DispId(0xe0)]
        double WSAFIPFE._Factura.bImp_moneda_ctz
        {
            get
            {
                return this.ibImp_moneda_ctz;
            }
            set
            {
                this.ibImp_moneda_ctz = value;
            }
        }

        [DispId(0xdf)]
        string WSAFIPFE._Factura.bImp_moneda_id
        {
            get
            {
                return this.ibImp_moneda_id;
            }
            set
            {
                this.ibImp_moneda_id = value;
            }
        }

        [DispId(0xd7)]
        double WSAFIPFE._Factura.bImp_neto
        {
            get
            {
                return this.ibimp_neto;
            }
            set
            {
                this.ibimp_neto = value;
            }
        }

        [DispId(0xda)]
        double WSAFIPFE._Factura.bimp_op_ex
        {
            get
            {
                return this.ibimp_op_ex;
            }
            set
            {
                this.ibimp_op_ex = value;
            }
        }

        [DispId(0xdb)]
        double WSAFIPFE._Factura.bImp_perc
        {
            get
            {
                return this.ibImp_perc;
            }
            set
            {
                this.ibImp_perc = value;
            }
        }

        [DispId(220)]
        double WSAFIPFE._Factura.bImp_perc_mun
        {
            get
            {
                return this.ibImp_perc_mun;
            }
            set
            {
                this.ibImp_perc_mun = value;
            }
        }

        [DispId(0xd5)]
        double WSAFIPFE._Factura.bImp_total
        {
            get
            {
                return this.ibimp_total;
            }
            set
            {
                this.ibimp_total = value;
            }
        }

        [DispId(0xd6)]
        double WSAFIPFE._Factura.bImp_total_conc
        {
            get
            {
                return this.ibimp_total_conc;
            }
            set
            {
                this.ibimp_total_conc = value;
            }
        }

        [DispId(0xd8)]
        double WSAFIPFE._Factura.bimpto_liq
        {
            get
            {
                return this.ibimpto_liq;
            }
            set
            {
                this.ibimpto_liq = value;
            }
        }

        [DispId(0xd9)]
        double WSAFIPFE._Factura.bimpto_liq_rni
        {
            get
            {
                return this.ibimpto_liq_rni;
            }
            set
            {
                this.ibimpto_liq_rni = value;
            }
        }

        [DispId(0x9b)]
        int WSAFIPFE._Factura.bIndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        [DispId(0xa2)]
        int WSAFIPFE._Factura.bItemCantidad
        {
            get
            {
                return this.iItemCantidad;
            }
            set
            {
                this.iItemCantidad = value;
                this.abProductoItem = new bProductoItem[(value - 1) + 1];
            }
        }

        [DispId(0xc2)]
        double WSAFIPFE._Factura.bITEMimp_bonif
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].imp_bonif;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].imp_bonif = value;
            }
        }

        [DispId(0xc3)]
        double WSAFIPFE._Factura.bITEMimp_total
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].imp_total;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].imp_total = value;
            }
        }

        [DispId(0xce)]
        int WSAFIPFE._Factura.bITEMIva_id
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].iva_id;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].iva_id = value;
            }
        }

        [DispId(0xbc)]
        string WSAFIPFE._Factura.bITEMpro_codigo_ncm
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].pro_codigo_ncm;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].pro_codigo_ncm = value;
            }
        }

        [DispId(0xbd)]
        string WSAFIPFE._Factura.bITEMpro_codigo_sec
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].pro_codigo_sec;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].pro_codigo_sec = value;
            }
        }

        [DispId(190)]
        string WSAFIPFE._Factura.bITEMpro_ds
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].pro_ds;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].pro_ds = value;
            }
        }

        [DispId(0xc1)]
        double WSAFIPFE._Factura.bITEMpro_precio_uni
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].pro_precio_uni;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].pro_precio_uni = value;
            }
        }

        [DispId(0xbf)]
        double WSAFIPFE._Factura.bITEMpro_qty
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].pro_qty;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].pro_qty = value;
            }
        }

        [DispId(0xc0)]
        int WSAFIPFE._Factura.bITEMpro_umed
        {
            get
            {
                return this.abProductoItem[this.IndiceItem].pro_umed;
            }
            set
            {
                this.abProductoItem[this.IndiceItem].pro_umed = value;
            }
        }

        [DispId(0x75)]
        bool WSAFIPFE._Factura.BLicenciaValida
        {
            get
            {
                return (((4 & this.LicenciaValor) == 4) & this.LicenciaDatosValida);
            }
        }

        [DispId(0x1dd)]
        string WSAFIPFE._Factura.bMonedaDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bMonedaItemCantidad - 1)))
                {
                    return this.aBMoneda[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(0x1dc)]
        string WSAFIPFE._Factura.bMonedaId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bMonedaItemCantidad - 1)))
                {
                    return this.aBMoneda[this.IndiceItem].id;
                }
                return "";
            }
        }

        [DispId(0x19)]
        int WSAFIPFE._Factura.bMonedaItemCantidad
        {
            get
            {
                return this.ibMonedaItemCantidad;
            }
        }

        [DispId(0x1de)]
        string WSAFIPFE._Factura.bMonedaVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bMonedaItemCantidad - 1)))
                {
                    return this.aBMoneda[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x1df)]
        string WSAFIPFE._Factura.bMonedaVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bMonedaItemCantidad - 1)))
                {
                    return this.aBMoneda[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0x1f7)]
        string WSAFIPFE._Factura.bNombreServicio
        {
            get
            {
                return this.strbServicio;
            }
            set
            {
                this.strbServicio = value;
            }
        }

        [DispId(0xd0)]
        string WSAFIPFE._Factura.bNro_doc
        {
            get
            {
                return this.lbnro_doc.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.lbnro_doc = Conversions.ToLong(value);
            }
        }

        [DispId(0x33)]
        int WSAFIPFE._Factura.bProductoItemCantidad
        {
            get
            {
                return this.ibProductoItemCantidad;
            }
        }

        [DispId(0x268)]
        string WSAFIPFE._Factura.bProductoNCM_codigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bProductoItemCantidad - 1)))
                {
                    return this.aBProducto[this.IndiceItem].NCM_codigo;
                }
                return "";
            }
        }

        [DispId(0x269)]
        string WSAFIPFE._Factura.bProductoNCM_ds
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bProductoItemCantidad - 1)))
                {
                    return this.aBProducto[this.IndiceItem].NCM_ds;
                }
                return "";
            }
        }

        [DispId(0x26a)]
        string WSAFIPFE._Factura.bProductoNCM_nota
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bProductoItemCantidad - 1)))
                {
                    return this.aBProducto[this.IndiceItem].NCM_nota;
                }
                return "";
            }
        }

        [DispId(0x26b)]
        string WSAFIPFE._Factura.bProductoNCM_Vig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bProductoItemCantidad - 1)))
                {
                    return this.aBProducto[this.IndiceItem].NCM_Vig_Desde;
                }
                return "";
            }
        }

        [DispId(620)]
        string WSAFIPFE._Factura.bProductoNCM_Vig_Hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bProductoItemCantidad - 1)))
                {
                    return this.aBProducto[this.IndiceItem].NCM_Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0xd3)]
        int WSAFIPFE._Factura.bPunto_vta
        {
            get
            {
                return this.ibpunto_vta;
            }
            set
            {
                this.ibpunto_vta = value;
            }
        }

        [DispId(70)]
        string WSAFIPFE._Factura.bRespuestaCAE
        {
            get
            {
                return this.strbRespuestaCAE;
            }
        }

        [DispId(0x45)]
        int WSAFIPFE._Factura.bRespuestaCbte_numero
        {
            get
            {
                return this.ibRespuestaCbte_numero;
            }
        }

        [DispId(0x17a)]
        string WSAFIPFE._Factura.BRespuestaDummyAuthServer
        {
            get
            {
                return this.strbRespuestaDummyAuthServer;
            }
        }

        [DispId(0x17b)]
        string WSAFIPFE._Factura.BRespuestaDummyDbServer
        {
            get
            {
                return this.strbRespuestaDummyDbServer;
            }
        }

        [DispId(0x47)]
        string WSAFIPFE._Factura.bRespuestaFch_cbte
        {
            get
            {
                return this.strbRespuestaFch_cbte;
            }
        }

        [DispId(0x3f)]
        string WSAFIPFE._Factura.bRespuestaFch_venc_cae
        {
            get
            {
                return this.strbRespuestafch_venc_cae;
            }
        }

        [DispId(0x44)]
        string WSAFIPFE._Factura.bRespuestaId
        {
            get
            {
                return this.ibRespuestaId.ToString();
            }
        }

        [DispId(0x4a)]
        string WSAFIPFE._Factura.bRespuestaOBS
        {
            get
            {
                return this.strbRespuestaObs;
            }
        }

        [DispId(0x49)]
        string WSAFIPFE._Factura.bRespuestaReproceso
        {
            get
            {
                return this.strbRespuestaReProceso;
            }
        }

        [DispId(0x48)]
        string WSAFIPFE._Factura.bRespuestaResultado
        {
            get
            {
                return this.strbRespuestaResultado;
            }
        }

        [DispId(0x3e)]
        string WSAFIPFE._Factura.bRespuestasCUIT
        {
            get
            {
                return this.strbRespuestaCUIT;
            }
        }

        [DispId(0x179)]
        string WSAFIPFE._Factura.BRespuetaDummyAppServer
        {
            get
            {
                return this.strbRespuestaDummyAppServer;
            }
        }

        [DispId(360)]
        string WSAFIPFE._Factura.bsign
        {
            get
            {
                return this.strBSign;
            }
            set
            {
                this.strBSign = value;
            }
        }

        [DispId(0x66)]
        bool WSAFIPFE._Factura.bTicketEsValido
        {
            get
            {
                if (!this.BTicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.bTicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        [DispId(0x13f)]
        DateTime WSAFIPFE._Factura.bTicketHora
        {
            get
            {
                return this.tbTicketHora;
            }
        }

        [DispId(0x149)]
        DateTime WSAFIPFE._Factura.bTicketHoraVencimiento
        {
            get
            {
                return this.tbTicketHoraVencimiento;
            }
        }

        [DispId(0x153)]
        bool WSAFIPFE._Factura.BTicketValido
        {
            get
            {
                return this.bbTicketValido;
            }
        }

        [DispId(210)]
        int WSAFIPFE._Factura.bTipo_cbte
        {
            get
            {
                return this.ibtipo_cbte;
            }
            set
            {
                this.ibtipo_cbte = value;
            }
        }

        [DispId(0x21d)]
        string WSAFIPFE._Factura.bTipo_cbteDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(540)]
        int WSAFIPFE._Factura.bTipo_cbteId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x22)]
        int WSAFIPFE._Factura.bTipo_CbteItemCantidad
        {
            get
            {
                return this.ibTipo_CbteItemCantidad;
            }
        }

        [DispId(0x21e)]
        string WSAFIPFE._Factura.bTipo_cbteVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x21f)]
        string WSAFIPFE._Factura.bTipo_cbteVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0x219)]
        string WSAFIPFE._Factura.bTipo_cpteDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(0x218)]
        int WSAFIPFE._Factura.bTipo_cpteId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x21a)]
        string WSAFIPFE._Factura.bTipo_cpteVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x21b)]
        string WSAFIPFE._Factura.bTipo_cpteVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0xcf)]
        int WSAFIPFE._Factura.bTipo_Doc
        {
            get
            {
                return this.iBtipo_doc;
            }
            set
            {
                this.iBtipo_doc = value;
            }
        }

        [DispId(0x209)]
        string WSAFIPFE._Factura.bTipoDocDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoDocItemCantidad - 1)))
                {
                    return this.aBTipoDoc[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(520)]
        int WSAFIPFE._Factura.bTipoDocID
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoDocItemCantidad - 1)))
                {
                    return this.aBTipoDoc[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x38)]
        int WSAFIPFE._Factura.bTipoDocItemCantidad
        {
            get
            {
                return this.ibTipoDocItemCantidad;
            }
        }

        [DispId(0x20a)]
        string WSAFIPFE._Factura.bTipoDocVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoDocItemCantidad - 1)))
                {
                    return this.aBTipoDoc[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x20b)]
        string WSAFIPFE._Factura.bTipoDocVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoDocItemCantidad - 1)))
                {
                    return this.aBTipoDoc[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0x211)]
        string WSAFIPFE._Factura.bTipoIvaDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoIvaItemCantidad - 1)))
                {
                    return this.abTipoIva[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(0x210)]
        int WSAFIPFE._Factura.bTipoIvaId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoIvaItemCantidad - 1)))
                {
                    return this.abTipoIva[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x34)]
        int WSAFIPFE._Factura.bTipoIvaItemCantidad
        {
            get
            {
                return this.ibTipoIvaItemCantidad;
            }
        }

        [DispId(530)]
        string WSAFIPFE._Factura.bTipoIvaVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoIvaItemCantidad - 1)))
                {
                    return this.abTipoIva[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x213)]
        string WSAFIPFE._Factura.bTipoIvaVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipoIvaItemCantidad - 1)))
                {
                    return this.aBMoneda[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        [DispId(350)]
        string WSAFIPFE._Factura.btoken
        {
            get
            {
                return this.strBToken;
            }
            set
            {
                this.strBToken = value;
            }
        }

        [DispId(0x201)]
        string WSAFIPFE._Factura.bUMedDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bUMedItemCantidad - 1)))
                {
                    return this.aBUMed[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(0x200)]
        int WSAFIPFE._Factura.bUMedId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bUMedItemCantidad - 1)))
                {
                    return this.aBUMed[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x36)]
        int WSAFIPFE._Factura.bUMedItemCantidad
        {
            get
            {
                return this.ibUMedItemCantidad;
            }
        }

        [DispId(0x202)]
        string WSAFIPFE._Factura.bUMedVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bUMedItemCantidad - 1)))
                {
                    return this.aBUMed[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x203)]
        string WSAFIPFE._Factura.bUMedVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bUMedItemCantidad - 1)))
                {
                    return this.aBUMed[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0xd1)]
        int WSAFIPFE._Factura.bZona
        {
            get
            {
                return this.ibZona;
            }
            set
            {
                this.ibZona = value;
            }
        }

        [DispId(0x1fd)]
        string WSAFIPFE._Factura.bZonaDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bZonaItemCantidad - 1)))
                {
                    return this.abZona[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(0x1fc)]
        int WSAFIPFE._Factura.bZonaId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bZonaItemCantidad - 1)))
                {
                    return this.abZona[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x3a)]
        int WSAFIPFE._Factura.bZonaItemCantidad
        {
            get
            {
                return this.ibZonaItemCantidad;
            }
        }

        [DispId(510)]
        string WSAFIPFE._Factura.bZonaVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bZonaItemCantidad - 1)))
                {
                    return this.abZona[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x1ff)]
        string WSAFIPFE._Factura.bZonaVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bZonaItemCantidad - 1)))
                {
                    return this.abZona[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0x15c)]
        string WSAFIPFE._Factura.cuit
        {
            get
            {
                return this.strCuit;
            }
        }

        [DispId(0x108)]
        int WSAFIPFE._Factura.dCantidadTotal
        {
            get
            {
                return this.idCantidadTotal;
            }
            set
            {
                this.idCantidadTotal = value;
            }
        }

        [DispId(260)]
        string WSAFIPFE._Factura.dCodigo
        {
            get
            {
                return this.strdCodigo;
            }
            set
            {
                this.strdCodigo = value;
            }
        }

        [DispId(0x103)]
        string WSAFIPFE._Factura.dCuitATA
        {
            get
            {
                return this.strdCuitATA;
            }
            set
            {
                this.strdCuitATA = value;
            }
        }

        [DispId(0x100)]
        string WSAFIPFE._Factura.dCuitDeclarante
        {
            get
            {
                return this.strdCuitDeclarante;
            }
            set
            {
                this.strdCuitDeclarante = value;
            }
        }

        [DispId(0x102)]
        string WSAFIPFE._Factura.dCuitIE
        {
            get
            {
                return this.strdCuitIE;
            }
            set
            {
                this.strdCuitIE = value;
            }
        }

        [DispId(0x101)]
        string WSAFIPFE._Factura.dCuitPSad
        {
            get
            {
                return this.strdCuitPSad;
            }
            set
            {
                this.strdCuitPSad = value;
            }
        }

        [DispId(0xaf)]
        int WSAFIPFE._Factura.dFamiliaCantidad
        {
            get
            {
                return this.adFamilia[this.dIndiceItem].cantidad;
            }
            set
            {
                this.adFamilia[this.dIndiceItem].cantidad = value;
            }
        }

        [DispId(0xae)]
        string WSAFIPFE._Factura.dFamiliaCodigo
        {
            get
            {
                return this.adFamilia[this.dIndiceItem].codigo;
            }
            set
            {
                this.adFamilia[this.dIndiceItem].codigo = value;
            }
        }

        [DispId(0xa4)]
        int WSAFIPFE._Factura.dFamiliaItemCantidad
        {
            get
            {
                return this.idFamiliaItemCantidad;
            }
            set
            {
                this.idFamiliaItemCantidad = value;
                this.adFamilia = new dFamilia[(value - 1) + 1];
            }
        }

        [DispId(0xfe)]
        DateTime WSAFIPFE._Factura.dFechaHoraAcept
        {
            get
            {
                return this.strdFechaHoraAcept;
            }
            set
            {
                this.strdFechaHoraAcept = value;
            }
        }

        [DispId(0xff)]
        string WSAFIPFE._Factura.dFechaHoraAceptS
        {
            get
            {
                return this.strdFechaHoraAcept.ToString("yyyyMMdd");
            }
            set
            {
                if (value == "")
                {
                    this.strdFechaHoraAcept = DateTime.ParseExact("20010101", "yyyyMMdd", null);
                }
                else
                {
                    this.strdFechaHoraAcept = DateTime.ParseExact(value, "yyyyMMdd", null);
                }
            }
        }

        [DispId(0x107)]
        string WSAFIPFE._Factura.dHashing
        {
            get
            {
                return this.strdHashing;
            }
            set
            {
                this.strdHashing = value;
            }
        }

        [DispId(0x9f)]
        int WSAFIPFE._Factura.dIndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        [DispId(0x1d5)]
        string WSAFIPFE._Factura.DireccionServicio
        {
            get
            {
                return this.cDireccionServicio;
            }
            set
            {
                this.cDireccionServicio = value;
            }
        }

        [DispId(470)]
        string WSAFIPFE._Factura.DireccionServicioURL
        {
            get
            {
                return this.cDireccionServicioURL;
            }
            set
            {
                this.cDireccionServicioURL = value;
            }
        }

        [DispId(0x77)]
        bool WSAFIPFE._Factura.dLicenciaValida
        {
            get
            {
                return (((0x100 & this.LicenciaValor) == 0x100) & this.LicenciaDatosValida);
            }
        }

        [DispId(0xfd)]
        string WSAFIPFE._Factura.dNroLegajo
        {
            get
            {
                return this.strdNroLegajo;
            }
            set
            {
                this.strdNroLegajo = value;
            }
        }

        [DispId(0x11)]
        int WSAFIPFE._Factura.dRespuestaCodError
        {
            get
            {
                return this.strdRespuestaCodError;
            }
        }

        [DispId(0x12)]
        string WSAFIPFE._Factura.dRespuestaDescError
        {
            get
            {
                return this.strdRespuestaDescError;
            }
        }

        [DispId(0x196)]
        string WSAFIPFE._Factura.dRespuestaDummyAuthServer
        {
            get
            {
                return this.strdRespuestaDummyAuthServer;
            }
        }

        [DispId(0x197)]
        string WSAFIPFE._Factura.dRespuestaDummyDbServer
        {
            get
            {
                return this.strdRespuestaDummyDbServer;
            }
        }

        [DispId(0x195)]
        string WSAFIPFE._Factura.dRespuetaDummyAppServer
        {
            get
            {
                return this.strdRespuestaDummyAppServer;
            }
        }

        [DispId(0xfb)]
        string WSAFIPFE._Factura.dRol
        {
            get
            {
                return this.strdRol;
            }
            set
            {
                this.strdRol = value;
            }
        }

        [DispId(0x16d)]
        string WSAFIPFE._Factura.dsign
        {
            get
            {
                return this.strdSign;
            }
            set
            {
                this.strdSign = value;
            }
        }

        [DispId(0x106)]
        string WSAFIPFE._Factura.dTicket
        {
            get
            {
                return this.strdTicket;
            }
            set
            {
                this.strdTicket = value;
            }
        }

        [DispId(0x144)]
        DateTime WSAFIPFE._Factura.dTicketHora
        {
            get
            {
                return this.tdTicketHora;
            }
        }

        [DispId(0x14e)]
        DateTime WSAFIPFE._Factura.dTicketHoraVencimiento
        {
            get
            {
                return this.tdTicketHoraVencimiento;
            }
        }

        [DispId(0x158)]
        bool WSAFIPFE._Factura.dTicketValido
        {
            get
            {
                return this.bdTicketValido;
            }
        }

        [DispId(0xfc)]
        string WSAFIPFE._Factura.dTipoAgente
        {
            get
            {
                return this.strdTipoAgente;
            }
            set
            {
                this.strdTipoAgente = value;
            }
        }

        [DispId(0x163)]
        string WSAFIPFE._Factura.dtoken
        {
            get
            {
                return this.strdToken;
            }
            set
            {
                this.strdToken = value;
            }
        }

        [DispId(0x105)]
        string WSAFIPFE._Factura.dURL
        {
            get
            {
                return this.strdURL;
            }
            set
            {
                this.strdURL = value;
            }
        }

        [DispId(0x2f7)]
        int WSAFIPFE._Factura.F1CabeceraCantReg
        {
            get
            {
                return this.iF1CabeceraCantReg;
            }
            set
            {
                this.iF1CabeceraCantReg = value;
                if (value == 0)
                {
                    this.aF1Detalle = new F1Detalle[value + 1];
                }
                else
                {
                    this.aF1Detalle = new F1Detalle[(value - 1) + 1];
                }
            }
        }

        [DispId(0x2f6)]
        int WSAFIPFE._Factura.F1CabeceraCbteTipo
        {
            get
            {
                return this.iF1CabeceraCbteTipo;
            }
            set
            {
                this.iF1CabeceraCbteTipo = value;
            }
        }

        [DispId(0x2f5)]
        int WSAFIPFE._Factura.F1CabeceraPtoVta
        {
            get
            {
                return this.iF1CabeceraPtoVta;
            }
            set
            {
                this.iF1CabeceraPtoVta = value;
            }
        }

        [DispId(0x298)]
        string WSAFIPFE._Factura.F1DetalleCAEA
        {
            get
            {
                return this.aF1Detalle[this.indice].CAEA;
            }
            set
            {
                this.aF1Detalle[this.indice].CAEA = value;
            }
        }

        [DispId(660)]
        int WSAFIPFE._Factura.F1DetalleCbteDesde
        {
            get
            {
                return (int) this.aF1Detalle[this.indice].CbteDesde;
            }
            set
            {
                this.aF1Detalle[this.indice].CbteDesde = value;
            }
        }

        [DispId(0x295)]
        string WSAFIPFE._Factura.F1DetalleCbteDesdeS
        {
            get
            {
                return this.aF1Detalle[this.indice].CbteDesde.ToString();
            }
            set
            {
                this.aF1Detalle[this.indice].CbteDesde = Conversions.ToLong(value);
            }
        }

        [DispId(0x299)]
        string WSAFIPFE._Factura.F1DetalleCbteFch
        {
            get
            {
                return this.aF1Detalle[this.indice].CbteFch;
            }
            set
            {
                this.aF1Detalle[this.indice].CbteFch = value;
            }
        }

        [DispId(0x296)]
        int WSAFIPFE._Factura.F1DetalleCbteHasta
        {
            get
            {
                return (int) this.aF1Detalle[this.indice].CbteHasta;
            }
            set
            {
                this.aF1Detalle[this.indice].CbteHasta = value;
            }
        }

        [DispId(0x297)]
        string WSAFIPFE._Factura.F1DetalleCbteHastaS
        {
            get
            {
                return this.aF1Detalle[this.indice].CbteHasta.ToString();
            }
            set
            {
                this.aF1Detalle[this.indice].CbteHasta = Conversions.ToLong(value);
            }
        }

        [DispId(760)]
        int WSAFIPFE._Factura.F1DetalleCbtesAsocItemCantidad
        {
            get
            {
                return this.aF1Detalle[this.indice].CbtesAsocItemCantidad;
            }
            set
            {
                this.aF1Detalle[this.indice].CbtesAsocItemCantidad = value;
                int value2 = this.F1CabeceraCantReg;
                if (value2 != 0)
                {
                    value2--;
                }
                if (value == 0)
                {
                    this.aF1DetalleCbtesAsoc = new F1DetalleCbtesAsoc[value2 + 1, value + 1];
                }
                else
                {
                    this.aF1DetalleCbtesAsoc = new F1DetalleCbtesAsoc[value2 + 1, (value - 1) + 1];
                }
            }
        }

        [DispId(0x2a5)]
        int WSAFIPFE._Factura.F1DetalleCbtesAsocNro
        {
            get
            {
                return (int) this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].Nro;
            }
            set
            {
                this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].Nro = value;
            }
        }

        [DispId(0x2a6)]
        string WSAFIPFE._Factura.F1DetalleCbtesAsocNroS
        {
            get
            {
                return this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].Nro.ToString();
            }
            set
            {
                this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].Nro = Conversions.ToLong(value);
            }
        }

        [DispId(0x2a7)]
        int WSAFIPFE._Factura.F1DetalleCbtesAsocPtoVta
        {
            get
            {
                return this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].PtoVta;
            }
            set
            {
                this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].PtoVta = value;
            }
        }

        [DispId(680)]
        int WSAFIPFE._Factura.F1DetalleCbtesAsocTipo
        {
            get
            {
                return this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].tipo;
            }
            set
            {
                this.aF1DetalleCbtesAsoc[this.indice, this.IndiceItem].tipo = value;
            }
        }

        [DispId(0x291)]
        int WSAFIPFE._Factura.F1DetalleConcepto
        {
            get
            {
                return this.aF1Detalle[this.indice].concepto;
            }
            set
            {
                this.aF1Detalle[this.indice].concepto = value;
            }
        }

        [DispId(0x293)]
        string WSAFIPFE._Factura.F1DetalleDocNro
        {
            get
            {
                return this.aF1Detalle[this.indice].DocNro.ToString();
            }
            set
            {
                this.aF1Detalle[this.indice].DocNro = Conversions.ToLong(value);
            }
        }

        [DispId(0x292)]
        int WSAFIPFE._Factura.F1DetalleDocTipo
        {
            get
            {
                return this.aF1Detalle[this.indice].DocTipo;
            }
            set
            {
                this.aF1Detalle[this.indice].DocTipo = value;
            }
        }

        [DispId(0x2a0)]
        string WSAFIPFE._Factura.F1DetalleFchServDesde
        {
            get
            {
                return this.aF1Detalle[this.indice].FchServDesde;
            }
            set
            {
                this.aF1Detalle[this.indice].FchServDesde = value;
            }
        }

        [DispId(0x2a1)]
        string WSAFIPFE._Factura.F1DetalleFchServHasta
        {
            get
            {
                return this.aF1Detalle[this.indice].FchServHasta;
            }
            set
            {
                this.aF1Detalle[this.indice].FchServHasta = value;
            }
        }

        [DispId(0x2a2)]
        string WSAFIPFE._Factura.F1DetalleFchVtoPago
        {
            get
            {
                return this.aF1Detalle[this.indice].FchVtoPago;
            }
            set
            {
                this.aF1Detalle[this.indice].FchVtoPago = value;
            }
        }

        [DispId(0x29f)]
        double WSAFIPFE._Factura.F1DetalleImpIva
        {
            get
            {
                return this.aF1Detalle[this.indice].ImpIva;
            }
            set
            {
                this.aF1Detalle[this.indice].ImpIva = value;
            }
        }

        [DispId(0x29c)]
        double WSAFIPFE._Factura.F1DetalleImpNeto
        {
            get
            {
                return this.aF1Detalle[this.indice].ImpNeto;
            }
            set
            {
                this.aF1Detalle[this.indice].ImpNeto = value;
            }
        }

        [DispId(0x29d)]
        double WSAFIPFE._Factura.F1DetalleImpOpEx
        {
            get
            {
                return this.aF1Detalle[this.indice].ImpOpEx;
            }
            set
            {
                this.aF1Detalle[this.indice].ImpOpEx = value;
            }
        }

        [DispId(0x29a)]
        double WSAFIPFE._Factura.F1DetalleImpTotal
        {
            get
            {
                return this.aF1Detalle[this.indice].ImpTotal;
            }
            set
            {
                this.aF1Detalle[this.indice].ImpTotal = value;
            }
        }

        [DispId(0x29b)]
        double WSAFIPFE._Factura.F1DetalleImpTotalConc
        {
            get
            {
                return this.aF1Detalle[this.indice].ImpTotalConc;
            }
            set
            {
                this.aF1Detalle[this.indice].ImpTotalConc = value;
            }
        }

        [DispId(670)]
        double WSAFIPFE._Factura.F1DetalleImpTrib
        {
            get
            {
                return this.aF1Detalle[this.indice].ImpTrib;
            }
            set
            {
                this.aF1Detalle[this.indice].ImpTrib = value;
            }
        }

        [DispId(0x2af)]
        double WSAFIPFE._Factura.F1DetalleIvaBaseImp
        {
            get
            {
                return this.aF1DetalleIva[this.indice, this.IndiceItem].BaseImp;
            }
            set
            {
                this.aF1DetalleIva[this.indice, this.IndiceItem].BaseImp = value;
            }
        }

        [DispId(0x2ae)]
        int WSAFIPFE._Factura.F1DetalleIvaId
        {
            get
            {
                return this.aF1DetalleIva[this.indice, this.IndiceItem].id;
            }
            set
            {
                this.aF1DetalleIva[this.indice, this.IndiceItem].id = value;
            }
        }

        [DispId(0x2b0)]
        double WSAFIPFE._Factura.F1DetalleIvaImporte
        {
            get
            {
                return this.aF1DetalleIva[this.indice, this.IndiceItem].Importe;
            }
            set
            {
                this.aF1DetalleIva[this.indice, this.IndiceItem].Importe = value;
            }
        }

        [DispId(0x2fa)]
        int WSAFIPFE._Factura.F1DetalleIvaItemCantidad
        {
            get
            {
                return this.aF1Detalle[this.indice].IvaItemCantidad;
            }
            set
            {
                this.aF1Detalle[this.indice].IvaItemCantidad = value;
                int value2 = this.F1CabeceraCantReg;
                if (value2 != 0)
                {
                    value2--;
                }
                if (value == 0)
                {
                    this.aF1DetalleIva = new F1DetalleIva[value2 + 1, value + 1];
                }
                else
                {
                    this.aF1DetalleIva = new F1DetalleIva[value2 + 1, (value - 1) + 1];
                }
            }
        }

        [DispId(0x2a4)]
        double WSAFIPFE._Factura.F1DetalleMonCotiz
        {
            get
            {
                return this.aF1Detalle[this.indice].MonCotiz;
            }
            set
            {
                this.aF1Detalle[this.indice].MonCotiz = value;
            }
        }

        [DispId(0x2a3)]
        string WSAFIPFE._Factura.F1DetalleMonId
        {
            get
            {
                return this.aF1Detalle[this.indice].MonId;
            }
            set
            {
                this.aF1Detalle[this.indice].MonId = value;
            }
        }

        [DispId(0x2b1)]
        string WSAFIPFE._Factura.F1DetalleOpcionalId
        {
            get
            {
                return this.aF1DetalleOpcional[this.indice, this.IndiceItem].id;
            }
            set
            {
                this.aF1DetalleOpcional[this.indice, this.IndiceItem].id = value;
            }
        }

        [DispId(0x2fb)]
        int WSAFIPFE._Factura.F1DetalleOpcionalItemCantidad
        {
            get
            {
                return this.aF1Detalle[this.indice].OpcionalItemCantidad;
            }
            set
            {
                this.aF1Detalle[this.indice].OpcionalItemCantidad = value;
                int value2 = this.F1CabeceraCantReg;
                if (value2 != 0)
                {
                    value2--;
                }
                if (value == 0)
                {
                    this.aF1DetalleOpcional = new F1DetalleOpcional[value2 + 1, value + 1];
                }
                else
                {
                    this.aF1DetalleOpcional = new F1DetalleOpcional[value2 + 1, (value - 1) + 1];
                }
            }
        }

        [DispId(690)]
        string WSAFIPFE._Factura.F1DetalleOpcionalValor
        {
            get
            {
                return this.aF1DetalleOpcional[this.indice, this.IndiceItem].valor;
            }
            set
            {
                this.aF1DetalleOpcional[this.indice, this.IndiceItem].valor = value;
            }
        }

        [DispId(0x2ab)]
        double WSAFIPFE._Factura.F1DetalleTributoAlic
        {
            get
            {
                return this.aF1DetalleTributo[this.indice, this.IndiceItem].Alic;
            }
            set
            {
                this.aF1DetalleTributo[this.indice, this.IndiceItem].Alic = value;
            }
        }

        [DispId(0x2ac)]
        double WSAFIPFE._Factura.F1DetalleTributoBaseImp
        {
            get
            {
                return this.aF1DetalleTributo[this.indice, this.IndiceItem].BaseImp;
            }
            set
            {
                this.aF1DetalleTributo[this.indice, this.IndiceItem].BaseImp = value;
            }
        }

        [DispId(0x2aa)]
        string WSAFIPFE._Factura.F1DetalleTributoDesc
        {
            get
            {
                return this.aF1DetalleTributo[this.indice, this.IndiceItem].desc;
            }
            set
            {
                this.aF1DetalleTributo[this.indice, this.IndiceItem].desc = value;
            }
        }

        [DispId(0x2a9)]
        int WSAFIPFE._Factura.F1DetalleTributoId
        {
            get
            {
                return this.aF1DetalleTributo[this.indice, this.IndiceItem].id;
            }
            set
            {
                this.aF1DetalleTributo[this.indice, this.IndiceItem].id = value;
            }
        }

        [DispId(0x2ad)]
        double WSAFIPFE._Factura.F1DetalleTributoImporte
        {
            get
            {
                return this.aF1DetalleTributo[this.indice, this.IndiceItem].Importe;
            }
            set
            {
                this.aF1DetalleTributo[this.indice, this.IndiceItem].Importe = value;
            }
        }

        [DispId(0x2f9)]
        int WSAFIPFE._Factura.F1DetalleTributoItemCantidad
        {
            get
            {
                return this.aF1Detalle[this.indice].TributoItemCantidad;
            }
            set
            {
                this.aF1Detalle[this.indice].TributoItemCantidad = value;
                int value2 = this.F1CabeceraCantReg;
                if (value2 != 0)
                {
                    value2--;
                }
                if (value == 0)
                {
                    this.aF1DetalleTributo = new F1DetalleTributo[value2 + 1, value + 1];
                }
                else
                {
                    this.aF1DetalleTributo = new F1DetalleTributo[value2 + 1, (value - 1) + 1];
                }
            }
        }

        [DispId(0x1d8)]
        string WSAFIPFE._Factura.f1DireccionServicioURL
        {
            get
            {
                return this.cf1DireccionServicioURL;
            }
            set
            {
                this.cf1DireccionServicioURL = value;
            }
        }

        [DispId(580)]
        int WSAFIPFE._Factura.f1ErrorCode
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1ErrorItemCantidad - 1)))
                {
                    return this.af1Error[this.IndiceItem].code;
                }
                return 0;
            }
        }

        [DispId(0x254)]
        int WSAFIPFE._Factura.f1ErrorCode1
        {
            get
            {
                if ((this.f1ErrorItemCantidad - 1) >= 0)
                {
                    return this.af1Error[0].code;
                }
                return 0;
            }
        }

        [DispId(0x256)]
        int WSAFIPFE._Factura.f1ErrorCode2
        {
            get
            {
                if ((this.f1ErrorItemCantidad - 1) >= 1)
                {
                    return this.af1Error[1].code;
                }
                return 0;
            }
        }

        [DispId(0x2d)]
        int WSAFIPFE._Factura.f1ErrorItemCantidad
        {
            get
            {
                return this.if1ErrorItemCantidad;
            }
        }

        [DispId(0x247)]
        string WSAFIPFE._Factura.f1ErrorMsg
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1ErrorItemCantidad - 1)))
                {
                    return this.af1Error[this.IndiceItem].msg;
                }
                return "";
            }
        }

        [DispId(590)]
        string WSAFIPFE._Factura.f1ErrorMsg1
        {
            get
            {
                if ((this.f1ErrorItemCantidad - 1) >= 0)
                {
                    return this.af1Error[0].msg;
                }
                return "";
            }
        }

        [DispId(0x252)]
        string WSAFIPFE._Factura.f1ErrorMsg2
        {
            get
            {
                if ((this.f1ErrorItemCantidad - 1) >= 1)
                {
                    return this.af1Error[1].msg;
                }
                return "";
            }
        }

        [DispId(0x24a)]
        int WSAFIPFE._Factura.f1EventCode
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1EventItemCantidad - 1)))
                {
                    return this.af1Event[this.IndiceItem].code;
                }
                return 0;
            }
        }

        [DispId(0x25c)]
        int WSAFIPFE._Factura.f1EventCode1
        {
            get
            {
                if ((this.f1EventItemCantidad - 1) >= 0)
                {
                    return this.af1Event[0].code;
                }
                return 0;
            }
        }

        [DispId(0x25e)]
        int WSAFIPFE._Factura.f1EventCode2
        {
            get
            {
                if ((this.f1EventItemCantidad - 1) >= 1)
                {
                    return this.af1Event[1].code;
                }
                return 0;
            }
        }

        [DispId(0x2e)]
        int WSAFIPFE._Factura.f1EventItemCantidad
        {
            get
            {
                return this.if1EventItemCantidad;
            }
        }

        [DispId(0x24c)]
        string WSAFIPFE._Factura.f1EventMsg
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1EventItemCantidad - 1)))
                {
                    return this.af1Event[this.IndiceItem].msg;
                }
                return "";
            }
        }

        [DispId(600)]
        string WSAFIPFE._Factura.f1EventMsg1
        {
            get
            {
                if ((this.f1EventItemCantidad - 1) >= 0)
                {
                    return this.af1Event[0].msg;
                }
                return "";
            }
        }

        [DispId(0x25a)]
        string WSAFIPFE._Factura.f1EventMsg2
        {
            get
            {
                if ((this.f1EventItemCantidad - 1) >= 1)
                {
                    return this.af1Event[1].msg;
                }
                return "";
            }
        }

        [DispId(0x1d2)]
        int WSAFIPFE._Factura.f1Indice
        {
            get
            {
                return this.iIndice;
            }
            set
            {
                this.iIndice = value;
            }
        }

        [DispId(0x9d)]
        int WSAFIPFE._Factura.f1IndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        [DispId(0x71)]
        bool WSAFIPFE._Factura.f1LicenciaValidaCae
        {
            get
            {
                return (((0x800 & this.LicenciaValor) == 0x800) & this.LicenciaDatosValida);
            }
        }

        [DispId(0x72)]
        bool WSAFIPFE._Factura.f1LicenciaValidaCaea
        {
            get
            {
                return (((0x1000 & this.LicenciaValor) == 0x1000) & this.LicenciaDatosValida);
            }
        }

        [DispId(0x23e)]
        string WSAFIPFE._Factura.f1PtosVenta_Bloqueado
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1PtosVentaItemCantidad - 1)))
                {
                    return this.af1PtosVenta[this.IndiceItem].Bloqueado;
                }
                return "";
            }
        }

        [DispId(0x23d)]
        string WSAFIPFE._Factura.f1PtosVenta_EmisisionTipo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1PtosVentaItemCantidad - 1)))
                {
                    return this.af1PtosVenta[this.IndiceItem].EmisionTipo;
                }
                return "";
            }
        }

        [DispId(0x23f)]
        string WSAFIPFE._Factura.f1PtosVenta_fchBaja
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1PtosVentaItemCantidad - 1)))
                {
                    return this.af1PtosVenta[this.IndiceItem].fchBaja;
                }
                return "";
            }
        }

        [DispId(0x23c)]
        int WSAFIPFE._Factura.f1PtosVenta_nro
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1PtosVentaItemCantidad - 1)))
                {
                    return this.af1PtosVenta[this.IndiceItem].nro;
                }
                return 0;
            }
        }

        [DispId(0x2b)]
        int WSAFIPFE._Factura.f1PtosVentaItemCantidad
        {
            get
            {
                return this.if1PtosVentaItemCantidad;
            }
        }

        [DispId(0x1bf)]
        string WSAFIPFE._Factura.f1RespuestaCAEA
        {
            get
            {
                return this.strF1RespuestaCAEA;
            }
        }

        [DispId(0x1c7)]
        string WSAFIPFE._Factura.f1RespuestaCAEAFchProceso
        {
            get
            {
                return this.strF1RespuestaCAEAFchProceso;
            }
        }

        [DispId(0x1c6)]
        string WSAFIPFE._Factura.f1RespuestaCAEAFchTopeInf
        {
            get
            {
                return this.strF1RespuestaCAEAFchTopeInf;
            }
        }

        [DispId(0x1c4)]
        string WSAFIPFE._Factura.f1RespuestaCAEAFchVigDesde
        {
            get
            {
                return this.strF1RespuestaCAEAFchVigDesde;
            }
        }

        [DispId(0x1c5)]
        string WSAFIPFE._Factura.f1RespuestaCAEAFchVigHasta
        {
            get
            {
                return this.strF1RespuestaCAEAFchVigHasta;
            }
        }

        [DispId(0x184)]
        int WSAFIPFE._Factura.F1RespuestaCAEAItemCantidad
        {
            get
            {
                return this.iF1RespuestaCAEAItemCantidad;
            }
        }

        [DispId(450)]
        int WSAFIPFE._Factura.f1RespuestaCAEAOrden
        {
            get
            {
                return this.iF1RespuestaCAEAOrden;
            }
        }

        [DispId(0x1c3)]
        string WSAFIPFE._Factura.f1RespuestaCAEAOrdenS
        {
            get
            {
                return this.iF1RespuestaCAEAOrden.ToString();
            }
        }

        [DispId(0x1c0)]
        int WSAFIPFE._Factura.f1RespuestaCAEAPeriodo
        {
            get
            {
                return this.iF1RespuestaCAEAPeriodo;
            }
        }

        [DispId(0x1c1)]
        string WSAFIPFE._Factura.f1RespuestaCAEAPeriodoS
        {
            get
            {
                return this.iF1RespuestaCAEAPeriodo.ToString();
            }
        }

        [DispId(0x183)]
        int WSAFIPFE._Factura.F1RespuestaCantidadReg
        {
            get
            {
                return this.iF1RespuetaCantidadReg;
            }
        }

        [DispId(0x1ab)]
        string WSAFIPFE._Factura.F1RespuestaDetalleCae
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CAE;
            }
        }

        [DispId(0x1a8)]
        string WSAFIPFE._Factura.F1RespuestaDetalleCAEA
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CAEA;
            }
        }

        [DispId(0x28c)]
        string WSAFIPFE._Factura.F1RespuestaDetalleCAEACAEA
        {
            get
            {
                return this.aF1RespuestaDetalleCAEA[this.IndiceItem].CAEA;
            }
        }

        [DispId(0x28b)]
        string WSAFIPFE._Factura.F1RespuestaDetalleCAEAFchProceso
        {
            get
            {
                return this.aF1RespuestaDetalleCAEA[this.IndiceItem].FchProceso;
            }
        }

        [DispId(0x28d)]
        int WSAFIPFE._Factura.F1RespuestaDetalleCAEAPtoVta
        {
            get
            {
                return this.aF1RespuestaDetalleCAEA[this.IndiceItem].PtoVta;
            }
        }

        [DispId(0x1ad)]
        string WSAFIPFE._Factura.F1RespuestaDetalleCAEFchVto
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CAEFchVto;
            }
        }

        [DispId(0x1a3)]
        int WSAFIPFE._Factura.F1RespuestaDetalleCbteDesde
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CbteDesde;
            }
        }

        [DispId(420)]
        string WSAFIPFE._Factura.F1RespuestaDetalleCbteDesdeS
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CbteDesde.ToString();
            }
        }

        [DispId(0x1ac)]
        string WSAFIPFE._Factura.F1RespuestaDetalleCbteFch
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CbteFch;
            }
        }

        [DispId(0x1a5)]
        int WSAFIPFE._Factura.F1RespuestaDetalleCbteHasta
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CbteHasta;
            }
        }

        [DispId(0x1a6)]
        string WSAFIPFE._Factura.F1RespuestaDetalleCbteHastaS
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CbteHasta.ToString();
            }
        }

        [DispId(0x1a9)]
        string WSAFIPFE._Factura.F1RespuestaDetalleCodAutorizacion
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].CodAutorizacion;
            }
        }

        [DispId(0x1a1)]
        int WSAFIPFE._Factura.F1RespuestaDetalleConcepto
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].concepto;
            }
        }

        [DispId(430)]
        string WSAFIPFE._Factura.F1RespuestaDetalleDocNro
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].DocNro.ToString();
            }
        }

        [DispId(0x1a2)]
        int WSAFIPFE._Factura.F1RespuestaDetalleDocTipo
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].DocTipo;
            }
        }

        [DispId(0x1aa)]
        string WSAFIPFE._Factura.F1RespuestaDetalleEmisionTipo
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].EmisionTipo;
            }
        }

        [DispId(0x1b1)]
        int WSAFIPFE._Factura.F1RespuestaDetalleObservacionCode
        {
            get
            {
                return this.aF1RespuestaDetalleObs[this.indice, this.IndiceItem].code;
            }
        }

        [DispId(0x1bb)]
        int WSAFIPFE._Factura.F1RespuestaDetalleObservacionCode1
        {
            get
            {
                if (this.F1RespuestaDetalleObservacionItemCantidad > 0)
                {
                    return this.aF1RespuestaDetalleObs[this.indice, 0].code;
                }
                return 0;
            }
        }

        [DispId(0x1af)]
        int WSAFIPFE._Factura.F1RespuestaDetalleObservacionItemCantidad
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].ObservacionItemCantidad;
            }
        }

        [DispId(0x1b2)]
        string WSAFIPFE._Factura.F1RespuestaDetalleObservacionMsg
        {
            get
            {
                return this.aF1RespuestaDetalleObs[this.indice, this.IndiceItem].msg;
            }
        }

        [DispId(0x1b3)]
        string WSAFIPFE._Factura.F1RespuestaDetalleObservacionMsg1
        {
            get
            {
                if (this.F1RespuestaDetalleObservacionItemCantidad > 0)
                {
                    return this.aF1RespuestaDetalleObs[this.indice, 0].msg;
                }
                return "";
            }
        }

        [DispId(0x1a7)]
        string WSAFIPFE._Factura.F1RespuestaDetalleResultado
        {
            get
            {
                return this.aF1RespuestaDetalle[this.indice].Resultado;
            }
        }

        [DispId(0x180)]
        string WSAFIPFE._Factura.f1RespuestaDummyAuthServer
        {
            get
            {
                return this.strf1RespuestaDummyAuthServer;
            }
        }

        [DispId(0x191)]
        string WSAFIPFE._Factura.f1RespuestaDummyDbServer
        {
            get
            {
                return this.strf1RespuestaDummyDbServer;
            }
        }

        [DispId(390)]
        string WSAFIPFE._Factura.F1RespuestaFchProceso
        {
            get
            {
                return this.strF1RespuestaFchProceso;
            }
        }

        [DispId(0x1be)]
        double WSAFIPFE._Factura.f1RespuestaMonedaCotiz
        {
            get
            {
                return this.iF1RespuestaMonedaCotiz;
            }
        }

        [DispId(0x1bd)]
        string WSAFIPFE._Factura.f1RespuestaMonedaFchCotiz
        {
            get
            {
                return this.strF1RespuestaMonedaFchCotiz;
            }
        }

        [DispId(0x1bc)]
        string WSAFIPFE._Factura.f1RespuestaMonedaId
        {
            get
            {
                return this.strF1RespuestaMonedaId;
            }
        }

        [DispId(400)]
        string WSAFIPFE._Factura.F1RespuestaReProceso
        {
            get
            {
                return this.strF1RespuestaReProceso;
            }
        }

        [DispId(0x187)]
        string WSAFIPFE._Factura.F1RespuestaResultado
        {
            get
            {
                return this.strF1RespuestaResultado;
            }
        }

        [DispId(0x17f)]
        string WSAFIPFE._Factura.f1RespuetaDummyAppServer
        {
            get
            {
                return this.strf1RespuestaDummyAppServer;
            }
        }

        [DispId(0x16a)]
        string WSAFIPFE._Factura.f1sign
        {
            get
            {
                return this.strf1Sign;
            }
            set
            {
                this.strf1Sign = value;
            }
        }

        [DispId(0x68)]
        bool WSAFIPFE._Factura.f1TicketEsValido
        {
            get
            {
                if (!this.f1TicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.f1TicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        [DispId(0x141)]
        DateTime WSAFIPFE._Factura.f1TicketHora
        {
            get
            {
                return this.tf1TicketHora;
            }
        }

        [DispId(0x14b)]
        DateTime WSAFIPFE._Factura.f1TicketHoraVencimiento
        {
            get
            {
                return this.tf1TicketHoraVencimiento;
            }
        }

        [DispId(0x155)]
        bool WSAFIPFE._Factura.f1TicketValido
        {
            get
            {
                return this.bf1TicketValido;
            }
        }

        [DispId(0x225)]
        string WSAFIPFE._Factura.f1TiposCbte_Desc
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposCbteItemCantidad - 1)))
                {
                    return this.af1TiposCbte[this.IndiceItem].desc;
                }
                return "";
            }
        }

        [DispId(550)]
        string WSAFIPFE._Factura.f1TiposCbte_fchDesde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposCbteItemCantidad - 1)))
                {
                    return this.af1TiposCbte[this.IndiceItem].fchDesde;
                }
                return "";
            }
        }

        [DispId(0x227)]
        string WSAFIPFE._Factura.f1TiposCbte_fchHasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposCbteItemCantidad - 1)))
                {
                    return this.af1TiposCbte[this.IndiceItem].fchHasta;
                }
                return "";
            }
        }

        [DispId(0x224)]
        int WSAFIPFE._Factura.f1TiposCbte_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposCbteItemCantidad - 1)))
                {
                    return this.af1TiposCbte[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x24)]
        int WSAFIPFE._Factura.f1TiposCbteItemCantidad
        {
            get
            {
                return this.if1TiposCbteItemCantidad;
            }
        }

        [DispId(0x241)]
        string WSAFIPFE._Factura.f1TiposConcepto_Desc
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposConceptoItemCantidad - 1)))
                {
                    return this.af1TiposConcepto[this.IndiceItem].desc;
                }
                return "";
            }
        }

        [DispId(0x242)]
        string WSAFIPFE._Factura.f1TiposConcepto_fchDesde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposConceptoItemCantidad - 1)))
                {
                    return this.af1TiposConcepto[this.IndiceItem].fchDesde;
                }
                return "";
            }
        }

        [DispId(0x243)]
        string WSAFIPFE._Factura.f1TiposConcepto_fchHasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposConceptoItemCantidad - 1)))
                {
                    return this.af1TiposConcepto[this.IndiceItem].fchHasta;
                }
                return "";
            }
        }

        [DispId(0x240)]
        int WSAFIPFE._Factura.f1TiposConcepto_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposConceptoItemCantidad - 1)))
                {
                    return this.af1TiposConcepto[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x2c)]
        int WSAFIPFE._Factura.f1TiposConceptoItemCantidad
        {
            get
            {
                return this.if1TiposConceptoItemCantidad;
            }
        }

        [DispId(0x239)]
        string WSAFIPFE._Factura.f1TiposDoc_Desc
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposDocItemCantidad - 1)))
                {
                    return this.af1TiposDoc[this.IndiceItem].desc;
                }
                return "";
            }
        }

        [DispId(570)]
        string WSAFIPFE._Factura.f1TiposDoc_fchDesde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposDocItemCantidad - 1)))
                {
                    return this.af1TiposDoc[this.IndiceItem].fchDesde;
                }
                return "";
            }
        }

        [DispId(0x23b)]
        string WSAFIPFE._Factura.f1TiposDoc_fchHasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposDocItemCantidad - 1)))
                {
                    return this.af1TiposDoc[this.IndiceItem].fchHasta;
                }
                return "";
            }
        }

        [DispId(0x238)]
        int WSAFIPFE._Factura.f1TiposDoc_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposDocItemCantidad - 1)))
                {
                    return this.af1TiposDoc[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x2a)]
        int WSAFIPFE._Factura.f1TiposDocItemCantidad
        {
            get
            {
                return this.if1TiposDocItemCantidad;
            }
        }

        [DispId(0x235)]
        string WSAFIPFE._Factura.f1TiposIva_Desc
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposIvaItemCantidad - 1)))
                {
                    return this.af1TiposIva[this.IndiceItem].desc;
                }
                return "";
            }
        }

        [DispId(0x236)]
        string WSAFIPFE._Factura.f1TiposIva_fchDesde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposIvaItemCantidad - 1)))
                {
                    return this.af1TiposIva[this.IndiceItem].fchDesde;
                }
                return "";
            }
        }

        [DispId(0x237)]
        string WSAFIPFE._Factura.f1TiposIva_fchHasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposIvaItemCantidad - 1)))
                {
                    return this.af1TiposIva[this.IndiceItem].fchHasta;
                }
                return "";
            }
        }

        [DispId(0x234)]
        int WSAFIPFE._Factura.f1TiposIva_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposIvaItemCantidad - 1)))
                {
                    return this.af1TiposIva[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x29)]
        int WSAFIPFE._Factura.f1TiposIvaItemCantidad
        {
            get
            {
                return this.if1TiposIvaItemCantidad;
            }
        }

        [DispId(0x231)]
        string WSAFIPFE._Factura.f1TiposMoneda_Desc
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposMonedaItemCantidad - 1)))
                {
                    return this.af1TiposMoneda[this.IndiceItem].desc;
                }
                return "";
            }
        }

        [DispId(0x232)]
        string WSAFIPFE._Factura.f1TiposMoneda_fchDesde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposMonedaItemCantidad - 1)))
                {
                    return this.af1TiposMoneda[this.IndiceItem].fchDesde;
                }
                return "";
            }
        }

        [DispId(0x233)]
        string WSAFIPFE._Factura.f1TiposMoneda_fchHasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposMonedaItemCantidad - 1)))
                {
                    return this.af1TiposMoneda[this.IndiceItem].fchHasta;
                }
                return "";
            }
        }

        [DispId(560)]
        string WSAFIPFE._Factura.f1TiposMoneda_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposMonedaItemCantidad - 1)))
                {
                    return this.af1TiposMoneda[this.IndiceItem].id;
                }
                return "";
            }
        }

        [DispId(40)]
        int WSAFIPFE._Factura.f1TiposMonedaItemCantidad
        {
            get
            {
                return this.if1TiposMonedaItemCantidad;
            }
        }

        [DispId(0x22d)]
        string WSAFIPFE._Factura.f1TiposOpcional_Desc
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposOpcionalItemCantidad - 1)))
                {
                    return this.af1TiposOpcional[this.IndiceItem].desc;
                }
                return "";
            }
        }

        [DispId(0x22e)]
        string WSAFIPFE._Factura.f1TiposOpcional_fchDesde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposOpcionalItemCantidad - 1)))
                {
                    return this.af1TiposOpcional[this.IndiceItem].fchDesde;
                }
                return "";
            }
        }

        [DispId(0x22f)]
        string WSAFIPFE._Factura.f1TiposOpcional_fchHasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposOpcionalItemCantidad - 1)))
                {
                    return this.af1TiposOpcional[this.IndiceItem].fchHasta;
                }
                return "";
            }
        }

        [DispId(0x22c)]
        int WSAFIPFE._Factura.f1TiposOpcional_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposOpcionalItemCantidad - 1)))
                {
                    return this.af1TiposOpcional[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x27)]
        int WSAFIPFE._Factura.f1TiposOpcionalItemCantidad
        {
            get
            {
                return this.if1TiposOpcionalItemCantidad;
            }
        }

        [DispId(0x229)]
        string WSAFIPFE._Factura.f1TiposTributo_Desc
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposTributoItemCantidad - 1)))
                {
                    return this.af1TiposTributo[this.IndiceItem].desc;
                }
                return "";
            }
        }

        [DispId(0x22a)]
        string WSAFIPFE._Factura.f1TiposTributo_fchDesde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposTributoItemCantidad - 1)))
                {
                    return this.af1TiposTributo[this.IndiceItem].fchDesde;
                }
                return "";
            }
        }

        [DispId(0x22b)]
        string WSAFIPFE._Factura.f1TiposTributo_fchHasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposTributoItemCantidad - 1)))
                {
                    return this.af1TiposTributo[this.IndiceItem].fchHasta;
                }
                return "";
            }
        }

        [DispId(0x228)]
        int WSAFIPFE._Factura.f1TiposTributo_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.f1TiposTributoItemCantidad - 1)))
                {
                    return this.af1TiposTributo[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x26)]
        int WSAFIPFE._Factura.f1TiposTributoItemCantidad
        {
            get
            {
                return this.if1TiposTributoItemCantidad;
            }
        }

        [DispId(0x160)]
        string WSAFIPFE._Factura.f1token
        {
            get
            {
                return this.strf1Token;
            }
            set
            {
                this.strf1Token = value;
            }
        }

        [DispId(0x13c)]
        int WSAFIPFE._Factura.FECabeceraCantReg
        {
            get
            {
                return this.iFECabeceraCantReg;
            }
            set
            {
                this.iFECabeceraCantReg = value;
                if (value == 0)
                {
                    this.aFEDetalle = new FEDetalle[value + 1];
                }
                else
                {
                    this.aFEDetalle = new FEDetalle[(value - 1) + 1];
                }
            }
        }

        [DispId(0x13d)]
        int WSAFIPFE._Factura.FECabeceraPresta_serv
        {
            get
            {
                return this.iFECabeceraPresta_serv;
            }
            set
            {
                this.iFECabeceraPresta_serv = value;
            }
        }

        [DispId(0x130)]
        int WSAFIPFE._Factura.FEDetalleCbt_desde
        {
            get
            {
                return (int) this.aFEDetalle[this.indice].cbt_desde;
            }
            set
            {
                this.aFEDetalle[this.indice].cbt_desde = value;
            }
        }

        [DispId(0x131)]
        int WSAFIPFE._Factura.FEDetalleCbt_hasta
        {
            get
            {
                return (int) this.aFEDetalle[this.indice].cbt_hasta;
            }
            set
            {
                this.aFEDetalle[this.indice].cbt_hasta = value;
            }
        }

        [DispId(0x13b)]
        string WSAFIPFE._Factura.FEDetalleFecha_cbte
        {
            get
            {
                return this.aFEDetalle[this.indice].fecha_cbte;
            }
            set
            {
                this.aFEDetalle[this.indice].fecha_cbte = value;
            }
        }

        [DispId(0x138)]
        string WSAFIPFE._Factura.FEDetalleFecha_serv_desde
        {
            get
            {
                return this.aFEDetalle[this.indice].fecha_serv_desde;
            }
            set
            {
                this.aFEDetalle[this.indice].fecha_serv_desde = value;
            }
        }

        [DispId(0x139)]
        string WSAFIPFE._Factura.FEDetalleFecha_serv_hasta
        {
            get
            {
                return this.aFEDetalle[this.indice].fecha_serv_hasta;
            }
            set
            {
                this.aFEDetalle[this.indice].fecha_serv_hasta = value;
            }
        }

        [DispId(0x13a)]
        string WSAFIPFE._Factura.FEDetalleFecha_vence_pago
        {
            get
            {
                return this.aFEDetalle[this.indice].fecha_venc_pago;
            }
            set
            {
                this.aFEDetalle[this.indice].fecha_venc_pago = value;
            }
        }

        [DispId(0x134)]
        double WSAFIPFE._Factura.FEDetalleImp_neto
        {
            get
            {
                return this.aFEDetalle[this.indice].imp_neto;
            }
            set
            {
                this.aFEDetalle[this.indice].imp_neto = value;
            }
        }

        [DispId(0x137)]
        double WSAFIPFE._Factura.FEDetalleImp_op_ex
        {
            get
            {
                return this.aFEDetalle[this.indice].imp_op_ex;
            }
            set
            {
                this.aFEDetalle[this.indice].imp_op_ex = value;
            }
        }

        [DispId(0x133)]
        double WSAFIPFE._Factura.FEDetalleImp_tot_conc
        {
            get
            {
                return this.aFEDetalle[this.indice].imp_tot_conc;
            }
            set
            {
                this.aFEDetalle[this.indice].imp_tot_conc = value;
            }
        }

        [DispId(0x132)]
        double WSAFIPFE._Factura.FEDetalleImp_total
        {
            get
            {
                return this.aFEDetalle[this.indice].imp_total;
            }
            set
            {
                this.aFEDetalle[this.indice].imp_total = value;
            }
        }

        [DispId(0x135)]
        double WSAFIPFE._Factura.FEDetalleImpto_liq
        {
            get
            {
                return this.aFEDetalle[this.indice].impto_liq;
            }
            set
            {
                this.aFEDetalle[this.indice].impto_liq = value;
            }
        }

        [DispId(310)]
        double WSAFIPFE._Factura.FEdetalleImto_liq_rni
        {
            get
            {
                return this.aFEDetalle[this.indice].impto_liq_rni;
            }
            set
            {
                this.aFEDetalle[this.indice].impto_liq_rni = value;
            }
        }

        [DispId(300)]
        string WSAFIPFE._Factura.FEDetalleNro_doc
        {
            get
            {
                return this.aFEDetalle[this.indice].nro_doc.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.aFEDetalle[this.indice].nro_doc = Conversions.ToLong(value);
            }
        }

        [DispId(0x12f)]
        int WSAFIPFE._Factura.FEDetallePunto_vta
        {
            get
            {
                return this.aFEDetalle[this.indice].punto_vta;
            }
            set
            {
                this.aFEDetalle[this.indice].punto_vta = value;
            }
        }

        [DispId(0x12e)]
        TipoComprobante WSAFIPFE._Factura.FEDetalleTipo_cbte
        {
            get
            {
                return this.aFEDetalle[this.indice].tipo_cbte;
            }
            set
            {
                this.aFEDetalle[this.indice].tipo_cbte = value;
            }
        }

        [DispId(0x12d)]
        TipoDocumento WSAFIPFE._Factura.FEDetalleTipo_doc
        {
            get
            {
                return this.aFEDetalle[this.indice].tipo_doc;
            }
            set
            {
                this.aFEDetalle[this.indice].tipo_doc = value;
            }
        }

        [DispId(0x127)]
        int WSAFIPFE._Factura.FERespuestaCantidadReg
        {
            get
            {
                return this.iFERespuestaCantidadReg;
            }
        }

        [DispId(0x125)]
        string WSAFIPFE._Factura.FERespuestaCuit
        {
            get
            {
                return this.uFERespuestaCuit.ToString();
            }
        }

        [DispId(0x8d)]
        string WSAFIPFE._Factura.FERespuestaDetalleCae
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].cae;
            }
        }

        [DispId(0x97)]
        int WSAFIPFE._Factura.FERespuestaDetalleCbt_desde
        {
            get
            {
                return (int) this.aFERespuestaDetalle[this.indice].cbt_desde;
            }
        }

        [DispId(150)]
        int WSAFIPFE._Factura.FERespuestaDetalleCbt_hasta
        {
            get
            {
                return (int) this.aFERespuestaDetalle[this.indice].cbt_hasta;
            }
        }

        [DispId(0x8f)]
        string WSAFIPFE._Factura.FERespuestaDetalleFecha_cbte
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].fecha_cbte;
            }
        }

        [DispId(0x8a)]
        string WSAFIPFE._Factura.FERespuestaDetalleFecha_serv_desde
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].fecha_serv_desde;
            }
        }

        [DispId(0x89)]
        string WSAFIPFE._Factura.FERespuestaDetalleFecha_serv_hasta
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].fecha_serv_hasta;
            }
        }

        [DispId(0x88)]
        string WSAFIPFE._Factura.FERespuestaDetalleFecha_venc_pago
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].fecha_venc_pago;
            }
        }

        [DispId(140)]
        string WSAFIPFE._Factura.FERespuestaDetalleFecha_vto
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].fecha_vto;
            }
        }

        [DispId(0x93)]
        double WSAFIPFE._Factura.FERespuestaDetalleImp_neto
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].imp_neto;
            }
        }

        [DispId(0x90)]
        double WSAFIPFE._Factura.FERespuestaDetalleImp_op_ex
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].imp_op_ex;
            }
        }

        [DispId(0x94)]
        double WSAFIPFE._Factura.FERespuestaDetalleImp_tot_conc
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].imp_tot_conc;
            }
        }

        [DispId(0x95)]
        double WSAFIPFE._Factura.FERespuestaDetalleImp_total
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].imp_total;
            }
        }

        [DispId(0x91)]
        double WSAFIPFE._Factura.FERespuestaDetalleImpt_liq_rni
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].impto_liq_rni;
            }
        }

        [DispId(0x92)]
        double WSAFIPFE._Factura.FERespuestaDetalleImpto_liq
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].impto_liq;
            }
        }

        [DispId(0x8b)]
        string WSAFIPFE._Factura.FERespuestaDetalleMotivo
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].motivo;
            }
        }

        [DispId(290)]
        string WSAFIPFE._Factura.FERespuestaDetalleNor_doc
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].nro_doc.ToString();
            }
        }

        [DispId(0x98)]
        int WSAFIPFE._Factura.FERespuestaDetallePunto_vta
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].punto_vta;
            }
        }

        [DispId(0x8e)]
        string WSAFIPFE._Factura.FERespuestaDetalleResultado
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].resultado;
            }
        }

        [DispId(0x99)]
        TipoComprobante WSAFIPFE._Factura.FERespuestaDetalleTipo_cbte
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].tipo_cbte;
            }
        }

        [DispId(0x123)]
        TipoDocumento WSAFIPFE._Factura.FERespuestaDetalleTipo_doc
        {
            get
            {
                return this.aFERespuestaDetalle[this.indice].tipo_doc;
            }
        }

        [DispId(0x126)]
        string WSAFIPFE._Factura.FERespuestaFecha_cae
        {
            get
            {
                return this.strFERespuestaFecha_cae;
            }
        }

        [DispId(0x124)]
        string WSAFIPFE._Factura.FERespuestaId
        {
            get
            {
                return this.uFERespuestaId.ToString();
            }
        }

        [DispId(0x129)]
        string WSAFIPFE._Factura.FERespuestaMotivo
        {
            get
            {
                return this.strFERespuestaMotivo;
            }
        }

        [DispId(0x12b)]
        int WSAFIPFE._Factura.FERespuestaPresta_serv
        {
            get
            {
                return this.iFERespuestaPresta_serv;
            }
        }

        [DispId(0x12a)]
        string WSAFIPFE._Factura.FERespuestaReproceso
        {
            get
            {
                return this.strFERespuestaReproceso;
            }
        }

        [DispId(0x128)]
        string WSAFIPFE._Factura.FERespuestaResultado
        {
            get
            {
                return this.strFERespuestaResultado;
            }
        }

        [DispId(0x2db)]
        int WSAFIPFE._Factura.fxCAEAItemCantidad
        {
            get
            {
                return this.ifxCAEAItemCantidad;
            }
            set
            {
                this.ifxCAEAItemCantidad = value;
                this.aFxCAEAs = new fxCAEA[(value - 1) + 1];
            }
        }

        [DispId(0x2b3)]
        string WSAFIPFE._Factura.fxCodigoAutorizacion
        {
            get
            {
                return this.lfxCodigoAutorizacion.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.lfxCodigoAutorizacion = Conversions.ToLong(value);
            }
        }

        [DispId(0x2b4)]
        bool WSAFIPFE._Factura.fxCodigoAutorizacionNO
        {
            get
            {
                return this.fxNoEspecificar("CodigoAutorizacion", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("CodigoAutorizacion", 0);
                }
                else
                {
                    this.fxNoEspecificar("CodigoAutorizacion", 1);
                }
            }
        }

        [DispId(0x2c3)]
        int WSAFIPFE._Factura.fxCodigoConcepto
        {
            get
            {
                return this.ifxCodigoConcepto;
            }
            set
            {
                this.ifxCodigoConcepto = value;
            }
        }

        [DispId(0x2b5)]
        string WSAFIPFE._Factura.fxCodigoMoneda
        {
            get
            {
                return this.strfxCodigoMoneda;
            }
            set
            {
                this.strfxCodigoMoneda = value;
            }
        }

        [DispId(0x2c8)]
        string WSAFIPFE._Factura.fxCodigoTipoAutorizacion
        {
            get
            {
                return this.ifxCodigoTipoAutorizacion;
            }
            set
            {
                this.ifxCodigoTipoAutorizacion = value;
            }
        }

        [DispId(0x2c5)]
        bool WSAFIPFE._Factura.fxCodigoTipoAutorizacionNO
        {
            get
            {
                return this.fxNoEspecificar("CodigoTipoAutorizacion", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("CodigoTipoAutorizacion", 0);
                }
                else
                {
                    this.fxNoEspecificar("CodigoTipoAutorizacion", 1);
                }
            }
        }

        [DispId(0x2c4)]
        int WSAFIPFE._Factura.fxCodigoTipoComprobante
        {
            get
            {
                return this.ifxCodigoTipoComprobante;
            }
            set
            {
                this.ifxCodigoTipoComprobante = value;
            }
        }

        [DispId(710)]
        int WSAFIPFE._Factura.fxCodigoTipoDocumento
        {
            get
            {
                return this.ifxCodigoTipoDocumento;
            }
            set
            {
                this.ifxCodigoTipoDocumento = value;
            }
        }

        [DispId(0x2c7)]
        bool WSAFIPFE._Factura.fxCodigoTipoDocumentoNO
        {
            get
            {
                return this.fxNoEspecificar("CodigoTipoDocumento", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("CodigoTipoDocumento", 0);
                }
                else
                {
                    this.fxNoEspecificar("CodigoTipoDocumento", 1);
                }
            }
        }

        [DispId(0x2d6)]
        int WSAFIPFE._Factura.fxComprobanteAsosiadoCodigoTipoComprobante
        {
            get
            {
                return this.aFxComprobantesAsociados[this.fxIndiceItem].codigoTipoComprobante;
            }
            set
            {
                this.aFxComprobantesAsociados[this.fxIndiceItem].codigoTipoComprobante = value;
            }
        }

        [DispId(0x2d7)]
        int WSAFIPFE._Factura.fxComprobanteAsosiadoNumeroComprobante
        {
            get
            {
                return (int) this.aFxComprobantesAsociados[this.fxIndiceItem].numeroComprobante;
            }
            set
            {
                this.aFxComprobantesAsociados[this.fxIndiceItem].numeroComprobante = value;
            }
        }

        [DispId(0x2d8)]
        int WSAFIPFE._Factura.fxComprobanteAsosiadoNumeroPuntoVenta
        {
            get
            {
                return (int) this.aFxComprobantesAsociados[this.fxIndiceItem].numeroPuntoVenta;
            }
            set
            {
                this.aFxComprobantesAsociados[this.fxIndiceItem].numeroPuntoVenta = value;
            }
        }

        [DispId(0x2d9)]
        int WSAFIPFE._Factura.fxComprobantesAsociadosItemCantidad
        {
            get
            {
                return this.ifxComprobantesAsociadosItemCantidad;
            }
            set
            {
                this.ifxComprobantesAsociadosItemCantidad = value;
                this.aFxComprobantesAsociados = new fxComprobantesAsociados[(value - 1) + 1];
            }
        }

        [DispId(0x2c9)]
        double WSAFIPFE._Factura.fxCotizacionMoneda
        {
            get
            {
                return this.ifxCotizacionMoneda;
            }
            set
            {
                this.ifxCotizacionMoneda = value;
            }
        }

        [DispId(0x1d7)]
        string WSAFIPFE._Factura.fxDireccionServicioURL
        {
            get
            {
                return this.cfxDireccionServicioURL;
            }
            set
            {
                this.cfxDireccionServicioURL = value;
            }
        }

        [DispId(0x245)]
        int WSAFIPFE._Factura.fxErrorCode
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.fxErrorItemCantidad - 1)))
                {
                    return this.afxError[this.IndiceItem].code;
                }
                return 0;
            }
        }

        [DispId(0x255)]
        int WSAFIPFE._Factura.fxErrorCode1
        {
            get
            {
                if ((this.fxErrorItemCantidad - 1) >= 0)
                {
                    return this.afxError[0].code;
                }
                return 0;
            }
        }

        [DispId(0x257)]
        int WSAFIPFE._Factura.fxErrorCode2
        {
            get
            {
                if ((this.fxErrorItemCantidad - 1) >= 1)
                {
                    return this.afxError[1].code;
                }
                return 0;
            }
        }

        [DispId(0x2f)]
        int WSAFIPFE._Factura.fxErrorItemCantidad
        {
            get
            {
                return this.ifxErrorItemCantidad;
            }
        }

        [DispId(0x248)]
        string WSAFIPFE._Factura.fxErrorMsg
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.fxErrorItemCantidad - 1)))
                {
                    return this.afxError[this.IndiceItem].msg;
                }
                return "";
            }
        }

        [DispId(0x251)]
        string WSAFIPFE._Factura.fxErrorMsg1
        {
            get
            {
                if ((this.fxErrorItemCantidad - 1) >= 0)
                {
                    return this.afxError[0].msg;
                }
                return "";
            }
        }

        [DispId(0x253)]
        string WSAFIPFE._Factura.fxErrorMsg2
        {
            get
            {
                if ((this.fxErrorItemCantidad - 1) >= 1)
                {
                    return this.afxError[1].msg;
                }
                return "";
            }
        }

        [DispId(0x24b)]
        int WSAFIPFE._Factura.fxEventCode
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.fxEventItemCantidad - 1)))
                {
                    return this.afxEvent[this.IndiceItem].code;
                }
                return 0;
            }
        }

        [DispId(0x25d)]
        int WSAFIPFE._Factura.fxEventCode1
        {
            get
            {
                if ((this.fxEventItemCantidad - 1) >= 0)
                {
                    return this.afxEvent[0].code;
                }
                return 0;
            }
        }

        [DispId(0x25f)]
        int WSAFIPFE._Factura.fxEventCode2
        {
            get
            {
                if ((this.fxEventItemCantidad - 1) >= 1)
                {
                    return this.afxEvent[1].code;
                }
                return 0;
            }
        }

        [DispId(0x31)]
        int WSAFIPFE._Factura.fxEventItemCantidad
        {
            get
            {
                return this.ifxEventItemCantidad;
            }
        }

        [DispId(0x24d)]
        string WSAFIPFE._Factura.fxEventMsg
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.fxEventItemCantidad - 1)))
                {
                    return this.afxEvent[this.IndiceItem].msg;
                }
                return "";
            }
        }

        [DispId(0x259)]
        string WSAFIPFE._Factura.fxEventMsg1
        {
            get
            {
                if ((this.fxEventItemCantidad - 1) >= 0)
                {
                    return this.afxEvent[0].msg;
                }
                return "";
            }
        }

        [DispId(0x25b)]
        string WSAFIPFE._Factura.fxEventMsg2
        {
            get
            {
                if ((this.fxEventItemCantidad - 1) >= 1)
                {
                    return this.afxEvent[1].msg;
                }
                return "";
            }
        }

        [DispId(0x2b9)]
        string WSAFIPFE._Factura.fxFechaEmision
        {
            get
            {
                return this.dfxFechaEmision.ToString("yyyyMMdd");
            }
            set
            {
                if (value == "")
                {
                    value = "20010101";
                }
                this.dfxFechaEmision = DateTime.ParseExact(value, "yyyyMMdd", null);
            }
        }

        [DispId(0x2ba)]
        bool WSAFIPFE._Factura.fxFechaEmisionNO
        {
            get
            {
                return this.fxNoEspecificar("FechaEmision", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("FechaEmision", 0);
                }
                else
                {
                    this.fxNoEspecificar("FechaEmision", 1);
                }
            }
        }

        [DispId(0x2c1)]
        string WSAFIPFE._Factura.fxFechaServicioDesde
        {
            get
            {
                return this.dfxFechaServicioDesde.ToString("yyyyMMdd");
            }
            set
            {
                if (value == "")
                {
                    value = "20010101";
                }
                this.dfxFechaServicioDesde = DateTime.ParseExact(value, "yyyyMMdd", null);
            }
        }

        [DispId(0x2c2)]
        bool WSAFIPFE._Factura.fxFechaServicioDesdeNO
        {
            get
            {
                return this.fxNoEspecificar("FechaServicioDesde", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("FechaServicioDesde", 0);
                }
                else
                {
                    this.fxNoEspecificar("FechaServicioDesde", 1);
                }
            }
        }

        [DispId(0x2bb)]
        string WSAFIPFE._Factura.fxFechaServicioHasta
        {
            get
            {
                return this.dfxFechaServicioHasta.ToString("yyyyMMdd");
            }
            set
            {
                if (value == "")
                {
                    value = "20010101";
                }
                this.dfxFechaServicioHasta = DateTime.ParseExact(value, "yyyyMMdd", null);
            }
        }

        [DispId(700)]
        bool WSAFIPFE._Factura.fxFechaServicioHastaNO
        {
            get
            {
                return this.fxNoEspecificar("FechaServicioHasta", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("FechaServicioHasta", 0);
                }
                else
                {
                    this.fxNoEspecificar("FechaServicioHasta", 1);
                }
            }
        }

        [DispId(0x2bd)]
        string WSAFIPFE._Factura.fxFechaVencimiento
        {
            get
            {
                return this.dfxFechaVencimiento.ToString("yyyyMMdd");
            }
            set
            {
                if (value == "")
                {
                    value = "20010101";
                }
                this.dfxFechaVencimiento = DateTime.ParseExact(value, "yyyyMMdd", null);
            }
        }

        [DispId(0x2be)]
        bool WSAFIPFE._Factura.fxFechaVencimientoNO
        {
            get
            {
                return this.fxNoEspecificar("FechaVencimiento", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("FechaVencimiento", 0);
                }
                else
                {
                    this.fxNoEspecificar("FechaVencimiento", 1);
                }
            }
        }

        [DispId(0x2bf)]
        string WSAFIPFE._Factura.fxFechaVencimientoPago
        {
            get
            {
                return this.dfxFechaVencimientoPago.ToString("yyyyMMdd");
            }
            set
            {
                if (value == "")
                {
                    value = "20010101";
                }
                this.dfxFechaVencimientoPago = DateTime.ParseExact(value, "yyyyMMdd", null);
            }
        }

        [DispId(0x2c0)]
        bool WSAFIPFE._Factura.fxFechaVencimientoPagoNO
        {
            get
            {
                return this.fxNoEspecificar("FechaVencimientoPago", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("FechaVencimientoPago", 0);
                }
                else
                {
                    this.fxNoEspecificar("FechaVencimientoPago", 1);
                }
            }
        }

        [DispId(0x2ca)]
        double WSAFIPFE._Factura.fxImporteExento
        {
            get
            {
                return this.nfxImporteExento;
            }
            set
            {
                this.nfxImporteExento = value;
            }
        }

        [DispId(0x2cb)]
        bool WSAFIPFE._Factura.fxImporteExentoNO
        {
            get
            {
                return this.fxNoEspecificar("ImporteExento", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("ImporteExento", 0);
                }
                else
                {
                    this.fxNoEspecificar("ImporteExento", 1);
                }
            }
        }

        [DispId(0x2cc)]
        double WSAFIPFE._Factura.fxImporteGravado
        {
            get
            {
                return this.nfxImporteGravado;
            }
            set
            {
                this.nfxImporteGravado = value;
            }
        }

        [DispId(0x2cd)]
        bool WSAFIPFE._Factura.fxImporteGravadoNO
        {
            get
            {
                return this.fxNoEspecificar("ImporteGravado", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("ImporteGravado", 0);
                }
                else
                {
                    this.fxNoEspecificar("ImporteGravado", 1);
                }
            }
        }

        [DispId(0x2ce)]
        double WSAFIPFE._Factura.fxImporteNoGravado
        {
            get
            {
                return this.nfxImporteNoGravado;
            }
            set
            {
                this.nfxImporteNoGravado = value;
            }
        }

        [DispId(0x2cf)]
        bool WSAFIPFE._Factura.fxImporteNoGravadoNO
        {
            get
            {
                return this.fxNoEspecificar("ImporteNoGravado", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("ImporteNoGravado", 0);
                }
                else
                {
                    this.fxNoEspecificar("ImporteNoGravado", 1);
                }
            }
        }

        [DispId(720)]
        double WSAFIPFE._Factura.fxImporteOtrosTributos
        {
            get
            {
                return this.nfxImporteOtrosTributos;
            }
            set
            {
                this.nfxImporteOtrosTributos = value;
            }
        }

        [DispId(0x2d1)]
        bool WSAFIPFE._Factura.fxImporteOtrosTributosNO
        {
            get
            {
                return this.fxNoEspecificar("ImporteOtrosTributos", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("ImporteOtrosTributos", 0);
                }
                else
                {
                    this.fxNoEspecificar("ImporteOtrosTributos", 1);
                }
            }
        }

        [DispId(0x2d3)]
        double WSAFIPFE._Factura.fxImporteSubTotal
        {
            get
            {
                return this.nfxImporteSubtotal;
            }
            set
            {
                this.nfxImporteSubtotal = value;
            }
        }

        [DispId(0x2d4)]
        double WSAFIPFE._Factura.fxImporteTotal
        {
            get
            {
                return this.nfxImporteTotal;
            }
            set
            {
                this.nfxImporteTotal = value;
            }
        }

        [DispId(0x9e)]
        int WSAFIPFE._Factura.fxIndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        [DispId(0x2de)]
        double WSAFIPFE._Factura.fxItemCantidad
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].cantidad;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].cantidad = value;
            }
        }

        [DispId(0x2df)]
        bool WSAFIPFE._Factura.fxItemCantidadNO
        {
            get
            {
                return this.fxNoEspecificarItem("ItemCantidad", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificarItem("ItemCantidad", 0);
                }
                else
                {
                    this.fxNoEspecificarItem("ItemCantidad", 1);
                }
            }
        }

        [DispId(0x2e7)]
        string WSAFIPFE._Factura.fxItemCodigo
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].codigo;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].codigo = value;
            }
        }

        [DispId(0x2f0)]
        int WSAFIPFE._Factura.fxItemCodigoCondicionIva
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].CodigoCondicionIva;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].CodigoCondicionIva = value;
            }
        }

        [DispId(750)]
        string WSAFIPFE._Factura.fxItemCodigoMtx
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].codigoMtx;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].codigoMtx = value;
            }
        }

        [DispId(0x2f1)]
        int WSAFIPFE._Factura.fxItemCodigoUnidadMedida
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].codigoUnidaMedida;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].codigoUnidaMedida = value;
            }
        }

        [DispId(0x2ef)]
        string WSAFIPFE._Factura.fxItemDescripcion
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].descripcion;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].descripcion = value;
            }
        }

        [DispId(0x2e1)]
        double WSAFIPFE._Factura.fxItemImporteBonificacion
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].importeBonifacion;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].importeBonifacion = value;
            }
        }

        [DispId(0x2e0)]
        bool WSAFIPFE._Factura.fxItemImporteBonificacionNO
        {
            get
            {
                return this.fxNoEspecificarItem("ItemImporteBonificacion", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificarItem("ItemImporteBonificacion", 0);
                }
                else
                {
                    this.fxNoEspecificarItem("ItemImporteBonificacion", 1);
                }
            }
        }

        [DispId(0x2e2)]
        double WSAFIPFE._Factura.fxItemImporteItem
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].importeItem;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].importeItem = value;
            }
        }

        [DispId(0x2e3)]
        double WSAFIPFE._Factura.fxItemImporteIva
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].importeIva;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].importeIva = value;
            }
        }

        [DispId(740)]
        bool WSAFIPFE._Factura.fxItemImporteIvaNO
        {
            get
            {
                return this.fxNoEspecificarItem("ItemImporteIva", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificarItem("ItemImporteIva", 0);
                }
                else
                {
                    this.fxNoEspecificarItem("ItemImporteIva", 1);
                }
            }
        }

        [DispId(0x2e5)]
        double WSAFIPFE._Factura.fxItemPrecioUnitario
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].precioUnitario;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].precioUnitario = value;
            }
        }

        [DispId(0x2e6)]
        bool WSAFIPFE._Factura.fxItemPrecioUnitarioNO
        {
            get
            {
                return this.fxNoEspecificarItem("ItemPrecioUnitario", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificarItem("ItemPrecioUnitario", 0);
                }
                else
                {
                    this.fxNoEspecificarItem("ItemPrecioUnitario", 1);
                }
            }
        }

        [DispId(730)]
        int WSAFIPFE._Factura.fxItemsItemCantidad
        {
            get
            {
                return this.ifxItemsCantidad;
            }
            set
            {
                this.ifxItemsCantidad = value;
                this.aFxItems = new fxItems[(value - 1) + 1];
            }
        }

        [DispId(0x2f2)]
        int WSAFIPFE._Factura.fxItemUnidadesMtx
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].UnidadesMts;
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].UnidadesMts = value;
            }
        }

        [DispId(0x2f4)]
        bool WSAFIPFE._Factura.fxItemUnidadesMtxNO
        {
            get
            {
                return this.fxNoEspecificarItem("ItemUnidadesMtx", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificarItem("ItemUnidadesMtx", 0);
                }
                else
                {
                    this.fxNoEspecificarItem("ItemUnidadesMtx", 1);
                }
            }
        }

        [DispId(0x2f3)]
        string WSAFIPFE._Factura.fxItemUnidadesMtxS
        {
            get
            {
                return this.aFxItems[this.fxIndiceItem].UnidadesMts.ToString();
            }
            set
            {
                this.aFxItems[this.fxIndiceItem].UnidadesMts = Conversions.ToInteger(value);
            }
        }

        [DispId(0x73)]
        bool WSAFIPFE._Factura.fxLicenciaValidaCAE
        {
            get
            {
                return (((0x200 & this.LicenciaValor) == 0x200) & this.LicenciaDatosValida);
            }
        }

        [DispId(0x74)]
        bool WSAFIPFE._Factura.fxLicenciaValidaCAEA
        {
            get
            {
                return (((0x400 & this.LicenciaValor) == 0x400) & this.LicenciaDatosValida);
            }
        }

        [DispId(0x1b6)]
        int WSAFIPFE._Factura.fxListaCodigo
        {
            get
            {
                return this.afxLista[this.fxIndiceItem].codigo;
            }
        }

        [DispId(440)]
        string WSAFIPFE._Factura.fxListaCodigo2
        {
            get
            {
                return this.afxLista[this.fxIndiceItem].codigo2;
            }
        }

        [DispId(0x1b7)]
        string WSAFIPFE._Factura.fxListaDescripcion
        {
            get
            {
                return this.afxLista[this.fxIndiceItem].descripcion;
            }
        }

        [DispId(0x1b9)]
        string WSAFIPFE._Factura.fxListaDesde
        {
            get
            {
                return this.afxLista[this.fxIndiceItem].fecha1;
            }
        }

        [DispId(0x1ba)]
        string WSAFIPFE._Factura.fxListaHasta
        {
            get
            {
                return this.afxLista[this.fxIndiceItem].fecha2;
            }
        }

        [DispId(0x25)]
        int WSAFIPFE._Factura.fxListaItemCantidad
        {
            get
            {
                return this.ifxListaItemCantidad;
            }
        }

        [DispId(0x2d5)]
        int WSAFIPFE._Factura.fxNumeroComprobante
        {
            get
            {
                return (int) this.lfxNumeroComprobante;
            }
            set
            {
                this.lfxNumeroComprobante = value;
            }
        }

        [DispId(0x2b7)]
        string WSAFIPFE._Factura.fxNumeroDocumento
        {
            get
            {
                return this.lfxNumeroDocumento.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.lfxNumeroDocumento = Conversions.ToLong(value);
            }
        }

        [DispId(0x2d2)]
        bool WSAFIPFE._Factura.fxNumeroDocumentoNO
        {
            get
            {
                return this.fxNoEspecificar("NumeroDocumento", 2);
            }
            set
            {
                if (value)
                {
                    this.fxNoEspecificar("NumeroDocumento", 0);
                }
                else
                {
                    this.fxNoEspecificar("NumeroDocumento", 1);
                }
            }
        }

        [DispId(0x2b8)]
        int WSAFIPFE._Factura.fxNumeroPuntoVenta
        {
            get
            {
                return this.ifxPuntoVenta;
            }
            set
            {
                this.ifxPuntoVenta = value;
            }
        }

        [DispId(0x246)]
        int WSAFIPFE._Factura.fxObervacionCodigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.fxObervacionItemCantidad - 1)))
                {
                    return this.afxObervacion[this.IndiceItem].codigo;
                }
                return 0;
            }
        }

        [DispId(0x250)]
        int WSAFIPFE._Factura.fxObervacionCodigo1
        {
            get
            {
                if ((this.fxObervacionItemCantidad - 1) >= 0)
                {
                    return this.afxObervacion[0].codigo;
                }
                return 0;
            }
        }

        [DispId(0x249)]
        string WSAFIPFE._Factura.fxObervacionDescripcion
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.fxObervacionItemCantidad - 1)))
                {
                    return this.afxObervacion[this.IndiceItem].descripcion;
                }
                return "";
            }
        }

        [DispId(0x24f)]
        string WSAFIPFE._Factura.fxObervacionDescripcion1
        {
            get
            {
                if ((this.fxObervacionItemCantidad - 1) >= 0)
                {
                    return this.afxObervacion[0].descripcion;
                }
                return "";
            }
        }

        [DispId(0x30)]
        int WSAFIPFE._Factura.fxObervacionItemCantidad
        {
            get
            {
                return this.ifxObervacionItemCantidad;
            }
        }

        [DispId(0x2b6)]
        string WSAFIPFE._Factura.fxObservaciones
        {
            get
            {
                return this.strfxObservaciones;
            }
            set
            {
                this.strfxObservaciones = value;
            }
        }

        [DispId(0x2e8)]
        double WSAFIPFE._Factura.fxOtrosTributosBaseImponible
        {
            get
            {
                return this.aFxOtrosTributos[this.fxIndiceItem].baseImponible;
            }
            set
            {
                this.aFxOtrosTributos[this.fxIndiceItem].baseImponible = value;
            }
        }

        [DispId(0x2eb)]
        int WSAFIPFE._Factura.fxOtrosTributosCodigo
        {
            get
            {
                return this.aFxOtrosTributos[this.fxIndiceItem].codigo;
            }
            set
            {
                this.aFxOtrosTributos[this.fxIndiceItem].codigo = value;
            }
        }

        [DispId(0x2ea)]
        string WSAFIPFE._Factura.fxOtrosTributosDescripcion
        {
            get
            {
                return this.aFxOtrosTributos[this.fxIndiceItem].descripcion;
            }
            set
            {
                this.aFxOtrosTributos[this.fxIndiceItem].descripcion = value;
            }
        }

        [DispId(0x2e9)]
        double WSAFIPFE._Factura.fxOtrosTributosImporte
        {
            get
            {
                return this.aFxOtrosTributos[this.fxIndiceItem].importe;
            }
            set
            {
                this.aFxOtrosTributos[this.fxIndiceItem].importe = value;
            }
        }

        [DispId(0x2dc)]
        int WSAFIPFE._Factura.fxOtrosTributosItemCantidad
        {
            get
            {
                return this.ifxOtrosTributosItemCantidad;
            }
            set
            {
                this.ifxOtrosTributosItemCantidad = value;
                this.aFxOtrosTributos = new fxOtrosTributos[(value - 1) + 1];
            }
        }

        [DispId(0x189)]
        string WSAFIPFE._Factura.fxRespuestaCAE
        {
            get
            {
                return this.lfxRespuestaCAE.ToString();
            }
        }

        [DispId(0x1c8)]
        string WSAFIPFE._Factura.fxRespuestaCAEA
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].strFxRespuestaCAEA;
            }
        }

        [DispId(0x1cd)]
        string WSAFIPFE._Factura.fxRespuestaCAEAFechaDesde
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaDesde.ToString("yyyyMMdd");
            }
        }

        [DispId(0x1ce)]
        string WSAFIPFE._Factura.fxRespuestaCAEAFechaHasta
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaHasta.ToString("yyyyMMdd");
            }
        }

        [DispId(0x1d0)]
        string WSAFIPFE._Factura.fxRespuestaCAEAFechaProceso
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaProceso.ToString("yyyyMMdd");
            }
        }

        [DispId(0x1cf)]
        string WSAFIPFE._Factura.fxRespuestaCAEAFechaTopeInforme
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].dFxRespuestaCAEAFechaTopeInforme.ToString("yyyyMMdd");
            }
        }

        [DispId(0x185)]
        int WSAFIPFE._Factura.FxRespuestaCAEAItemCantidad
        {
            get
            {
                return this.iFxRespuestaCAEAItemCantidad;
            }
        }

        [DispId(0x1cb)]
        int WSAFIPFE._Factura.fxRespuestaCAEAOrden
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAOrden;
            }
        }

        [DispId(460)]
        string WSAFIPFE._Factura.fxRespuestaCAEAOrdenS
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAOrden.ToString();
            }
        }

        [DispId(0x1c9)]
        int WSAFIPFE._Factura.fxRespuestaCAEAPeriodo
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAPeriodo;
            }
        }

        [DispId(0x1ca)]
        string WSAFIPFE._Factura.fxRespuestaCAEAPeriodoS
        {
            get
            {
                return this.aFxCAEAs[this.fxIndiceItem].iFxRespuestaCAEAPeriodo.ToString();
            }
        }

        [DispId(0x18c)]
        int WSAFIPFE._Factura.fxRespuestaCodigoTipoComprobante
        {
            get
            {
                return this.ifxRespuestaCodigoTipoComprobante;
            }
        }

        [DispId(0x18a)]
        string WSAFIPFE._Factura.fxRespuestaCUIT
        {
            get
            {
                return this.lfxRespuestaCUIT.ToString();
            }
        }

        [DispId(0x28f)]
        string WSAFIPFE._Factura.FxRespuestaDetalleCAEABloqueado
        {
            get
            {
                return this.aFxRespuestaDetalleCAEA[this.fxIndiceItem].Bloqueado;
            }
        }

        [DispId(0x290)]
        string WSAFIPFE._Factura.FxRespuestaDetalleCAEAFechaBaja
        {
            get
            {
                return this.aFxRespuestaDetalleCAEA[this.fxIndiceItem].Fechabaja.ToString("yyyyMMdd");
            }
        }

        [DispId(0x28e)]
        int WSAFIPFE._Factura.FxRespuestaDetalleCAEANumeroPuntoventa
        {
            get
            {
                return this.aFxRespuestaDetalleCAEA[this.fxIndiceItem].NumeroPuntoDeventa;
            }
        }

        [DispId(0x182)]
        string WSAFIPFE._Factura.fxRespuestaDummyAuthServer
        {
            get
            {
                return this.strfxRespuestaDummyAuthServer;
            }
        }

        [DispId(0x18e)]
        string WSAFIPFE._Factura.fxRespuestaFechaEmision
        {
            get
            {
                return this.dfxRespuestaFechaEmision.ToString("yyyyMMdd");
            }
        }

        [DispId(0x18f)]
        string WSAFIPFE._Factura.fxRespuestaFechaVencimientoCAE
        {
            get
            {
                return this.dfxRespuestaFechaVencimientoCAE.ToString("yyyyMMdd");
            }
        }

        [DispId(0x18b)]
        int WSAFIPFE._Factura.fxRespuestaNumeroComprobante
        {
            get
            {
                return (int) this.lfxRespuestaNumeroComprobante;
            }
        }

        [DispId(0x18d)]
        int WSAFIPFE._Factura.fxRespuestaNumeroPuntoVenta
        {
            get
            {
                return this.ifxRespuestaNumeroPuntoVenta;
            }
        }

        [DispId(0x1b5)]
        int WSAFIPFE._Factura.FxRespuestaObservacionCodigo1
        {
            get
            {
                if (this.FxRespuestaObservacionItemCantidad > 0)
                {
                    return this.afxObervacion[0].codigo;
                }
                return 0;
            }
        }

        [DispId(0x1b4)]
        string WSAFIPFE._Factura.FxRespuestaObservacionDescripcion1
        {
            get
            {
                if (this.FxRespuestaObservacionItemCantidad > 0)
                {
                    return this.afxObervacion[0].descripcion;
                }
                return "";
            }
        }

        [DispId(0x1b0)]
        int WSAFIPFE._Factura.FxRespuestaObservacionItemCantidad
        {
            get
            {
                return this.ifxObervacionItemCantidad;
            }
        }

        [DispId(0x188)]
        string WSAFIPFE._Factura.fxRespuestaResultado
        {
            get
            {
                return this.strfxRespuestaResultado;
            }
        }

        [DispId(0x181)]
        string WSAFIPFE._Factura.fxRespuetaDummyAppServer
        {
            get
            {
                return this.strfxRespuestaDummyAppServer;
            }
        }

        [DispId(0x16b)]
        string WSAFIPFE._Factura.fxsign
        {
            get
            {
                return this.strfxSign;
            }
            set
            {
                this.strfxSign = value;
            }
        }

        [DispId(0x2dd)]
        int WSAFIPFE._Factura.fxSubTotalesItemCantidad
        {
            get
            {
                return this.ifxSubTotalesIvaItemCantidad;
            }
            set
            {
                this.ifxSubTotalesIvaItemCantidad = value;
                this.aFxSubTotalesIva = new fxSubTotalesIva[(value - 1) + 1];
            }
        }

        [DispId(0x2ec)]
        int WSAFIPFE._Factura.fxSubTotalesIvaCodigo
        {
            get
            {
                return this.aFxSubTotalesIva[this.fxIndiceItem].codigo;
            }
            set
            {
                this.aFxSubTotalesIva[this.fxIndiceItem].codigo = value;
            }
        }

        [DispId(0x2ed)]
        double WSAFIPFE._Factura.fxSubTotalesIvaImporte
        {
            get
            {
                return this.aFxSubTotalesIva[this.fxIndiceItem].importe;
            }
            set
            {
                this.aFxSubTotalesIva[this.fxIndiceItem].importe = value;
            }
        }

        [DispId(0x69)]
        bool WSAFIPFE._Factura.fxTicketEsValido
        {
            get
            {
                if (!this.fxTicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.fxTicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        [DispId(0x142)]
        DateTime WSAFIPFE._Factura.fxTicketHora
        {
            get
            {
                return this.tfxTicketHora;
            }
        }

        [DispId(0x14c)]
        DateTime WSAFIPFE._Factura.fxTicketHoraVencimiento
        {
            get
            {
                return this.tfxTicketHoraVencimiento;
            }
        }

        [DispId(0x156)]
        bool WSAFIPFE._Factura.fxTicketValido
        {
            get
            {
                return this.bfxTicketValido;
            }
        }

        [DispId(0x161)]
        string WSAFIPFE._Factura.fxtoken
        {
            get
            {
                return this.strfxToken;
            }
            set
            {
                this.strfxToken = value;
            }
        }

        [DispId(0x277)]
        string WSAFIPFE._Factura.gCosechaCodigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gCosechaItemCantidad - 1)))
                {
                    return this.agCosecha[this.IndiceItem].codigoCosecha;
                }
                return "";
            }
        }

        [DispId(0x278)]
        string WSAFIPFE._Factura.gCosechaDescripcion
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gCosechaItemCantidad - 1)))
                {
                    return this.agCosecha[this.IndiceItem].descripcionCosecha;
                }
                return "";
            }
        }

        [DispId(0xa9)]
        int WSAFIPFE._Factura.gCosechaItemCantidad
        {
            get
            {
                return this.igCosechaItemCantidad;
            }
            set
            {
                this.igCosechaItemCantidad = value;
                this.agCosecha = new gCosecha[(value - 1) + 1];
            }
        }

        [DispId(0x279)]
        int WSAFIPFE._Factura.gCTGCantHoras
        {
            get
            {
                return this.giCTGCantHoras;
            }
            set
            {
                this.giCTGCantHoras = value;
            }
        }

        [DispId(0x27b)]
        string WSAFIPFE._Factura.gCTGCodigoCosecha
        {
            get
            {
                return this.gstrCTGCodigoCosecha;
            }
            set
            {
                this.gstrCTGCodigoCosecha = value;
            }
        }

        [DispId(0x27a)]
        string WSAFIPFE._Factura.gCTGCodigoEspecie
        {
            get
            {
                return this.gstrCTGCodigoEspecie;
            }
            set
            {
                this.gstrCTGCodigoEspecie = value;
            }
        }

        [DispId(0x27c)]
        int WSAFIPFE._Factura.gCTGCodigoLocalidadDestino
        {
            get
            {
                return this.giCTGcodigoLocalidadDestino;
            }
            set
            {
                this.giCTGcodigoLocalidadDestino = value;
            }
        }

        [DispId(0x27d)]
        int WSAFIPFE._Factura.gCTGCodigoLocalidadOrigen
        {
            get
            {
                return this.giCTGcodigoLocalidadOrigen;
            }
            set
            {
                this.giCTGcodigoLocalidadOrigen = value;
            }
        }

        [DispId(0x27e)]
        string WSAFIPFE._Factura.gCTGCuitDestinatario
        {
            get
            {
                return this.glCTGCUITDestinatario.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.glCTGCUITDestinatario = Conversions.ToLong(value);
            }
        }

        [DispId(0x27f)]
        string WSAFIPFE._Factura.gCTGCuitDestino
        {
            get
            {
                return this.glCTGCUITDestino.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.glCTGCUITDestino = Conversions.ToLong(value);
            }
        }

        [DispId(640)]
        string WSAFIPFE._Factura.gCTGCuitRemitenteComercial
        {
            get
            {
                return this.glCTGCUITRemitenteComercial.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.glCTGCUITRemitenteComercial = Conversions.ToLong(value);
            }
        }

        [DispId(0x282)]
        string WSAFIPFE._Factura.gCTGCuitRepresentado
        {
            get
            {
                return this.glCTGCUITRepresentado.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.glCTGCUITRepresentado = Conversions.ToLong(value);
            }
        }

        [DispId(0x281)]
        string WSAFIPFE._Factura.gCTGCuitTrasnportista
        {
            get
            {
                return this.glCTGCUITTransportista.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.glCTGCUITTransportista = Conversions.ToLong(value);
            }
        }

        [DispId(0x283)]
        string WSAFIPFE._Factura.gCTGNumeroCartaPorte
        {
            get
            {
                return this.glCTGNumeroCartaPorte.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.glCTGNumeroCartaPorte = Conversions.ToLong(value);
            }
        }

        [DispId(0x284)]
        string WSAFIPFE._Factura.gCTGPatenteVehiculo
        {
            get
            {
                return this.gstrCTGPatenteVehiculo;
            }
            set
            {
                this.gstrCTGPatenteVehiculo = value;
            }
        }

        [DispId(0x285)]
        string WSAFIPFE._Factura.gCTGPatenteVehiculoS
        {
            get
            {
                return this.gstrCTGPatenteVehiculo;
            }
            set
            {
                this.gstrCTGPatenteVehiculo = value.Trim();
            }
        }

        [DispId(0x286)]
        string WSAFIPFE._Factura.gCTGPesoNetoCarga
        {
            get
            {
                return this.glCTGpesoNetoCarga.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.glCTGpesoNetoCarga = Conversions.ToLong(value);
            }
        }

        [DispId(0x289)]
        string WSAFIPFE._Factura.gCTGRespuestaCodigoTransaccion
        {
            get
            {
                return this.glRespuestaCodigoTransaccion.ToString();
            }
        }

        [DispId(0x287)]
        string WSAFIPFE._Factura.gCTGRespuestaNumeroCartaPorte
        {
            get
            {
                return this.glRespuestaNumeroCartaPorte.ToString();
            }
        }

        [DispId(0x288)]
        string WSAFIPFE._Factura.gCTGRespuestaNumeroCTG
        {
            get
            {
                return this.glRespuestaNumeroCTG.ToString();
            }
        }

        [DispId(650)]
        string WSAFIPFE._Factura.gCTGRespuestaObervaciones
        {
            get
            {
                return this.gstrRespuestaObservaciones;
            }
        }

        [DispId(0x6c)]
        string WSAFIPFE._Factura.gErrorCodigo
        {
            get
            {
                return this.gstrErrorCodigo;
            }
        }

        [DispId(0x6b)]
        string WSAFIPFE._Factura.gErrorMensaje
        {
            get
            {
                return this.gstrErrorMensaje;
            }
        }

        [DispId(0x26d)]
        int WSAFIPFE._Factura.gEspecieCodigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gEspecieItemCantidad - 1)))
                {
                    return this.agEspecie[this.IndiceItem].codigoEspecie;
                }
                return 0;
            }
        }

        [DispId(0x26e)]
        string WSAFIPFE._Factura.gEspecieDescripcion
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gEspecieItemCantidad - 1)))
                {
                    return this.agEspecie[this.IndiceItem].descripcionEspecie;
                }
                return "";
            }
        }

        [DispId(0xa5)]
        int WSAFIPFE._Factura.gEspecieItemCantidad
        {
            get
            {
                return this.igEspecieItemCantidad;
            }
            set
            {
                this.igEspecieItemCantidad = value;
                this.agEspecie = new gEspecie[(value - 1) + 1];
            }
        }

        [DispId(160)]
        int WSAFIPFE._Factura.gIndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        [DispId(120)]
        bool WSAFIPFE._Factura.gLicenciaValida
        {
            get
            {
                return (((0x40 & this.LicenciaValor) == 0x40) & this.LicenciaDatosValida);
            }
        }

        [DispId(0x271)]
        int WSAFIPFE._Factura.gLocalidadCodigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gLocalidadItemCantidad - 1)))
                {
                    return this.agLocalidad[this.IndiceItem].codigoLocalidad;
                }
                return 0;
            }
        }

        [DispId(0x272)]
        string WSAFIPFE._Factura.gLocalidadDescripcion
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gLocalidadItemCantidad - 1)))
                {
                    return this.agLocalidad[this.IndiceItem].descripcionLocalidad;
                }
                return "";
            }
        }

        [DispId(0xa7)]
        int WSAFIPFE._Factura.gLocalidadItemCantidad
        {
            get
            {
                return this.igLocalidadItemCantidad;
            }
            set
            {
                this.igLocalidadItemCantidad = value;
                this.agLocalidad = new gLocalidad[(value - 1) + 1];
            }
        }

        [DispId(0x273)]
        int WSAFIPFE._Factura.gLocalidadTodasCodigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gLocalidadTodasItemCantidad - 1)))
                {
                    return this.agLocalidadTodas[this.IndiceItem].codigoLocalidad;
                }
                return 0;
            }
        }

        [DispId(0x275)]
        int WSAFIPFE._Factura.gLocalidadTodasCodigoProvincia
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gLocalidadTodasItemCantidad - 1)))
                {
                    return this.agLocalidadTodas[this.IndiceItem].codigoProvincia;
                }
                return 0;
            }
        }

        [DispId(0x274)]
        string WSAFIPFE._Factura.gLocalidadTodasDescripcion
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gLocalidadTodasItemCantidad - 1)))
                {
                    return this.agLocalidadTodas[this.IndiceItem].descripcionLocalidad;
                }
                return "";
            }
        }

        [DispId(630)]
        string WSAFIPFE._Factura.gLocalidadTodasDescripcionProvincia
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gLocalidadTodasItemCantidad - 1)))
                {
                    return this.agLocalidadTodas[this.IndiceItem].descripcionProvincia;
                }
                return "";
            }
        }

        [DispId(0xa8)]
        int WSAFIPFE._Factura.gLocalidadTodasItemCantidad
        {
            get
            {
                return this.igLocalidadTodasItemCantidad;
            }
            set
            {
                if (value == 0)
                {
                    this.igLocalidadTodasItemCantidad = value;
                    this.agLocalidadTodas = new gLocalidadTodas[(value - 1) + 1];
                }
                else
                {
                    this.igLocalidadTodasItemCantidad = value;
                    this.agLocalidadTodas = (gLocalidadTodas[]) Microsoft.VisualBasic.CompilerServices.Utils.CopyArray((Array) this.agLocalidadTodas, new gLocalidadTodas[(value - 1) + 1]);
                }
            }
        }

        [DispId(0x26f)]
        int WSAFIPFE._Factura.gProvinciaCodigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gProvinciaItemCantidad - 1)))
                {
                    return this.agProvincia[this.IndiceItem].codigoProvincia;
                }
                return 0;
            }
        }

        [DispId(0x270)]
        string WSAFIPFE._Factura.gProvinciaDescripcion
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.gProvinciaItemCantidad - 1)))
                {
                    return this.agProvincia[this.IndiceItem].descripcionProvincia;
                }
                return "";
            }
        }

        [DispId(0xa6)]
        int WSAFIPFE._Factura.gProvinciaItemCantidad
        {
            get
            {
                return this.igProvinciaItemCantidad;
            }
            set
            {
                this.igProvinciaItemCantidad = value;
                this.agProvincia = new gProvincia[(value - 1) + 1];
            }
        }

        [DispId(0x199)]
        string WSAFIPFE._Factura.gRespuestaDummyAuthServer
        {
            get
            {
                return this.strgRespuestaDummyAuthServer;
            }
        }

        [DispId(410)]
        string WSAFIPFE._Factura.gRespuestaDummyDbServer
        {
            get
            {
                return this.strgRespuestaDummyDbServer;
            }
        }

        [DispId(0x198)]
        string WSAFIPFE._Factura.gRespuetaDummyAppServer
        {
            get
            {
                return this.strgRespuestaDummyAppServer;
            }
        }

        [DispId(0x16e)]
        string WSAFIPFE._Factura.gsign
        {
            get
            {
                return this.strgSign;
            }
            set
            {
                this.strgSign = value;
            }
        }

        [DispId(0x6d)]
        bool WSAFIPFE._Factura.gTicketEsValido
        {
            get
            {
                if (!this.gTicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.gTicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        [DispId(0x145)]
        DateTime WSAFIPFE._Factura.gTicketHora
        {
            get
            {
                return this.tgTicketHora;
            }
        }

        [DispId(0x14f)]
        DateTime WSAFIPFE._Factura.gTicketHoraVencimiento
        {
            get
            {
                return this.tgTicketHoraVencimiento;
            }
        }

        [DispId(0x159)]
        bool WSAFIPFE._Factura.gTicketValido
        {
            get
            {
                return this.bgTicketValido;
            }
        }

        [DispId(0x164)]
        string WSAFIPFE._Factura.gtoken
        {
            get
            {
                return this.strgToken;
            }
            set
            {
                this.strgToken = value;
            }
        }

        [DispId(0x171)]
        string WSAFIPFE._Factura.Identificador
        {
            get
            {
                return this.uIdentificador.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.uIdentificador = Conversions.ToLong(value);
            }
        }

        [DispId(0x1d1)]
        int WSAFIPFE._Factura.indice
        {
            get
            {
                return this.iIndice;
            }
            set
            {
                this.iIndice = value;
            }
        }

        [DispId(0x9a)]
        int WSAFIPFE._Factura.IndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        [DispId(2)]
        bool WSAFIPFE._Factura.LicenciaArchivoValido
        {
            get
            {
                if (this.oLicencia == null)
                {
                    return false;
                }
                return true;
            }
        }

        [DispId(3)]
        string WSAFIPFE._Factura.LicenciaCodigo
        {
            get
            {
                if (this.Licencia != null)
                {
                    return this.Licencia.Codigo;
                }
                return "";
            }
        }

        [DispId(4)]
        string WSAFIPFE._Factura.LicenciaDatos
        {
            get
            {
                if (this.Licencia != null)
                {
                    return this.Licencia.Datos;
                }
                return "";
            }
        }

        [DispId(5)]
        bool WSAFIPFE._Factura.LicenciaDatosValida
        {
            get
            {
                if (this.Licencia == null)
                {
                    return false;
                }
                return (this.LicenciaDatos.Trim() == this.cuit.Trim());
            }
        }

        [DispId(6)]
        DateTime WSAFIPFE._Factura.LicenciaFecha
        {
            get
            {
                if (this.Licencia != null)
                {
                    return this.Licencia.Fecha;
                }
                return Conversions.ToDate("01/01/1900");
            }
        }

        [DispId(7)]
        public bool this[DateTime dFecha]
        {
            get
            {
                if (this.Licencia == null)
                {
                    return false;
                }
                if (DateTime.Compare(dFecha, this.Licencia.Hasta) > 0)
                {
                    return false;
                }
                return true;
            }
        }

        [DispId(8)]
        DateTime WSAFIPFE._Factura.LicenciaHasta
        {
            get
            {
                if (this.Licencia != null)
                {
                    return this.Licencia.Hasta;
                }
                return Conversions.ToDate("01/01/1900");
            }
        }

        [DispId(10)]
        int WSAFIPFE._Factura.LicenciaLimite
        {
            get
            {
                if (this.Licencia != null)
                {
                    return this.Licencia.Limite;
                }
                return 0;
            }
        }

        [DispId(0x7b)]
        bool WSAFIPFE._Factura.LicenciaLote
        {
            get
            {
                return ((0x10 & this.LicenciaValor) == 0x10);
            }
        }

        [DispId(11)]
        int WSAFIPFE._Factura.LicenciaUsado
        {
            get
            {
                if (this.Licencia != null)
                {
                    return this.Licencia.Usado;
                }
                return 0;
            }
        }

        [DispId(0x70)]
        bool WSAFIPFE._Factura.LicenciaValida
        {
            get
            {
                return (((2 & this.LicenciaValor) == 2) & this.LicenciaDatosValida);
            }
        }

        [DispId(9)]
        int WSAFIPFE._Factura.LicenciaValor
        {
            get
            {
                if (this.Licencia != null)
                {
                    return this.Licencia.valor;
                }
                return 0;
            }
        }

        [DispId(0x174)]
        modoFiscal WSAFIPFE._Factura.Modo
        {
            get
            {
                return this.iModo;
            }
            set
            {
                this.iModo = value;
            }
        }

        [DispId(0x193)]
        string WSAFIPFE._Factura.mRespuestaDummyAuthServer
        {
            get
            {
                return this.strmRespuestaDummyAuthServer;
            }
        }

        [DispId(0x194)]
        string WSAFIPFE._Factura.mRespuestaDummyDbServer
        {
            get
            {
                return this.strmRespuestaDummyDbServer;
            }
        }

        [DispId(0x192)]
        string WSAFIPFE._Factura.mRespuetaDummyAppServer
        {
            get
            {
                return this.strmRespuestaDummyAppServer;
            }
        }

        [DispId(0x16c)]
        string WSAFIPFE._Factura.msign
        {
            get
            {
                return this.strmSign;
            }
            set
            {
                this.strmSign = value;
            }
        }

        [DispId(0x6a)]
        bool WSAFIPFE._Factura.mTicketEsValido
        {
            get
            {
                if (!this.mTicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.mTicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        [DispId(0x143)]
        DateTime WSAFIPFE._Factura.mTicketHora
        {
            get
            {
                return this.tmTicketHora;
            }
        }

        [DispId(0x14d)]
        DateTime WSAFIPFE._Factura.mTicketHoraVencimiento
        {
            get
            {
                return this.tmTicketHoraVencimiento;
            }
        }

        [DispId(0x157)]
        bool WSAFIPFE._Factura.mTicketValido
        {
            get
            {
                return this.bmTicketValido;
            }
        }

        [DispId(0x162)]
        string WSAFIPFE._Factura.mtoken
        {
            get
            {
                return this.strmToken;
            }
            set
            {
                this.strmToken = value;
            }
        }

        [DispId(0x1d4)]
        string WSAFIPFE._Factura.NombreServicio
        {
            get
            {
                return this.strServicio;
            }
            set
            {
                this.strServicio = value;
            }
        }

        [DispId(0x79)]
        bool WSAFIPFE._Factura.OLicenciaValida
        {
            get
            {
                return (((0x80 & this.LicenciaValor) == 0x80) & this.LicenciaDatosValida);
            }
        }

        [DispId(0x19c)]
        string WSAFIPFE._Factura.oRespuestaDummyAuthServer
        {
            get
            {
                return this.stroRespuestaDummyAuthServer;
            }
        }

        [DispId(0x19d)]
        string WSAFIPFE._Factura.oRespuestaDummyDbServer
        {
            get
            {
                return this.stroRespuestaDummyDbServer;
            }
        }

        [DispId(0x19b)]
        string WSAFIPFE._Factura.oRespuetaDummyAppServer
        {
            get
            {
                return this.stroRespuestaDummyAppServer;
            }
        }

        [DispId(0x16f)]
        string WSAFIPFE._Factura.osign
        {
            get
            {
                return this.stroSign;
            }
            set
            {
                this.stroSign = value;
            }
        }

        [DispId(0x146)]
        DateTime WSAFIPFE._Factura.oTicketHora
        {
            get
            {
                return this.toTicketHora;
            }
        }

        [DispId(0x150)]
        DateTime WSAFIPFE._Factura.oTicketHoraVencimiento
        {
            get
            {
                return this.toTicketHoraVencimiento;
            }
        }

        [DispId(0x15a)]
        bool WSAFIPFE._Factura.oTicketValido
        {
            get
            {
                return this.boTicketValido;
            }
        }

        [DispId(0x165)]
        string WSAFIPFE._Factura.otoken
        {
            get
            {
                return this.stroToken;
            }
            set
            {
                this.stroToken = value;
            }
        }

        [DispId(0x18)]
        int WSAFIPFE._Factura.paso
        {
            get
            {
                return this.iPaso;
            }
            set
            {
                this.iPaso = value;
            }
        }

        [DispId(0x80)]
        int WSAFIPFE._Factura.PerCode
        {
            get
            {
                return this.iPerCode;
            }
        }

        [DispId(0x81)]
        string WSAFIPFE._Factura.PerCodeSt
        {
            get
            {
                return this.iPerCode.ToString();
            }
        }

        [DispId(0x7c)]
        string WSAFIPFE._Factura.Permsg
        {
            get
            {
                return this.strPermsg;
            }
        }

        [DispId(13)]
        string WSAFIPFE._Factura.ProxyDomain
        {
            get
            {
                return this.strProxyDomain;
            }
            set
            {
                this.strProxyDomain = value;
            }
        }

        [DispId(14)]
        string WSAFIPFE._Factura.ProxyHost
        {
            get
            {
                return this.strProxyHost;
            }
            set
            {
                this.strProxyHost = value;
            }
        }

        [DispId(15)]
        int WSAFIPFE._Factura.ProxyPort
        {
            get
            {
                return this.strProxyPort;
            }
            set
            {
                this.strProxyPort = value;
            }
        }

        [DispId(12)]
        string WSAFIPFE._Factura.ProxyUserName
        {
            get
            {
                return this.strProxyUserName;
            }
            set
            {
                this.strProxyUserName = value;
            }
        }

        [DispId(0x10)]
        string WSAFIPFE._Factura.ProxyUserPassword
        {
            get
            {
                return this.strProxyUserPassword;
            }
            set
            {
                this.strProxyUserPassword = value;
            }
        }

        [DispId(0x177)]
        string WSAFIPFE._Factura.RespuestaDummyAuthServer
        {
            get
            {
                return this.strRespuestaDummyAuthServer;
            }
        }

        [DispId(0x178)]
        string WSAFIPFE._Factura.RespuestaDummyDbServer
        {
            get
            {
                return this.strRespuestaDummyDbServer;
            }
        }

        [DispId(0x176)]
        string WSAFIPFE._Factura.RespuetaDummyAppServer
        {
            get
            {
                return this.strRespuestaDummyAppServer;
            }
        }

        [DispId(1)]
        string WSAFIPFE._Factura.revision
        {
            get
            {
                return FileVersionInfo.GetVersionInfo(Assembly.GetExecutingAssembly().Location).FileVersion;
            }
        }

        [DispId(0x175)]
        string WSAFIPFE._Factura.RutaArchivoCertificado
        {
            get
            {
                return this.strRutaArthivoCertificado;
            }
            set
            {
                this.strRutaArthivoCertificado = value;
            }
        }

        [DispId(0xe9)]
        int WSAFIPFE._Factura.scbte_nro
        {
            get
            {
                return this.isCbte_numero;
            }
            set
            {
                this.isCbte_numero = value;
            }
        }

        [DispId(0x86)]
        int WSAFIPFE._Factura.serrcode
        {
            get
            {
                return this.iserrcode;
            }
        }

        [DispId(0x87)]
        string WSAFIPFE._Factura.serrcodeST
        {
            get
            {
                return this.iserrcode.ToString();
            }
        }

        [DispId(0x7f)]
        string WSAFIPFE._Factura.serrmsg
        {
            get
            {
                return this.strserrmsg;
            }
        }

        [DispId(0x3d)]
        int WSAFIPFE._Factura.sEventCode
        {
            get
            {
                return this.isEventCode;
            }
        }

        [DispId(0x43)]
        string WSAFIPFE._Factura.sEventMsg
        {
            get
            {
                return this.strsEventMsg;
            }
        }

        [DispId(250)]
        string WSAFIPFE._Factura.sFecha_cae
        {
            get
            {
                return this.strsFecha_cae;
            }
            set
            {
                this.strsFecha_cae = value;
            }
        }

        [DispId(0xf7)]
        string WSAFIPFE._Factura.sFecha_cbte
        {
            get
            {
                return this.strsFecha_cbte;
            }
            set
            {
                this.strsFecha_cbte = value;
            }
        }

        [DispId(0xf9)]
        string WSAFIPFE._Factura.sFecha_cbte_cae
        {
            get
            {
                return this.strsFecha_cbte_cae;
            }
            set
            {
                this.strsFecha_cbte_cae = value;
            }
        }

        [DispId(0xf8)]
        string WSAFIPFE._Factura.sFecha_cbte_orig
        {
            get
            {
                return this.strsFecha_cbte_orig;
            }
            set
            {
                this.strsFecha_cbte_orig = value;
            }
        }

        [DispId(0x167)]
        string WSAFIPFE._Factura.sign
        {
            get
            {
                return this.strSign;
            }
            set
            {
                this.strSign = value;
            }
        }

        [DispId(0xf2)]
        double WSAFIPFE._Factura.sImp_iibb
        {
            get
            {
                return this.isimp_iibb;
            }
            set
            {
                this.isimp_iibb = value;
            }
        }

        [DispId(0xf3)]
        double WSAFIPFE._Factura.sImp_internos
        {
            get
            {
                return this.isImp_internos;
            }
            set
            {
                this.isImp_internos = value;
            }
        }

        [DispId(0xf5)]
        double WSAFIPFE._Factura.sImp_moneda_ctz
        {
            get
            {
                return this.isImp_moneda_ctz;
            }
            set
            {
                this.isImp_moneda_ctz = value;
            }
        }

        [DispId(0xf4)]
        string WSAFIPFE._Factura.sImp_moneda_id
        {
            get
            {
                return this.isImp_moneda_id;
            }
            set
            {
                this.isImp_moneda_id = value;
            }
        }

        [DispId(0xec)]
        double WSAFIPFE._Factura.sImp_neto
        {
            get
            {
                return this.isimp_neto;
            }
            set
            {
                this.isimp_neto = value;
            }
        }

        [DispId(0xef)]
        double WSAFIPFE._Factura.simp_op_ex
        {
            get
            {
                return this.isimp_op_ex;
            }
            set
            {
                this.isimp_op_ex = value;
            }
        }

        [DispId(0xf6)]
        double WSAFIPFE._Factura.sImp_otrib_prov
        {
            get
            {
                return this.isImp_otrib_prov;
            }
            set
            {
                this.isImp_otrib_prov = value;
            }
        }

        [DispId(240)]
        double WSAFIPFE._Factura.sImp_perc
        {
            get
            {
                return this.isImp_perc;
            }
            set
            {
                this.isImp_perc = value;
            }
        }

        [DispId(0xf1)]
        double WSAFIPFE._Factura.sImp_perc_mun
        {
            get
            {
                return this.isImp_perc_mun;
            }
            set
            {
                this.isImp_perc_mun = value;
            }
        }

        [DispId(0xea)]
        double WSAFIPFE._Factura.sImp_total
        {
            get
            {
                return this.isimp_total;
            }
            set
            {
                this.isimp_total = value;
            }
        }

        [DispId(0xeb)]
        double WSAFIPFE._Factura.sImp_total_conc
        {
            get
            {
                return this.isimp_total_conc;
            }
            set
            {
                this.isimp_total_conc = value;
            }
        }

        [DispId(0xed)]
        double WSAFIPFE._Factura.simpto_liq
        {
            get
            {
                return this.isimpto_liq;
            }
            set
            {
                this.isimpto_liq = value;
            }
        }

        [DispId(0xee)]
        double WSAFIPFE._Factura.simpto_liq_rni
        {
            get
            {
                return this.isimpto_liq_rni;
            }
            set
            {
                this.isimpto_liq_rni = value;
            }
        }

        [DispId(0xa1)]
        int WSAFIPFE._Factura.sIndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        [DispId(0xad)]
        int WSAFIPFE._Factura.sItemCantidad
        {
            get
            {
                return this.iItemCantidad;
            }
            set
            {
                this.iItemCantidad = value;
                this.asItem = new sItem[(value - 1) + 1];
            }
        }

        [DispId(0xc6)]
        string WSAFIPFE._Factura.sItemds
        {
            get
            {
                return this.asItem[this.IndiceItem].ds;
            }
            set
            {
                this.asItem[this.IndiceItem].ds = value;
            }
        }

        [DispId(0xc5)]
        string WSAFIPFE._Factura.sItemEndoso
        {
            get
            {
                return this.asItem[this.IndiceItem].endoso;
            }
            set
            {
                this.asItem[this.IndiceItem].endoso = value;
            }
        }

        [DispId(0xc9)]
        double WSAFIPFE._Factura.sItemimp_bonif
        {
            get
            {
                return this.asItem[this.IndiceItem].imp_bonif;
            }
            set
            {
                this.asItem[this.IndiceItem].imp_bonif = value;
            }
        }

        [DispId(0xcb)]
        string WSAFIPFE._Factura.sItemimp_moneda_vaseg
        {
            get
            {
                return this.asItem[this.IndiceItem].imp_moneda_vaseg;
            }
            set
            {
                this.asItem[this.IndiceItem].imp_moneda_vaseg = value;
            }
        }

        [DispId(0xca)]
        double WSAFIPFE._Factura.sItemimp_total
        {
            get
            {
                return this.asItem[this.IndiceItem].imp_total;
            }
            set
            {
                this.asItem[this.IndiceItem].imp_total = value;
            }
        }

        [DispId(0xcc)]
        double WSAFIPFE._Factura.sItemimp_valor_aseg
        {
            get
            {
                return this.asItem[this.IndiceItem].imp_valor_aseg;
            }
            set
            {
                this.asItem[this.IndiceItem].imp_valor_aseg = value;
            }
        }

        [DispId(0xcd)]
        int WSAFIPFE._Factura.sItemIva_id
        {
            get
            {
                return this.asItem[this.IndiceItem].iva_id;
            }
            set
            {
                this.asItem[this.IndiceItem].iva_id = value;
            }
        }

        [DispId(0xc4)]
        string WSAFIPFE._Factura.sItemPoliza
        {
            get
            {
                return this.asItem[this.IndiceItem].poliza;
            }
            set
            {
                this.asItem[this.IndiceItem].poliza = value;
            }
        }

        [DispId(200)]
        double WSAFIPFE._Factura.sItemprecio_uni
        {
            get
            {
                return this.asItem[this.IndiceItem].precio_uni;
            }
            set
            {
                this.asItem[this.IndiceItem].precio_uni = value;
            }
        }

        [DispId(0xc7)]
        double WSAFIPFE._Factura.sItemqty
        {
            get
            {
                return this.asItem[this.IndiceItem].qty;
            }
            set
            {
                this.asItem[this.IndiceItem].qty = value;
            }
        }

        [DispId(0x7a)]
        bool WSAFIPFE._Factura.sLicenciaValida
        {
            get
            {
                return (((8 & this.LicenciaValor) == 8) & this.LicenciaDatosValida);
            }
        }

        [DispId(0x1f9)]
        string WSAFIPFE._Factura.sMonedaDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sMonedaItemCantidad - 1)))
                {
                    return this.aSMoneda[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(0x1f8)]
        string WSAFIPFE._Factura.sMonedaId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sMonedaItemCantidad - 1)))
                {
                    return this.aSMoneda[this.IndiceItem].id;
                }
                return "";
            }
        }

        [DispId(0x21)]
        int WSAFIPFE._Factura.sMonedaItemCantidad
        {
            get
            {
                return this.isMonedaItemCantidad;
            }
        }

        [DispId(0x1fa)]
        string WSAFIPFE._Factura.sMonedaVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sMonedaItemCantidad - 1)))
                {
                    return this.aSMoneda[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x1fb)]
        string WSAFIPFE._Factura.sMonedaVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sMonedaItemCantidad - 1)))
                {
                    return this.aSMoneda[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        [DispId(230)]
        string WSAFIPFE._Factura.sNro_doc
        {
            get
            {
                return this.lsnro_doc.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.lsnro_doc = Conversions.ToLong(value);
            }
        }

        [DispId(0xe8)]
        int WSAFIPFE._Factura.sPunto_vta
        {
            get
            {
                return this.ispunto_vta;
            }
            set
            {
                this.ispunto_vta = value;
            }
        }

        [DispId(0x4d)]
        string WSAFIPFE._Factura.sRespuestaCAE
        {
            get
            {
                return this.strsRespuestaCAE;
            }
        }

        [DispId(0x4c)]
        int WSAFIPFE._Factura.sRespuestaCbte_numero
        {
            get
            {
                return this.isRespuestaCbte_numero;
            }
        }

        [DispId(0x19f)]
        string WSAFIPFE._Factura.sRespuestaDummyAuthServer
        {
            get
            {
                return this.strsRespuestaDummyAuthServer;
            }
        }

        [DispId(0x1a0)]
        string WSAFIPFE._Factura.sRespuestaDummyDbServer
        {
            get
            {
                return this.strsRespuestaDummyDbServer;
            }
        }

        [DispId(0x4e)]
        string WSAFIPFE._Factura.sRespuestaFch_cbte
        {
            get
            {
                return this.strsRespuestaFch_cbte;
            }
        }

        [DispId(0x40)]
        string WSAFIPFE._Factura.sRespuestaFch_venc_cae
        {
            get
            {
                return this.strsRespuestafch_venc_cae;
            }
        }

        [DispId(0x4b)]
        string WSAFIPFE._Factura.sRespuestaId
        {
            get
            {
                return this.isRespuestaId.ToString();
            }
        }

        [DispId(0x51)]
        string WSAFIPFE._Factura.sRespuestaOBS
        {
            get
            {
                return this.strsRespuestaObs;
            }
        }

        [DispId(80)]
        string WSAFIPFE._Factura.sRespuestaReproceso
        {
            get
            {
                return this.strsRespuestaReProceso;
            }
        }

        [DispId(0x4f)]
        string WSAFIPFE._Factura.sRespuestaResultado
        {
            get
            {
                return this.strsRespuestaResultado;
            }
        }

        [DispId(0x52)]
        string WSAFIPFE._Factura.sRespuestasCUIT
        {
            get
            {
                return this.strsRespuestaCUIT;
            }
        }

        [DispId(0x19e)]
        string WSAFIPFE._Factura.sRespuetaDummyAppServer
        {
            get
            {
                return this.strsRespuestaDummyAppServer;
            }
        }

        [DispId(0x170)]
        string WSAFIPFE._Factura.ssign
        {
            get
            {
                return this.strsSign;
            }
            set
            {
                this.strsSign = value;
            }
        }

        [DispId(110)]
        bool WSAFIPFE._Factura.sTicketEsValido
        {
            get
            {
                if (!this.bsTicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.tsTicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        [DispId(0x147)]
        DateTime WSAFIPFE._Factura.sTicketHora
        {
            get
            {
                return this.tsTicketHora;
            }
        }

        [DispId(0x151)]
        DateTime WSAFIPFE._Factura.sTicketHoraVencimiento
        {
            get
            {
                return this.tsTicketHoraVencimiento;
            }
        }

        [DispId(0x15b)]
        bool WSAFIPFE._Factura.sTicketValido
        {
            get
            {
                return this.bsTicketValido;
            }
        }

        [DispId(0xe7)]
        int WSAFIPFE._Factura.sTipo_cbte
        {
            get
            {
                return this.istipo_cbte;
            }
            set
            {
                this.istipo_cbte = value;
            }
        }

        [DispId(0x261)]
        string WSAFIPFE._Factura.sTipo_cbteDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(0x260)]
        int WSAFIPFE._Factura.sTipo_cbteId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(50)]
        int WSAFIPFE._Factura.sTipo_CbteItemCantidad
        {
            get
            {
                return this.isTipo_CbteItemCantidad;
            }
        }

        [DispId(610)]
        string WSAFIPFE._Factura.sTipo_cbteVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x263)]
        string WSAFIPFE._Factura.sTipo_cbteVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.bTipo_CbteItemCantidad - 1)))
                {
                    return this.aBTipo_cpte[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0x265)]
        string WSAFIPFE._Factura.sTipo_cpteDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipo_CbteItemCantidad - 1)))
                {
                    return this.aSTipo_cpte[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(0x264)]
        int WSAFIPFE._Factura.sTipo_cpteId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipo_CbteItemCantidad - 1)))
                {
                    return this.aSTipo_cpte[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x266)]
        string WSAFIPFE._Factura.sTipo_cpteVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipo_CbteItemCantidad - 1)))
                {
                    return this.aSTipo_cpte[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x267)]
        string WSAFIPFE._Factura.sTipo_cpteVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipo_CbteItemCantidad - 1)))
                {
                    return this.aSTipo_cpte[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0xe5)]
        int WSAFIPFE._Factura.sTipo_Doc
        {
            get
            {
                return this.istipo_doc;
            }
            set
            {
                this.istipo_doc = value;
            }
        }

        [DispId(0x20d)]
        string WSAFIPFE._Factura.sTipoDocDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoDocItemCantidad - 1)))
                {
                    return this.asTipoDoc[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(0x20c)]
        int WSAFIPFE._Factura.sTipoDocID
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoDocItemCantidad - 1)))
                {
                    return this.asTipoDoc[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x39)]
        int WSAFIPFE._Factura.sTipoDocItemCantidad
        {
            get
            {
                return this.isTipoDocItemCantidad;
            }
        }

        [DispId(0x20e)]
        string WSAFIPFE._Factura.sTipoDocVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoDocItemCantidad - 1)))
                {
                    return this.asTipoDoc[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x20f)]
        string WSAFIPFE._Factura.sTipoDocVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoDocItemCantidad - 1)))
                {
                    return this.asTipoDoc[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0x215)]
        string WSAFIPFE._Factura.sTipoIvaDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoIvaItemCantidad - 1)))
                {
                    return this.asTipoIva[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(0x214)]
        int WSAFIPFE._Factura.sTipoIvaId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoIvaItemCantidad - 1)))
                {
                    return this.asTipoIva[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x35)]
        int WSAFIPFE._Factura.sTipoIvaItemCantidad
        {
            get
            {
                return this.isTipoIvaItemCantidad;
            }
        }

        [DispId(0x216)]
        string WSAFIPFE._Factura.sTipoIvaVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoIvaItemCantidad - 1)))
                {
                    return this.asTipoIva[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x217)]
        string WSAFIPFE._Factura.sTipoIvaVig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.sTipoIvaItemCantidad - 1)))
                {
                    return this.aSMoneda[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0x166)]
        string WSAFIPFE._Factura.stoken
        {
            get
            {
                return this.strsToken;
            }
            set
            {
                this.strsToken = value;
            }
        }

        [DispId(0x65)]
        bool WSAFIPFE._Factura.TicketEsValido
        {
            get
            {
                if (!this.TicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.TicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        [DispId(0x13e)]
        DateTime WSAFIPFE._Factura.TicketHora
        {
            get
            {
                return this.tTicketHora;
            }
        }

        [DispId(0x148)]
        DateTime WSAFIPFE._Factura.TicketHoraVencimiento
        {
            get
            {
                return this.tTicketHoraVencimiento;
            }
        }

        [DispId(0x152)]
        bool WSAFIPFE._Factura.TicketValido
        {
            get
            {
                return this.lTicketValido;
            }
        }

        [DispId(0x6f)]
        int WSAFIPFE._Factura.TimeOut
        {
            get
            {
                return this.iTimeOut;
            }
            set
            {
                this.iTimeOut = value;
            }
        }

        [DispId(0x15d)]
        string WSAFIPFE._Factura.token
        {
            get
            {
                return this.strToken;
            }
            set
            {
                this.strToken = value;
            }
        }

        [DispId(370)]
        string WSAFIPFE._Factura.UltimoMensajeError
        {
            get
            {
                return this.strUltimoMensajeError;
            }
        }

        [DispId(0x173)]
        int WSAFIPFE._Factura.UltimoNumeroError
        {
            get
            {
                return this.iUltimoNumeroError;
            }
        }

        [DispId(0x10c)]
        long WSAFIPFE._Factura.xCbte_nro
        {
            get
            {
                return this.ixCbte_nro;
            }
            set
            {
                this.ixCbte_nro = value;
            }
        }

        [DispId(0x10d)]
        string WSAFIPFE._Factura.xCbte_nroS
        {
            get
            {
                return this.ixCbte_nro.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.ixCbte_nro = Conversions.ToLong(value);
            }
        }

        [DispId(0x112)]
        string WSAFIPFE._Factura.xCliente
        {
            get
            {
                return this.strxCliente;
            }
            set
            {
                this.strxCliente = value;
            }
        }

        [DispId(0xb8)]
        int WSAFIPFE._Factura.xCMPS_ASOC_cbte_nro
        {
            get
            {
                return (int) this.axCmps_asocs[this.xIndiceItem].cbte_nro;
            }
            set
            {
                this.axCmps_asocs[this.xIndiceItem].cbte_nro = value;
            }
        }

        [DispId(0xb9)]
        string WSAFIPFE._Factura.xCMPS_ASOC_cbte_nroS
        {
            get
            {
                return this.axCmps_asocs[this.xIndiceItem].cbte_nro.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.axCmps_asocs[this.xIndiceItem].cbte_nro = Conversions.ToLong(value);
            }
        }

        [DispId(0xb7)]
        int WSAFIPFE._Factura.xCMPS_ASOC_cbte_punto_venta
        {
            get
            {
                return this.axCmps_asocs[this.xIndiceItem].cbte_tipo;
            }
            set
            {
                this.axCmps_asocs[this.xIndiceItem].cbte_tipo = value;
            }
        }

        [DispId(0xb6)]
        int WSAFIPFE._Factura.xCMPS_ASOC_cbte_tipo
        {
            get
            {
                return this.axCmps_asocs[this.xIndiceItem].cbte_punto_vta;
            }
            set
            {
                this.axCmps_asocs[this.xIndiceItem].cbte_punto_vta = value;
            }
        }

        [DispId(0xac)]
        int WSAFIPFE._Factura.xCmps_asocCantidad
        {
            get
            {
                return this.ixCmps_asocCantidad;
            }
            set
            {
                this.ixCmps_asocCantidad = value;
                this.axCmps_asocs = new xCmps_asoc[(value - 1) + 1];
            }
        }

        [DispId(0x1e9)]
        string WSAFIPFE._Factura.xCuit_dst_cuit
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xCuitItemCantidad - 1)))
                {
                    return this.axPaisCuit[this.IndiceItem].cuit;
                }
                return "";
            }
        }

        [DispId(490)]
        string WSAFIPFE._Factura.xCuit_dst_ds
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xCuitItemCantidad - 1)))
                {
                    return this.axPaisCuit[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(0x113)]
        long WSAFIPFE._Factura.xCuit_pais_cliente
        {
            get
            {
                return this.ixCuit_pais_cliente;
            }
            set
            {
                this.ixCuit_pais_cliente = value;
            }
        }

        [DispId(0x114)]
        string WSAFIPFE._Factura.xCuit_pais_clienteS
        {
            get
            {
                return this.ixCuit_pais_cliente.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.ixCuit_pais_cliente = Conversions.ToLong(value);
            }
        }

        [DispId(0x20)]
        int WSAFIPFE._Factura.xCuitItemCantidad
        {
            get
            {
                return this.ixCuitItemCantidad;
            }
        }

        [DispId(0x1db)]
        string WSAFIPFE._Factura.xDireccionServicioURL
        {
            get
            {
                return this.cxDireccionServicioURL;
            }
            set
            {
                this.cxDireccionServicioURL = value;
            }
        }

        [DispId(0x115)]
        string WSAFIPFE._Factura.xDomicilio_cliente
        {
            get
            {
                return this.strxDomicilio_cliente;
            }
            set
            {
                this.strxDomicilio_cliente = value;
            }
        }

        [DispId(0x111)]
        int WSAFIPFE._Factura.xDst_cmp
        {
            get
            {
                return this.ixDst_cmp;
            }
            set
            {
                this.ixDst_cmp = value;
            }
        }

        [DispId(0x83)]
        int WSAFIPFE._Factura.xerrcode
        {
            get
            {
                return this.ixerrcode;
            }
        }

        [DispId(0x85)]
        string WSAFIPFE._Factura.xerrcodeST
        {
            get
            {
                return this.ixerrcode.ToString();
            }
        }

        [DispId(0x7e)]
        string WSAFIPFE._Factura.xerrmsg
        {
            get
            {
                return this.strxerrmsg;
            }
        }

        [DispId(60)]
        int WSAFIPFE._Factura.xEventCode
        {
            get
            {
                return this.ixEventCode;
            }
        }

        [DispId(0x42)]
        string WSAFIPFE._Factura.xEventMsg
        {
            get
            {
                return this.strxEventMsg;
            }
        }

        [DispId(0x109)]
        string WSAFIPFE._Factura.xFecha_cbte
        {
            get
            {
                return this.strxFecha_cbte;
            }
            set
            {
                this.strxFecha_cbte = value;
            }
        }

        [DispId(0x11e)]
        string WSAFIPFE._Factura.xForma_pago
        {
            get
            {
                return this.strxForma_pago;
            }
            set
            {
                this.strxForma_pago = value;
            }
        }

        [DispId(0x116)]
        string WSAFIPFE._Factura.xId_impositivo
        {
            get
            {
                return this.strxId_impositivo;
            }
            set
            {
                this.strxId_impositivo = value;
            }
        }

        [DispId(0x121)]
        string WSAFIPFE._Factura.xIdioma_cbte
        {
            get
            {
                return this.strxIdioma_cbte;
            }
            set
            {
                this.strxIdioma_cbte = value;
            }
        }

        [DispId(0x1ec)]
        string WSAFIPFE._Factura.xIdioma_idi_ds
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIdiomaItemCantidad - 1)))
                {
                    return this.axIdioma[this.IndiceItem].idi_ds;
                }
                return "";
            }
        }

        [DispId(0x1eb)]
        string WSAFIPFE._Factura.xIdioma_idi_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIdiomaItemCantidad - 1)))
                {
                    return this.axIdioma[this.IndiceItem].idi_id;
                }
                return "";
            }
        }

        [DispId(0x1ed)]
        string WSAFIPFE._Factura.xIdioma_idi_Vig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIdiomaItemCantidad - 1)))
                {
                    return this.axIdioma[this.IndiceItem].idi_Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x1ee)]
        string WSAFIPFE._Factura.xIdioma_idi_Vig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIdiomaItemCantidad - 1)))
                {
                    return this.axIdioma[this.IndiceItem].idi_Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0x1c)]
        int WSAFIPFE._Factura.xIdiomaItemCantidad
        {
            get
            {
                return this.ixIdiomaItemCantidad;
            }
        }

        [DispId(0x11c)]
        double WSAFIPFE._Factura.xImp_total
        {
            get
            {
                return this.ixImp_total;
            }
            set
            {
                this.ixImp_total = value;
            }
        }

        [DispId(0x11f)]
        string WSAFIPFE._Factura.xIncoTerms
        {
            get
            {
                return this.strxIncoterms;
            }
            set
            {
                this.strxIncoterms = value;
            }
        }

        [DispId(0x120)]
        string WSAFIPFE._Factura.xIncoTerms_ds
        {
            get
            {
                return this.strxIncoterm_ds;
            }
            set
            {
                this.strxIncoterm_ds = value;
            }
        }

        [DispId(0x1f0)]
        string WSAFIPFE._Factura.xIncoTErms_inc_ds
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIncoTermsItemCantidad - 1)))
                {
                    return this.axIncoTerms[this.IndiceItem].inc_ds;
                }
                return "";
            }
        }

        [DispId(0x1ef)]
        string WSAFIPFE._Factura.xIncoTErms_inc_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIncoTermsItemCantidad - 1)))
                {
                    return this.axIncoTerms[this.IndiceItem].inc_id;
                }
                return "";
            }
        }

        [DispId(0x1f1)]
        string WSAFIPFE._Factura.xIncoTErms_inc_Vig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIncoTermsItemCantidad - 1)))
                {
                    return this.axIncoTerms[this.IndiceItem].inc_Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x1f2)]
        string WSAFIPFE._Factura.xIncoTErms_inc_Vig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIncoTermsItemCantidad - 1)))
                {
                    return this.axIncoTerms[this.IndiceItem].inc_Vig_hasta;
                }
                return "";
            }
        }

        [DispId(30)]
        int WSAFIPFE._Factura.xIncoTermsItemCantidad
        {
            get
            {
                return this.ixIncoTermsItemCantidad;
            }
        }

        [DispId(0x9c)]
        int WSAFIPFE._Factura.xIndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        [DispId(0xa3)]
        int WSAFIPFE._Factura.xItemCantidad
        {
            get
            {
                return this.ixItemCantidad;
            }
            set
            {
                this.ixItemCantidad = value;
                this.axItems = new xItem[(value - 1) + 1];
            }
        }

        [DispId(0xb0)]
        string WSAFIPFE._Factura.xITEMPro_codigo
        {
            get
            {
                return this.axItems[this.xIndiceItem].pro_codigo;
            }
            set
            {
                this.axItems[this.xIndiceItem].pro_codigo = value;
            }
        }

        [DispId(0xb1)]
        string WSAFIPFE._Factura.xITEMPro_ds
        {
            get
            {
                return this.axItems[this.xIndiceItem].pro_ds;
            }
            set
            {
                this.axItems[this.xIndiceItem].pro_ds = value;
            }
        }

        [DispId(0xb5)]
        double WSAFIPFE._Factura.xITEMPro_precio_item
        {
            get
            {
                return this.axItems[this.xIndiceItem].pro_precio_item;
            }
            set
            {
                this.axItems[this.xIndiceItem].pro_precio_item = value;
            }
        }

        [DispId(180)]
        double WSAFIPFE._Factura.xITEMPro_precio_uni
        {
            get
            {
                return this.axItems[this.xIndiceItem].pro_precio_uni;
            }
            set
            {
                this.axItems[this.xIndiceItem].pro_precio_uni = value;
            }
        }

        [DispId(0xb2)]
        double WSAFIPFE._Factura.xITEMPro_qty
        {
            get
            {
                return this.axItems[this.xIndiceItem].pro_qty;
            }
            set
            {
                this.axItems[this.xIndiceItem].pro_qty = value;
            }
        }

        [DispId(0xb3)]
        int WSAFIPFE._Factura.xITEMPro_umed
        {
            get
            {
                return this.axItems[this.xIndiceItem].pro_umed;
            }
            set
            {
                this.axItems[this.xIndiceItem].pro_umed = value;
            }
        }

        [DispId(0x76)]
        bool WSAFIPFE._Factura.xLicenciaValida
        {
            get
            {
                return (((0x20 & this.LicenciaValor) == 0x20) & this.LicenciaDatosValida);
            }
        }

        [DispId(0x62)]
        string WSAFIPFE._Factura.XMLRequest
        {
            get
            {
                return this.strUltimoPedidoXML;
            }
        }

        [DispId(0x63)]
        string WSAFIPFE._Factura.XMLRequestFirmado
        {
            get
            {
                return this.strUltimoPedidoFirmadoXML;
            }
        }

        [DispId(100)]
        string WSAFIPFE._Factura.XMLResponse
        {
            get
            {
                return this.strUltimaRespuestaXML;
            }
        }

        [DispId(0x119)]
        double WSAFIPFE._Factura.xMoneda_ctz
        {
            get
            {
                return this.ixMoneda_ctz;
            }
            set
            {
                this.ixMoneda_ctz = value;
            }
        }

        [DispId(0x11a)]
        string WSAFIPFE._Factura.xMoneda_ctzS
        {
            get
            {
                return this.ixMoneda_ctz.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.ixMoneda_ctz = Conversions.ToDouble(value);
            }
        }

        [DispId(0x117)]
        string WSAFIPFE._Factura.xMoneda_id
        {
            get
            {
                return this.strxMoneda_Id;
            }
            set
            {
                this.strxMoneda_Id = value;
            }
        }

        [DispId(280)]
        string WSAFIPFE._Factura.xMoneda_idS
        {
            get
            {
                return this.strxMoneda_Id;
            }
            set
            {
                string cFormato = value.Trim();
                if (cFormato.Length < 3)
                {
                    cFormato = "0" + cFormato;
                }
                if (cFormato.Length < 3)
                {
                    cFormato = "0" + cFormato;
                }
                this.strxMoneda_Id = cFormato;
            }
        }

        [DispId(0x1e1)]
        string WSAFIPFE._Factura.xMonedaDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xMonedaItemCantidad - 1)))
                {
                    return this.axMoneda[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(480)]
        string WSAFIPFE._Factura.xMonedaId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xMonedaItemCantidad - 1)))
                {
                    return this.axMoneda[this.IndiceItem].id;
                }
                return "";
            }
        }

        [DispId(0x1a)]
        int WSAFIPFE._Factura.xMonedaItemCantidad
        {
            get
            {
                return this.ixMonedaItemCantidad;
            }
        }

        [DispId(0x1e2)]
        string WSAFIPFE._Factura.xMonedaVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xMonedaItemCantidad - 1)))
                {
                    return this.axMoneda[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x1e3)]
        string WSAFIPFE._Factura.xMonedaVig_HASTA
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xMonedaItemCantidad - 1)))
                {
                    return this.axMoneda[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0x11d)]
        string WSAFIPFE._Factura.xObs
        {
            get
            {
                return this.strxObs;
            }
            set
            {
                this.strxObs = value;
            }
        }

        [DispId(0x11b)]
        string WSAFIPFE._Factura.xObs_comerciales
        {
            get
            {
                return this.strxObs_comerciales;
            }
            set
            {
                this.strxObs_comerciales = value;
            }
        }

        [DispId(0x1e7)]
        string WSAFIPFE._Factura.xPais_dst_codigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xPaisItemCantidad - 1)))
                {
                    return this.axPais[this.IndiceItem].codigo;
                }
                return "";
            }
        }

        [DispId(0x1e8)]
        string WSAFIPFE._Factura.xPais_dst_ds
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xPaisItemCantidad - 1)))
                {
                    return this.axPais[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(0x1f)]
        int WSAFIPFE._Factura.xPaisItemCantidad
        {
            get
            {
                return this.ixPaisItemCantidad;
            }
        }

        [DispId(0xbb)]
        int WSAFIPFE._Factura.xPERMISO_dst_merc
        {
            get
            {
                return this.axPermisos[this.xIndiceItem].dst_merc;
            }
            set
            {
                this.axPermisos[this.xIndiceItem].dst_merc = value;
            }
        }

        [DispId(0x10f)]
        string WSAFIPFE._Factura.xPermiso_existente
        {
            get
            {
                return this.strxPermiso_existente;
            }
            set
            {
                this.strxPermiso_existente = value;
            }
        }

        [DispId(0x110)]
        string WSAFIPFE._Factura.xPermiso_existenteS
        {
            get
            {
                return this.strxPermiso_existente;
            }
            set
            {
                value = value.Trim();
                this.strxPermiso_existente = value;
            }
        }

        [DispId(0xba)]
        string WSAFIPFE._Factura.xPERMISO_id_permiso
        {
            get
            {
                return this.axPermisos[this.xIndiceItem].id_permiso;
            }
            set
            {
                this.axPermisos[this.xIndiceItem].id_permiso = value;
            }
        }

        [DispId(170)]
        int WSAFIPFE._Factura.xPermisoCantidad
        {
            get
            {
                return this.ixPermisoCantidad;
            }
            set
            {
                this.ixPermisoCantidad = value;
                this.axPermisos = new xPermisos[(value - 1) + 1];
            }
        }

        [DispId(0xab)]
        int WSAFIPFE._Factura.xPermisoNoInformar
        {
            get
            {
                return this.ixPermisoNoInformar;
            }
            set
            {
                this.ixPermisoNoInformar = value;
            }
        }

        [DispId(0x1e4)]
        int WSAFIPFE._Factura.xPtoVenta_pve_nro
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xPtoVentaItemCantidad - 1)))
                {
                    return this.axPtoVenta[this.IndiceItem].pvo_nro;
                }
                return Conversions.ToInteger("");
            }
        }

        [DispId(0x1e5)]
        string WSAFIPFE._Factura.xPtoVenta_pvo_bloqueado
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xPtoVentaItemCantidad - 1)))
                {
                    return this.axPtoVenta[this.IndiceItem].pvo_bloqueado;
                }
                return "";
            }
        }

        [DispId(0x1e6)]
        string WSAFIPFE._Factura.xPtoVenta_pvo_fchbaja
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xPtoVentaItemCantidad - 1)))
                {
                    return this.axPtoVenta[this.IndiceItem].pvo_fchbaja;
                }
                return "";
            }
        }

        [DispId(0x1b)]
        int WSAFIPFE._Factura.xPtoVentaItemCantidad
        {
            get
            {
                return this.ixPtoVentaItemCantidad;
            }
        }

        [DispId(0x10a)]
        int WSAFIPFE._Factura.xPunto_vta
        {
            get
            {
                return this.ixPunto_venta;
            }
            set
            {
                this.ixPunto_venta = value;
            }
        }

        [DispId(0x56)]
        string WSAFIPFE._Factura.xRespuestaCAE
        {
            get
            {
                return this.strxRespuestaCAE;
            }
        }

        [DispId(0x60)]
        long WSAFIPFE._Factura.xRespuestacbte_numero
        {
            get
            {
                return this.ixRespuestaCbte_numero;
            }
        }

        [DispId(0x61)]
        string WSAFIPFE._Factura.xRespuestacbte_numeroS
        {
            get
            {
                return this.ixRespuestaCbte_numero.ToString();
            }
        }

        [DispId(0x55)]
        string WSAFIPFE._Factura.xRespuestaCUIT
        {
            get
            {
                return Conversions.ToString(this.strxRespuestaCuit);
            }
        }

        [DispId(0x17d)]
        string WSAFIPFE._Factura.xRespuestaDummyAuthServer
        {
            get
            {
                return this.strxRespuestaDummyAuthServer;
            }
        }

        [DispId(0x17e)]
        string WSAFIPFE._Factura.xRespuestaDummyDbServer
        {
            get
            {
                return this.strxRespuestaDummyDbServer;
            }
        }

        [DispId(0x59)]
        string WSAFIPFE._Factura.xRespuestaFch_cbte
        {
            get
            {
                return this.strxRespuestaFch_cbte;
            }
        }

        [DispId(90)]
        string WSAFIPFE._Factura.xRespuestaFch_cbte_cae
        {
            get
            {
                return this.strxRespuestaFch_cbte_cae;
            }
        }

        [DispId(0x58)]
        string WSAFIPFE._Factura.xRespuestaFch_venc_cae
        {
            get
            {
                return this.strxRespuestaFch_vence_cae;
            }
        }

        [DispId(0x57)]
        string WSAFIPFE._Factura.xRespuestaFch_vence_cae
        {
            get
            {
                return this.strxRespuestaFch_vence_cae;
            }
        }

        [DispId(0x53)]
        long WSAFIPFE._Factura.xRespuestaId
        {
            get
            {
                return this.ixRespuestaId;
            }
        }

        [DispId(0x54)]
        string WSAFIPFE._Factura.xRespuestaIdS
        {
            get
            {
                return this.ixRespuestaId.ToString();
            }
        }

        [DispId(0x13)]
        double WSAFIPFE._Factura.xRespuestaMonedaCtz
        {
            get
            {
                return this.nxRespuestaMonedaCtz;
            }
        }

        [DispId(20)]
        string WSAFIPFE._Factura.xRespuestaMonedaCtzFecha
        {
            get
            {
                return this.strxRespuestaMonedaCtzFecha;
            }
        }

        [DispId(0x5d)]
        string WSAFIPFE._Factura.xRespuestaMotivos_obs
        {
            get
            {
                return this.strxRespuestaMotivos_obs;
            }
        }

        [DispId(0x5f)]
        int WSAFIPFE._Factura.xRespuestapunto_vta
        {
            get
            {
                return this.ixRespuestaPunto_vta;
            }
        }

        [DispId(0x5c)]
        string WSAFIPFE._Factura.xRespuestaReproceso
        {
            get
            {
                return this.strxRespuestaReproceso;
            }
        }

        [DispId(0x5b)]
        string WSAFIPFE._Factura.xRespuestaResultado
        {
            get
            {
                return this.strxRespuestaResultado;
            }
        }

        [DispId(0x5e)]
        int WSAFIPFE._Factura.xRespuestatipo_cbte
        {
            get
            {
                return this.ixRespuestaTipo_cbte;
            }
        }

        [DispId(380)]
        string WSAFIPFE._Factura.xRespuetaDummyAppServer
        {
            get
            {
                return this.strxRespuestaDummyAppServer;
            }
        }

        [DispId(0x169)]
        string WSAFIPFE._Factura.xsign
        {
            get
            {
                return this.strXSign;
            }
            set
            {
                this.strXSign = value;
            }
        }

        [DispId(0x67)]
        bool WSAFIPFE._Factura.xTicketEsValido
        {
            get
            {
                if (!this.xTicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.xTicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        [DispId(320)]
        DateTime WSAFIPFE._Factura.xTicketHora
        {
            get
            {
                return this.txTicketHora;
            }
        }

        [DispId(330)]
        DateTime WSAFIPFE._Factura.xTicketHoraVencimiento
        {
            get
            {
                return this.txTicketHoraVencimiento;
            }
        }

        [DispId(340)]
        bool WSAFIPFE._Factura.xTicketValido
        {
            get
            {
                return this.bxTicketValido;
            }
        }

        [DispId(0x10b)]
        int WSAFIPFE._Factura.xtipo_cbte
        {
            get
            {
                return this.ixTipo_cbte;
            }
            set
            {
                this.ixTipo_cbte = value;
            }
        }

        [DispId(0x221)]
        string WSAFIPFE._Factura.xTipo_cbte_DS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_CbteItemCantidad - 1)))
                {
                    return this.axTipo_cbte[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(0x220)]
        int WSAFIPFE._Factura.xTipo_cbte_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_CbteItemCantidad - 1)))
                {
                    return this.axTipo_cbte[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x222)]
        string WSAFIPFE._Factura.xTipo_cbte_Vig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_CbteItemCantidad - 1)))
                {
                    return this.axTipo_cbte[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x223)]
        string WSAFIPFE._Factura.xTipo_cbte_Vig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_CbteItemCantidad - 1)))
                {
                    return this.axTipo_cbte[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0x23)]
        int WSAFIPFE._Factura.xTipo_CbteItemCantidad
        {
            get
            {
                return this.ixTipo_CbteItemCantidad;
            }
        }

        [DispId(270)]
        int WSAFIPFE._Factura.xtipo_expo
        {
            get
            {
                return this.ixTipo_expo;
            }
            set
            {
                this.ixTipo_expo = value;
            }
        }

        [DispId(500)]
        string WSAFIPFE._Factura.xTipo_expo_tex_ds
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_expoItemCantidad - 1)))
                {
                    return this.axTipo_expo[this.IndiceItem].tex_ds;
                }
                return "";
            }
        }

        [DispId(0x1f3)]
        string WSAFIPFE._Factura.xTipo_expo_tex_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_expoItemCantidad - 1)))
                {
                    return this.axTipo_expo[this.IndiceItem].tex_id;
                }
                return "";
            }
        }

        [DispId(0x1f5)]
        string WSAFIPFE._Factura.xTipo_expo_tex_Vig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_expoItemCantidad - 1)))
                {
                    return this.axTipo_expo[this.IndiceItem].tex_Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x1f6)]
        string WSAFIPFE._Factura.xTipo_expo_tex_Vig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_expoItemCantidad - 1)))
                {
                    return this.axTipo_expo[this.IndiceItem].tex_Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0x1d)]
        int WSAFIPFE._Factura.xTipo_expoItemCantidad
        {
            get
            {
                return this.ixTipo_expoItemCantidad;
            }
        }

        [DispId(0x15f)]
        string WSAFIPFE._Factura.xtoken
        {
            get
            {
                return this.strXToken;
            }
            set
            {
                this.strXToken = value;
            }
        }

        [DispId(0x205)]
        string WSAFIPFE._Factura.xUMed_DS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xUMedItemCantidad - 1)))
                {
                    return this.axUMed[this.IndiceItem].ds;
                }
                return "";
            }
        }

        [DispId(0x204)]
        int WSAFIPFE._Factura.xUMed_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xUMedItemCantidad - 1)))
                {
                    return this.axUMed[this.IndiceItem].id;
                }
                return 0;
            }
        }

        [DispId(0x206)]
        string WSAFIPFE._Factura.xUMed_Vig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xUMedItemCantidad - 1)))
                {
                    return this.axUMed[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        [DispId(0x207)]
        string WSAFIPFE._Factura.xUMed_Vig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xUMedItemCantidad - 1)))
                {
                    return this.axUMed[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        [DispId(0x37)]
        int WSAFIPFE._Factura.xUMedItemCantidad
        {
            get
            {
                return this.ixUMedItemCantidad;
            }
        }

        public long xCbte_nro
        {
            get
            {
                return this.ixCbte_nro;
            }
            set
            {
                this.ixCbte_nro = value;
            }
        }

        public string xCbte_nroS
        {
            get
            {
                return this.ixCbte_nro.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.ixCbte_nro = Conversions.ToLong(value);
            }
        }

        public string xCliente
        {
            get
            {
                return this.strxCliente;
            }
            set
            {
                this.strxCliente = value;
            }
        }

        public int xCMPS_ASOC_cbte_nro
        {
            get
            {
                return (int) this.axCmps_asocs[this.xIndiceItem].cbte_nro;
            }
            set
            {
                this.axCmps_asocs[this.xIndiceItem].cbte_nro = value;
            }
        }

        public string xCMPS_ASOC_cbte_nroS
        {
            get
            {
                return this.axCmps_asocs[this.xIndiceItem].cbte_nro.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.axCmps_asocs[this.xIndiceItem].cbte_nro = Conversions.ToLong(value);
            }
        }

        public int xCMPS_ASOC_cbte_punto_venta
        {
            get
            {
                return this.axCmps_asocs[this.xIndiceItem].cbte_tipo;
            }
            set
            {
                this.axCmps_asocs[this.xIndiceItem].cbte_tipo = value;
            }
        }

        public int xCMPS_ASOC_cbte_tipo
        {
            get
            {
                return this.axCmps_asocs[this.xIndiceItem].cbte_punto_vta;
            }
            set
            {
                this.axCmps_asocs[this.xIndiceItem].cbte_punto_vta = value;
            }
        }

        public int xCmps_asocCantidad
        {
            get
            {
                return this.ixCmps_asocCantidad;
            }
            set
            {
                this.ixCmps_asocCantidad = value;
                this.axCmps_asocs = new xCmps_asoc[(value - 1) + 1];
            }
        }

        public string xCuit_dst_cuit
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xCuitItemCantidad - 1)))
                {
                    return this.axPaisCuit[this.IndiceItem].cuit;
                }
                return "";
            }
        }

        public string xCuit_dst_ds
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xCuitItemCantidad - 1)))
                {
                    return this.axPaisCuit[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public long xCuit_pais_cliente
        {
            get
            {
                return this.ixCuit_pais_cliente;
            }
            set
            {
                this.ixCuit_pais_cliente = value;
            }
        }

        public string xCuit_pais_clienteS
        {
            get
            {
                return this.ixCuit_pais_cliente.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.ixCuit_pais_cliente = Conversions.ToLong(value);
            }
        }

        public int xCuitItemCantidad
        {
            get
            {
                return this.ixCuitItemCantidad;
            }
        }

        public string xDireccionServicioURL
        {
            get
            {
                return this.cxDireccionServicioURL;
            }
            set
            {
                this.cxDireccionServicioURL = value;
            }
        }

        public string xDomicilio_cliente
        {
            get
            {
                return this.strxDomicilio_cliente;
            }
            set
            {
                this.strxDomicilio_cliente = value;
            }
        }

        public int xDst_cmp
        {
            get
            {
                return this.ixDst_cmp;
            }
            set
            {
                this.ixDst_cmp = value;
            }
        }

        public int xerrcode
        {
            get
            {
                return this.ixerrcode;
            }
        }

        public string xerrcodeST
        {
            get
            {
                return this.ixerrcode.ToString();
            }
        }

        public string xerrmsg
        {
            get
            {
                return this.strxerrmsg;
            }
        }

        public int xEventCode
        {
            get
            {
                return this.ixEventCode;
            }
        }

        public string xEventMsg
        {
            get
            {
                return this.strxEventMsg;
            }
        }

        public string xFecha_cbte
        {
            get
            {
                return this.strxFecha_cbte;
            }
            set
            {
                this.strxFecha_cbte = value;
            }
        }

        public string xForma_pago
        {
            get
            {
                return this.strxForma_pago;
            }
            set
            {
                this.strxForma_pago = value;
            }
        }

        public string xId_impositivo
        {
            get
            {
                return this.strxId_impositivo;
            }
            set
            {
                this.strxId_impositivo = value;
            }
        }

        public string xIdioma_cbte
        {
            get
            {
                return this.strxIdioma_cbte;
            }
            set
            {
                this.strxIdioma_cbte = value;
            }
        }

        public string xIdioma_idi_ds
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIdiomaItemCantidad - 1)))
                {
                    return this.axIdioma[this.IndiceItem].idi_ds;
                }
                return "";
            }
        }

        public string xIdioma_idi_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIdiomaItemCantidad - 1)))
                {
                    return this.axIdioma[this.IndiceItem].idi_id;
                }
                return "";
            }
        }

        public string xIdioma_idi_Vig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIdiomaItemCantidad - 1)))
                {
                    return this.axIdioma[this.IndiceItem].idi_Vig_Desde;
                }
                return "";
            }
        }

        public string xIdioma_idi_Vig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIdiomaItemCantidad - 1)))
                {
                    return this.axIdioma[this.IndiceItem].idi_Vig_hasta;
                }
                return "";
            }
        }

        public int xIdiomaItemCantidad
        {
            get
            {
                return this.ixIdiomaItemCantidad;
            }
        }

        public double xImp_total
        {
            get
            {
                return this.ixImp_total;
            }
            set
            {
                this.ixImp_total = value;
            }
        }

        public string xIncoTerms
        {
            get
            {
                return this.strxIncoterms;
            }
            set
            {
                this.strxIncoterms = value;
            }
        }

        public string xIncoTerms_ds
        {
            get
            {
                return this.strxIncoterm_ds;
            }
            set
            {
                this.strxIncoterm_ds = value;
            }
        }

        public string xIncoTErms_inc_ds
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIncoTermsItemCantidad - 1)))
                {
                    return this.axIncoTerms[this.IndiceItem].inc_ds;
                }
                return "";
            }
        }

        public string xIncoTErms_inc_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIncoTermsItemCantidad - 1)))
                {
                    return this.axIncoTerms[this.IndiceItem].inc_id;
                }
                return "";
            }
        }

        public string xIncoTErms_inc_Vig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIncoTermsItemCantidad - 1)))
                {
                    return this.axIncoTerms[this.IndiceItem].inc_Vig_Desde;
                }
                return "";
            }
        }

        public string xIncoTErms_inc_Vig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xIncoTermsItemCantidad - 1)))
                {
                    return this.axIncoTerms[this.IndiceItem].inc_Vig_hasta;
                }
                return "";
            }
        }

        public int xIncoTermsItemCantidad
        {
            get
            {
                return this.ixIncoTermsItemCantidad;
            }
        }

        public int xIndiceItem
        {
            get
            {
                return this.iIndiceItem;
            }
            set
            {
                this.iIndiceItem = value;
            }
        }

        public int xItemCantidad
        {
            get
            {
                return this.ixItemCantidad;
            }
            set
            {
                this.ixItemCantidad = value;
                this.axItems = new xItem[(value - 1) + 1];
            }
        }

        public string xITEMPro_codigo
        {
            get
            {
                return this.axItems[this.xIndiceItem].pro_codigo;
            }
            set
            {
                this.axItems[this.xIndiceItem].pro_codigo = value;
            }
        }

        public string xITEMPro_ds
        {
            get
            {
                return this.axItems[this.xIndiceItem].pro_ds;
            }
            set
            {
                this.axItems[this.xIndiceItem].pro_ds = value;
            }
        }

        public double xITEMPro_precio_item
        {
            get
            {
                return this.axItems[this.xIndiceItem].pro_precio_item;
            }
            set
            {
                this.axItems[this.xIndiceItem].pro_precio_item = value;
            }
        }

        public double xITEMPro_precio_uni
        {
            get
            {
                return this.axItems[this.xIndiceItem].pro_precio_uni;
            }
            set
            {
                this.axItems[this.xIndiceItem].pro_precio_uni = value;
            }
        }

        public double xITEMPro_qty
        {
            get
            {
                return this.axItems[this.xIndiceItem].pro_qty;
            }
            set
            {
                this.axItems[this.xIndiceItem].pro_qty = value;
            }
        }

        public int xITEMPro_umed
        {
            get
            {
                return this.axItems[this.xIndiceItem].pro_umed;
            }
            set
            {
                this.axItems[this.xIndiceItem].pro_umed = value;
            }
        }

        public bool xLicenciaValida
        {
            get
            {
                return (((0x20 & this.LicenciaValor) == 0x20) & this.LicenciaDatosValida);
            }
        }

        public string XMLRequest
        {
            get
            {
                return this.strUltimoPedidoXML;
            }
        }

        public string XMLRequestFirmado
        {
            get
            {
                return this.strUltimoPedidoFirmadoXML;
            }
        }

        public string XMLResponse
        {
            get
            {
                return this.strUltimaRespuestaXML;
            }
        }

        public double xMoneda_ctz
        {
            get
            {
                return this.ixMoneda_ctz;
            }
            set
            {
                this.ixMoneda_ctz = value;
            }
        }

        public string xMoneda_ctzS
        {
            get
            {
                return this.ixMoneda_ctz.ToString();
            }
            set
            {
                if (value == "")
                {
                    value = "0";
                }
                this.ixMoneda_ctz = Conversions.ToDouble(value);
            }
        }

        public string xMoneda_id
        {
            get
            {
                return this.strxMoneda_Id;
            }
            set
            {
                this.strxMoneda_Id = value;
            }
        }

        public string xMoneda_idS
        {
            get
            {
                return this.strxMoneda_Id;
            }
            set
            {
                string cFormato = value.Trim();
                if (cFormato.Length < 3)
                {
                    cFormato = "0" + cFormato;
                }
                if (cFormato.Length < 3)
                {
                    cFormato = "0" + cFormato;
                }
                this.strxMoneda_Id = cFormato;
            }
        }

        public string xMonedaDS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xMonedaItemCantidad - 1)))
                {
                    return this.axMoneda[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public string xMonedaId
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xMonedaItemCantidad - 1)))
                {
                    return this.axMoneda[this.IndiceItem].id;
                }
                return "";
            }
        }

        public int xMonedaItemCantidad
        {
            get
            {
                return this.ixMonedaItemCantidad;
            }
        }

        public string xMonedaVig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xMonedaItemCantidad - 1)))
                {
                    return this.axMoneda[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        public string xMonedaVig_HASTA
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xMonedaItemCantidad - 1)))
                {
                    return this.axMoneda[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        public string xObs
        {
            get
            {
                return this.strxObs;
            }
            set
            {
                this.strxObs = value;
            }
        }

        public string xObs_comerciales
        {
            get
            {
                return this.strxObs_comerciales;
            }
            set
            {
                this.strxObs_comerciales = value;
            }
        }

        public string xPais_dst_codigo
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xPaisItemCantidad - 1)))
                {
                    return this.axPais[this.IndiceItem].codigo;
                }
                return "";
            }
        }

        public string xPais_dst_ds
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xPaisItemCantidad - 1)))
                {
                    return this.axPais[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public int xPaisItemCantidad
        {
            get
            {
                return this.ixPaisItemCantidad;
            }
        }

        public int xPERMISO_dst_merc
        {
            get
            {
                return this.axPermisos[this.xIndiceItem].dst_merc;
            }
            set
            {
                this.axPermisos[this.xIndiceItem].dst_merc = value;
            }
        }

        public string xPermiso_existente
        {
            get
            {
                return this.strxPermiso_existente;
            }
            set
            {
                this.strxPermiso_existente = value;
            }
        }

        public string xPermiso_existenteS
        {
            get
            {
                return this.strxPermiso_existente;
            }
            set
            {
                value = value.Trim();
                this.strxPermiso_existente = value;
            }
        }

        public string xPERMISO_id_permiso
        {
            get
            {
                return this.axPermisos[this.xIndiceItem].id_permiso;
            }
            set
            {
                this.axPermisos[this.xIndiceItem].id_permiso = value;
            }
        }

        public int xPermisoCantidad
        {
            get
            {
                return this.ixPermisoCantidad;
            }
            set
            {
                this.ixPermisoCantidad = value;
                this.axPermisos = new xPermisos[(value - 1) + 1];
            }
        }

        public int xPermisoNoInformar
        {
            get
            {
                return this.ixPermisoNoInformar;
            }
            set
            {
                this.ixPermisoNoInformar = value;
            }
        }

        public int xPtoVenta_pve_nro
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xPtoVentaItemCantidad - 1)))
                {
                    return this.axPtoVenta[this.IndiceItem].pvo_nro;
                }
                return Conversions.ToInteger("");
            }
        }

        public string xPtoVenta_pvo_bloqueado
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xPtoVentaItemCantidad - 1)))
                {
                    return this.axPtoVenta[this.IndiceItem].pvo_bloqueado;
                }
                return "";
            }
        }

        public string xPtoVenta_pvo_fchbaja
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xPtoVentaItemCantidad - 1)))
                {
                    return this.axPtoVenta[this.IndiceItem].pvo_fchbaja;
                }
                return "";
            }
        }

        public int xPtoVentaItemCantidad
        {
            get
            {
                return this.ixPtoVentaItemCantidad;
            }
        }

        public int xPunto_vta
        {
            get
            {
                return this.ixPunto_venta;
            }
            set
            {
                this.ixPunto_venta = value;
            }
        }

        public string xRespuestaCAE
        {
            get
            {
                return this.strxRespuestaCAE;
            }
        }

        public long xRespuestacbte_numero
        {
            get
            {
                return this.ixRespuestaCbte_numero;
            }
        }

        public string xRespuestacbte_numeroS
        {
            get
            {
                return this.ixRespuestaCbte_numero.ToString();
            }
        }

        public string xRespuestaCUIT
        {
            get
            {
                return Conversions.ToString(this.strxRespuestaCuit);
            }
        }

        public string xRespuestaDummyAuthServer
        {
            get
            {
                return this.strxRespuestaDummyAuthServer;
            }
        }

        public string xRespuestaDummyDbServer
        {
            get
            {
                return this.strxRespuestaDummyDbServer;
            }
        }

        public string xRespuestaFch_cbte
        {
            get
            {
                return this.strxRespuestaFch_cbte;
            }
        }

        public string xRespuestaFch_cbte_cae
        {
            get
            {
                return this.strxRespuestaFch_cbte_cae;
            }
        }

        public string xRespuestaFch_venc_cae
        {
            get
            {
                return this.strxRespuestaFch_vence_cae;
            }
        }

        public string xRespuestaFch_vence_cae
        {
            get
            {
                return this.strxRespuestaFch_vence_cae;
            }
        }

        public long xRespuestaId
        {
            get
            {
                return this.ixRespuestaId;
            }
        }

        public string xRespuestaIdS
        {
            get
            {
                return this.ixRespuestaId.ToString();
            }
        }

        public double xRespuestaMonedaCtz
        {
            get
            {
                return this.nxRespuestaMonedaCtz;
            }
        }

        public string xRespuestaMonedaCtzFecha
        {
            get
            {
                return this.strxRespuestaMonedaCtzFecha;
            }
        }

        public string xRespuestaMotivos_obs
        {
            get
            {
                return this.strxRespuestaMotivos_obs;
            }
        }

        public int xRespuestapunto_vta
        {
            get
            {
                return this.ixRespuestaPunto_vta;
            }
        }

        public string xRespuestaReproceso
        {
            get
            {
                return this.strxRespuestaReproceso;
            }
        }

        public string xRespuestaResultado
        {
            get
            {
                return this.strxRespuestaResultado;
            }
        }

        public int xRespuestatipo_cbte
        {
            get
            {
                return this.ixRespuestaTipo_cbte;
            }
        }

        public string xRespuetaDummyAppServer
        {
            get
            {
                return this.strxRespuestaDummyAppServer;
            }
        }

        public string xsign
        {
            get
            {
                return this.strXSign;
            }
            set
            {
                this.strXSign = value;
            }
        }

        public bool xTicketEsValido
        {
            get
            {
                if (!this.xTicketValido)
                {
                    return false;
                }
                return (DateTime.Compare(this.xTicketHoraVencimiento, DateTime.Now) > 0);
            }
        }

        public DateTime xTicketHora
        {
            get
            {
                return this.txTicketHora;
            }
        }

        public DateTime xTicketHoraVencimiento
        {
            get
            {
                return this.txTicketHoraVencimiento;
            }
        }

        public bool xTicketValido
        {
            get
            {
                return this.bxTicketValido;
            }
        }

        public int xtipo_cbte
        {
            get
            {
                return this.ixTipo_cbte;
            }
            set
            {
                this.ixTipo_cbte = value;
            }
        }

        public string xTipo_cbte_DS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_CbteItemCantidad - 1)))
                {
                    return this.axTipo_cbte[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public int xTipo_cbte_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_CbteItemCantidad - 1)))
                {
                    return this.axTipo_cbte[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public string xTipo_cbte_Vig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_CbteItemCantidad - 1)))
                {
                    return this.axTipo_cbte[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        public string xTipo_cbte_Vig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_CbteItemCantidad - 1)))
                {
                    return this.axTipo_cbte[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        public int xTipo_CbteItemCantidad
        {
            get
            {
                return this.ixTipo_CbteItemCantidad;
            }
        }

        public int xtipo_expo
        {
            get
            {
                return this.ixTipo_expo;
            }
            set
            {
                this.ixTipo_expo = value;
            }
        }

        public string xTipo_expo_tex_ds
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_expoItemCantidad - 1)))
                {
                    return this.axTipo_expo[this.IndiceItem].tex_ds;
                }
                return "";
            }
        }

        public string xTipo_expo_tex_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_expoItemCantidad - 1)))
                {
                    return this.axTipo_expo[this.IndiceItem].tex_id;
                }
                return "";
            }
        }

        public string xTipo_expo_tex_Vig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_expoItemCantidad - 1)))
                {
                    return this.axTipo_expo[this.IndiceItem].tex_Vig_Desde;
                }
                return "";
            }
        }

        public string xTipo_expo_tex_Vig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xTipo_expoItemCantidad - 1)))
                {
                    return this.axTipo_expo[this.IndiceItem].tex_Vig_hasta;
                }
                return "";
            }
        }

        public int xTipo_expoItemCantidad
        {
            get
            {
                return this.ixTipo_expoItemCantidad;
            }
        }

        public string xtoken
        {
            get
            {
                return this.strXToken;
            }
            set
            {
                this.strXToken = value;
            }
        }

        public string xUMed_DS
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xUMedItemCantidad - 1)))
                {
                    return this.axUMed[this.IndiceItem].ds;
                }
                return "";
            }
        }

        public int xUMed_Id
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xUMedItemCantidad - 1)))
                {
                    return this.axUMed[this.IndiceItem].id;
                }
                return 0;
            }
        }

        public string xUMed_Vig_desde
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xUMedItemCantidad - 1)))
                {
                    return this.axUMed[this.IndiceItem].Vig_Desde;
                }
                return "";
            }
        }

        public string xUMed_Vig_hasta
        {
            get
            {
                if ((this.IndiceItem >= 0) & (this.IndiceItem <= (this.xUMedItemCantidad - 1)))
                {
                    return this.axUMed[this.IndiceItem].Vig_hasta;
                }
                return "";
            }
        }

        public int xUMedItemCantidad
        {
            get
            {
                return this.ixUMedItemCantidad;
            }
        }

        

        [StructLayout(LayoutKind.Sequential)]
        internal struct bMoneda
        {
            public string id;
            public string ds;
            public string Vig_Desde;
            public string Vig_hasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct bProducto
        {
            public string NCM_codigo;
            public string NCM_ds;
            public string NCM_nota;
            public string NCM_Vig_Desde;
            public string NCM_Vig_hasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct bProductoItem
        {
            public string pro_codigo_ncm;
            public string pro_codigo_sec;
            public string pro_ds;
            public double pro_qty;
            public int pro_umed;
            public double pro_precio_uni;
            public double imp_bonif;
            public double imp_total;
            public int iva_id;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct bTipo_cbtes
        {
            public int id;
            public string ds;
            public string Vig_Desde;
            public string Vig_hasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct bTipoDoc
        {
            public int id;
            public string ds;
            public string Vig_Desde;
            public string Vig_hasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct bTipoIva
        {
            public int id;
            public string ds;
            public string Vig_Desde;
            public string Vig_hasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct bUMed
        {
            public int id;
            public string ds;
            public string Vig_Desde;
            public string Vig_hasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct bZonas
        {
            public int id;
            public string ds;
            public string Vig_Desde;
            public string Vig_hasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct dFamilia
        {
            public int cantidad;
            public string codigo;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct F1Detalle
        {
            public int concepto;
            public int DocTipo;
            public long DocNro;
            public long CbteDesde;
            public long CbteHasta;
            public string CbteFch;
            public double ImpTotal;
            public double ImpTotalConc;
            public double ImpNeto;
            public double ImpOpEx;
            public double ImpTrib;
            public double ImpIva;
            public string FchServDesde;
            public string FchServHasta;
            public string FchVtoPago;
            public string MonId;
            public double MonCotiz;
            public int CbtesAsocItemCantidad;
            public int TributoItemCantidad;
            public int IvaItemCantidad;
            public int OpcionalItemCantidad;
            public string CAEA;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct F1DetalleCbtesAsoc
        {
            public int tipo;
            public int PtoVta;
            public long Nro;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct F1DetalleIva
        {
            public int id;
            public double BaseImp;
            public double Importe;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct F1DetalleOpcional
        {
            public string id;
            public string valor;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct F1DetalleRespuesta
        {
            public int concepto;
            public int DocTipo;
            public int CbteDesde;
            public int CbteHasta;
            public string Resultado;
            public string CAE;
            public string CbteFch;
            public string CAEFchVto;
            public long DocNro;
            public int ObservacionItemCantidad;
            public string CAEA;
            public string CodAutorizacion;
            public string EmisionTipo;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct F1DetalleRespuestaCAEA
        {
            public string CAEA;
            public string FchProceso;
            public int PtoVta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct F1DetalleRespuestaObs
        {
            public int code;
            public string msg;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct F1DetalleTributo
        {
            public int id;
            public string desc;
            public double BaseImp;
            public double Alic;
            public double Importe;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct f1Error
        {
            public int code;
            public string msg;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct f1Event
        {
            public int code;
            public string msg;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct f1PtosVenta
        {
            public int nro;
            public string EmisionTipo;
            public string Bloqueado;
            public string fchBaja;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct f1TiposCbte
        {
            public int id;
            public string desc;
            public string fchDesde;
            public string fchHasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct f1TiposConcepto
        {
            public int id;
            public string desc;
            public string fchDesde;
            public string fchHasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct f1TiposDoc
        {
            public int id;
            public string desc;
            public string fchDesde;
            public string fchHasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct f1TiposIva
        {
            public int id;
            public string desc;
            public string fchDesde;
            public string fchHasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct f1TiposMoneda
        {
            public string id;
            public string desc;
            public string fchDesde;
            public string fchHasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct f1TiposOpcional
        {
            public int id;
            public string desc;
            public string fchDesde;
            public string fchHasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct f1TiposTributo
        {
            public int id;
            public string desc;
            public string fchDesde;
            public string fchHasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct FEDetalle
        {
            public Factura.TipoDocumento tipo_doc;
            public long nro_doc;
            public Factura.TipoComprobante tipo_cbte;
            public int punto_vta;
            public long cbt_desde;
            public long cbt_hasta;
            public double imp_total;
            public double imp_tot_conc;
            public double imp_neto;
            public double impto_liq;
            public double impto_liq_rni;
            public double imp_op_ex;
            public string fecha_serv_desde;
            public string fecha_serv_hasta;
            public string fecha_venc_pago;
            public string fecha_cbte;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct FEDetalleRespuesta
        {
            public Factura.TipoDocumento tipo_doc;
            public long nro_doc;
            public Factura.TipoComprobante tipo_cbte;
            public int punto_vta;
            public long cbt_desde;
            public long cbt_hasta;
            public double imp_total;
            public double imp_tot_conc;
            public double imp_neto;
            public double impto_liq;
            public double impto_liq_rni;
            public double imp_op_ex;
            public string resultado;
            public string cae;
            public string fecha_cbte;
            public string fecha_vto;
            public string motivo;
            public string fecha_serv_desde;
            public string fecha_serv_hasta;
            public string fecha_venc_pago;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct fxCAEA
        {
            public string strFxRespuestaCAEA;
            public int iFxRespuestaCAEAPeriodo;
            public int iFxRespuestaCAEAOrden;
            public DateTime dFxRespuestaCAEAFechaDesde;
            public DateTime dFxRespuestaCAEAFechaHasta;
            public DateTime dFxRespuestaCAEAFechaTopeInforme;
            public DateTime dFxRespuestaCAEAFechaProceso;
            public int iFxRespuestaCAEAPtoVta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct fxComprobantesAsociados
        {
            public int codigoTipoComprobante;
            public long numeroComprobante;
            public long numeroPuntoVenta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct FxDetalleRespuestaCAEA
        {
            public int NumeroPuntoDeventa;
            public string Bloqueado;
            public DateTime Fechabaja;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct fxError
        {
            public int code;
            public string msg;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct fxEvent
        {
            public int code;
            public string msg;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct fxItems
        {
            public double cantidad;
            public string codigo;
            public int CodigoCondicionIva;
            public string codigoMtx;
            public int codigoUnidaMedida;
            public string descripcion;
            public double importeItem;
            public double importeBonifacion;
            public double importeIva;
            public double precioUnitario;
            public int UnidadesMts;
            public Collection ccNoEspecificado;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct fxLista
        {
            public int codigo;
            public string descripcion;
            public string codigo2;
            public string fecha1;
            public string fecha2;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct fxObservacion
        {
            public int codigo;
            public string descripcion;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct fxOtrosTributos
        {
            public double baseImponible;
            public int codigo;
            public string descripcion;
            public double importe;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct fxSubTotalesIva
        {
            public int codigo;
            public double importe;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct gCosecha
        {
            public string codigoCosecha;
            public string descripcionCosecha;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct gEspecie
        {
            public int codigoEspecie;
            public string descripcionEspecie;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct gLocalidad
        {
            public int codigoLocalidad;
            public string descripcionLocalidad;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct gLocalidadTodas
        {
            public int codigoLocalidad;
            public string descripcionLocalidad;
            public sbyte codigoProvincia;
            public string descripcionProvincia;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct gProvincia
        {
            public sbyte codigoProvincia;
            public string descripcionProvincia;
        }

        public enum modoFiscal
        {
            Test,
            Fiscal
        }

        public enum Moneda
        {
            Dolar = 2,
            Euro = 60,
            Peso = 0,
            Real = 12
        }

        public enum Provincia
        {
            BuenosAires = 2,
            CapitalFederal = 1,
            Catamarca = 3,
            Chaco = 6,
            Chubut = 7,
            Cordoba = 4,
            Corrientes = 5,
            Formosa = 9,
            Jujuy = 10,
            LaPampa = 11,
            LaRioja = 12,
            Mendoza = 13,
            Misiones = 14,
            Neuquen = 15,
            RioNegro = 0x10,
            Salta = 0x11,
            SanJuan = 0x12,
            SanLuis = 0x13,
            SantaCruz = 20,
            SantaFe = 0x15,
            SantiagoDelEstero = 0x16,
            TierraDelFuedo = 0x17,
            Tucuman = 0x18
        }

        internal class SCActivador
        {
            private int iUltimoNumeroError;
            private Factura.SCConexion oConexion;
            private Factura.SClicencia oLicencia;
            private Factura.SCPermisos oPermisos;
            private string strMail;
            private string strUltimoMensajeError;

            public bool activar(string strDatos)
            {
                bool bResultado = false;
                bool bResultadoLocal = true;
                int ncantidad = 0;
                this.iUltimoNumeroError = 0;
                this.strUltimoMensajeError = "";
                SCGoogle gServidor = new SCGoogle();
                if (gServidor.Conectar(this.Conexion.Mail, this.Conexion.PassWord, this.Conexion.Documento))
                {
                    if (gServidor.ConectarHoja("actividad"))
                    {
                        if (bResultadoLocal)
                        {
                            bResultadoLocal = gServidor.conectarConsulta("codigo=" + this.Mail.Trim() + " AND datos=" + strDatos.ToString());
                        }
                        if (bResultadoLocal)
                        {
                            if (gServidor.get_CeldaCountConsulta(true) == 0)
                            {
                                ncantidad = 0;
                            }
                            else
                            {
                                ncantidad = Conversions.ToInteger(gServidor.get_CeldaValueconsulta(1, 5));
                            }
                        }
                        if (ncantidad == 0)
                        {
                            if (this.Permisos.Usado >= this.Permisos.Limite)
                            {
                                bResultadoLocal = false;
                                this.iUltimoNumeroError = 0x42;
                                this.strUltimoMensajeError = "Limite de activaciones (" + this.Permisos.Limite.ToString() + ") superado";
                            }
                            else
                            {
                                if (bResultadoLocal)
                                {
                                    bResultadoLocal = gServidor.AgregarValorColumna("primera", this.Permisos.Fecha);
                                }
                                if (bResultadoLocal)
                                {
                                    bResultadoLocal = gServidor.AgregarValorColumna("ultima", this.Permisos.Fecha);
                                }
                                if (bResultadoLocal)
                                {
                                    bResultadoLocal = gServidor.AgregarValorColumna("version", "4");
                                }
                                if (bResultadoLocal)
                                {
                                    bResultadoLocal = gServidor.AgregarValorColumna("codigo", this.Mail);
                                }
                                if (bResultadoLocal)
                                {
                                    bResultadoLocal = gServidor.AgregarValorColumna("cantidad", "1");
                                }
                                if (bResultadoLocal)
                                {
                                    bResultadoLocal = gServidor.AgregarValorColumna("datos", strDatos);
                                }
                                if (bResultadoLocal)
                                {
                                    bResultadoLocal = gServidor.AgregarValorColumna("limite", this.Permisos.Limite.ToString());
                                }
                                if (bResultadoLocal)
                                {
                                    bResultadoLocal = gServidor.AgregarFila();
                                }
                            }
                        }
                        else
                        {
                            if (bResultadoLocal)
                            {
                                ncantidad++;
                                bResultadoLocal = gServidor.ModificarValorColumna(1, 5, ncantidad.ToString());
                            }
                            if (bResultadoLocal)
                            {
                                bResultadoLocal = gServidor.ModificarValorColumna(1, 2, this.Permisos.Fecha);
                            }
                            if (bResultadoLocal)
                            {
                                bResultadoLocal = gServidor.ModificarFila(1);
                            }
                        }
                        if (bResultadoLocal)
                        {
                            return true;
                        }
                        if (this.iUltimoNumeroError != 0x42)
                        {
                            this.iUltimoNumeroError = gServidor.UltimoNumeroError;
                            this.strUltimoMensajeError = gServidor.UltimoMensajeError;
                        }
                        return bResultado;
                    }
                    this.iUltimoNumeroError = gServidor.UltimoNumeroError;
                    this.strUltimoMensajeError = gServidor.UltimoMensajeError;
                    return bResultado;
                }
                this.iUltimoNumeroError = gServidor.UltimoNumeroError;
                this.strUltimoMensajeError = gServidor.UltimoMensajeError;
                return bResultado;
            }

            public bool conectar()
            {
                return true;
            }

            public bool ConectarPermisos()
            {
                this.iUltimoNumeroError = 0;
                this.strUltimoMensajeError = "";
                bool bResultado = false;
                string cError = "";
                SCGoogle gServidor = new SCGoogle();
                if (this.Mail == "")
                {
                    this.iUltimoNumeroError = 100;
                    this.strUltimoMensajeError = "no se ejecut\x00f3 el test de conexi\x00f3n";
                }
                else if (gServidor.Conectar(this.Conexion.Mail, this.Conexion.PassWord, this.Conexion.Documento))
                {
                    if (gServidor.ConectarHoja(this.Conexion.Hoja))
                    {
                        if (gServidor.conectarConsulta("codigo=" + this.Mail.Trim()))
                        {
                            if (gServidor.get_CeldaCountConsulta(true) == 1)
                            {
                                this.oPermisos = new Factura.SCPermisos();
                                this.oPermisos.Codigo = gServidor.get_CeldaValueconsulta(1, 1);
                                this.oPermisos.Valor = Conversions.ToInteger(gServidor.get_CeldaValueconsulta(1, 2));
                                this.oPermisos.Hasta = gServidor.get_CeldaValueconsulta(1, 3);
                                this.oPermisos.Fecha = gServidor.get_CeldaValueconsulta(1, 4);
                                this.oPermisos.Limite = Conversions.ToInteger(gServidor.get_CeldaValueconsulta(1, 5));
                                this.oPermisos.Usado = Conversions.ToInteger(gServidor.get_CeldaValueconsulta(1, 6));
                                bResultado = true;
                            }
                            else
                            {
                                cError = "sin codigo de acceso";
                            }
                        }
                        else
                        {
                            cError = gServidor.UltimoMensajeError;
                        }
                    }
                    else
                    {
                        cError = gServidor.UltimoMensajeError;
                    }
                }
                else
                {
                    cError = gServidor.UltimoMensajeError;
                }
                if (!bResultado)
                {
                    this.iUltimoNumeroError = 10;
                    this.strUltimoMensajeError = cError;
                }
                return bResultado;
            }

            public object DescargarLicencia(string strDatos, string strRutaArchivo)
            {
                Factura.SClicencia licencia = new Factura.SClicencia();
                string cXML = "";
                licencia.Codigo = this.Mail;
                licencia.Datos = strDatos;
                licencia.Fecha = Conversions.ToDate(this.Permisos.Fecha);
                licencia.Hasta = Conversions.ToDate(this.Permisos.Hasta);
                licencia.valor = this.Permisos.Valor;
                licencia.Limite = this.Permisos.Limite;
                licencia.Usado = this.Permisos.Usado;
                this.iUltimoNumeroError = 0;
                this.strUltimoMensajeError = "";
                try
                {
                    XmlSerializer xml = new XmlSerializer(typeof(Factura.SClicencia));
                    ASCIIEncoding myEncoder = new ASCIIEncoding();
                    MemoryStream ms = new MemoryStream();
                    xml.Serialize((Stream) ms, licencia);
                    ms.Position = 0L;
                    cXML = new StreamReader(ms).ReadToEnd();
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.iUltimoNumeroError = 0x22b;
                    this.strUltimoMensajeError = ex.Message;
                    ProjectData.ClearProjectError();
                }
                SCSeguridad seguridad = new SCSeguridad();
                if (seguridad.Empaquetar(cXML, strRutaArchivo))
                {
                    return true;
                }
                this.iUltimoNumeroError = seguridad.UltimoNumeroError;
                this.strUltimoMensajeError = seguridad.UltimoMensajeError;
                return false;
            }

            public bool LeerLicencia(string strRutaArchivo)
            {
                bool bResultado = false;
                string cXML = "";
                this.iUltimoNumeroError = 0;
                this.strUltimoMensajeError = "";
                SCSeguridad seguridad = new SCSeguridad();
                cXML = seguridad.DesEmpaquetar(strRutaArchivo);
                if (cXML == "")
                {
                    this.iUltimoNumeroError = seguridad.UltimoNumeroError;
                    this.strUltimoMensajeError = seguridad.UltimoMensajeError;
                    return bResultado;
                }
                try
                {
                    XmlSerializer xml = new XmlSerializer(typeof(Factura.SClicencia));
                    ASCIIEncoding myEncoder = new ASCIIEncoding();
                    MemoryStream ms = new MemoryStream(myEncoder.GetBytes(cXML));
                    this.oLicencia = (Factura.SClicencia) xml.Deserialize(ms);
                    bResultado = true;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.iUltimoNumeroError = 0x22c;
                    this.strUltimoMensajeError = ex.Message;
                    ProjectData.ClearProjectError();
                }
                return bResultado;
            }

            public bool LeerLicenciaJ(string strRutaArchivo)
            {
                bool bResultado = false;
                string cXML = "";
                this.iUltimoNumeroError = 0;
                this.strUltimoMensajeError = "";
                SCSeguridad seguridad = new SCSeguridad();
                cXML = seguridad.DesEmpaquetarJ(strRutaArchivo);
                if (cXML == "")
                {
                    this.iUltimoNumeroError = seguridad.UltimoNumeroError;
                    this.strUltimoMensajeError = seguridad.UltimoMensajeError;
                    return bResultado;
                }
                try
                {
                    JavaScriptSerializer xml = new JavaScriptSerializer();
                    Factura.SClicencia miLicencia = new Factura.SClicencia();
                    Factura.SCLicenciaJava pepe = xml.Deserialize<Factura.SCLicenciaJava>(cXML);
                    miLicencia.Codigo = pepe.codigo;
                    miLicencia.Datos = pepe.datos;
                    miLicencia.Fecha = DateTime.ParseExact(pepe.fecha, "yyyyMMdd", null);
                    miLicencia.Hasta = DateTime.ParseExact(pepe.hasta, "yyyyMMdd", null);
                    miLicencia.Limite = pepe.limite;
                    miLicencia.Usado = pepe.usado;
                    miLicencia.valor = pepe.valor;
                    this.oLicencia = miLicencia;
                    bResultado = true;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception ex = exception1;
                    this.iUltimoNumeroError = 0x22c;
                    this.strUltimoMensajeError = ex.Message;
                    ProjectData.ClearProjectError();
                }
                return bResultado;
            }

            public bool TestConexion(string strMail, string strPassWord)
            {
                this.iUltimoNumeroError = 0;
                this.strUltimoMensajeError = "";
                SCGoogle gServidor = new SCGoogle();
                bool bResultado = false;
                this.strMail = "";
                if (gServidor.Conectar(strMail, strPassWord, "Acceso"))
                {
                    if (gServidor.ConectarHoja("test"))
                    {
                        if (gServidor.conectarCelda(1, 1, 1, 2))
                        {
                            string cTest = gServidor.get_CeldaValue(2, 1);
                            try
                            {
                                string cXML = new SCSeguridad().DesEmpaquetarString(cTest);
                                XmlSerializer xml = new XmlSerializer(typeof(Factura.SCConexion));
                                ASCIIEncoding myEncoder = new ASCIIEncoding();
                                MemoryStream ms = new MemoryStream(myEncoder.GetBytes(cXML));
                                this.oConexion = (Factura.SCConexion) xml.Deserialize(ms);
                                this.strMail = strMail.Replace("@", ".");
                                bResultado = true;
                            }
                            catch (Exception exception1)
                            {
                                ProjectData.SetProjectError(exception1);
                                Exception ex = exception1;
                                this.iUltimoNumeroError = 0x16;
                                this.strUltimoMensajeError = ex.Message;
                                ProjectData.ClearProjectError();
                            }
                            return bResultado;
                        }
                        this.iUltimoNumeroError = 4;
                        this.strUltimoMensajeError = gServidor.UltimoMensajeError;
                        return bResultado;
                    }
                    this.iUltimoNumeroError = 3;
                    this.strUltimoMensajeError = gServidor.UltimoMensajeError;
                    return bResultado;
                }
                this.iUltimoNumeroError = 2;
                this.strUltimoMensajeError = gServidor.UltimoMensajeError;
                return bResultado;
            }

            public string TestConexionAlternativo(string strURL)
            {
                if (strURL == "")
                {
                    strURL = "http://sites.google.com/site/activadorlicencias/";
                }
                string strDatos = "2";
                bool bResultado = false;
                try
                {
                    WebResponse response = WebRequest.Create(strURL).GetResponse();
                    StreamReader reader = new StreamReader(response.GetResponseStream());
                    string res = reader.ReadToEnd();
                    int nIndex = res.IndexOf("0123456789", 1);
                    int nIndex2 = res.IndexOf("0123456789", (int) (nIndex + 1));
                    strDatos = res.Substring(nIndex + 11, ((nIndex2 - nIndex) - 11) - 1);
                    reader.Close();
                    response.Close();
                    bResultado = true;
                }
                catch (Exception exception1)
                {
                    ProjectData.SetProjectError(exception1);
                    Exception EX = exception1;
                    this.iUltimoNumeroError = 1;
                    this.strUltimoMensajeError = EX.Message;
                    ProjectData.ClearProjectError();
                }
                return strDatos;
            }

            internal Factura.SCConexion Conexion
            {
                get
                {
                    return this.oConexion;
                }
            }

            public Factura.SClicencia licencia
            {
                get
                {
                    return this.oLicencia;
                }
            }

            public string Mail
            {
                get
                {
                    return this.strMail;
                }
            }

            public Factura.SCPermisos Permisos
            {
                get
                {
                    return this.oPermisos;
                }
            }

            public string UltimoMensajeError
            {
                get
                {
                    return this.strUltimoMensajeError;
                }
            }

            public int UltimoNumeroError
            {
                get
                {
                    return this.iUltimoNumeroError;
                }
            }

            internal class SCGoogle
            {
                private SpreadsheetsService gGoogleConexion;
                private CellEntry gGoogleEntryCelda;
                private ListEntry gGoogleEntryConsulta;
                private SpreadsheetEntry gGoogleEntryDocumento;
                private WorksheetEntry gGoogleEntryHoja;
                private CellFeed gGoogleFeedCelda;
                private ListFeed gGoogleFeedConsulta;
                private SpreadsheetFeed gGoogleFeedDocumento;
                private WorksheetFeed gGoogleFeedHoja;
                private ListEntry gGoogleNuevaFila;
                private CellQuery gGoogleQueryCelda;
                private ListQuery gGoogleQueryConsulta;
                private SpreadsheetQuery gGoogleQueryDocumento;
                private WorksheetQuery gGoogleQueryHoja;
                private int iContador = 0;
                private int iUltimoNumeroError;
                private AtomFeed oLote = null;
                private string strUltimoMensajeError;

                public bool ActualizarCeldas()
                {
                    bool bResultado = true;
                    AtomFeed batch = this.GoogleFeedCelda.Service.Batch(this.Lote, new Uri(this.GoogleFeedCelda.Batch));
                    foreach (CellEntry celda in batch.Entries)
                    {
                        if (celda.BatchData.Status.Code != 200)
                        {
                            bResultado = false;
                            this.strUltimoMensajeError = "fallo celda" + celda.BatchData.Id;
                            break;
                        }
                    }
                    if (bResultado)
                    {
                        this.oLote = null;
                        this.Contador = 0;
                    }
                    return true;
                }

                public bool AgregarFila()
                {
                    bool bResultado = true;
                    try
                    {
                        this.GoogleFeedConsulta.Insert<ListEntry>(this.GoogleNuevaFila);
                        this.GoogleNuevaFila = null;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        bResultado = false;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        ProjectData.ClearProjectError();
                    }
                    return bResultado;
                }

                public bool AgregarValorColumna(string strName, string strValor)
                {
                    bool bResultado = true;
                    try
                    {
                        if (this.GoogleNuevaFila == null)
                        {
                            this.GoogleNuevaFila = new ListEntry();
                        }
                        ListEntry.Custom curElement = new ListEntry.Custom();
                        curElement.LocalName = strName;
                        curElement.Value = strValor;
                        this.GoogleNuevaFila.Elements.Add(curElement);
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        bResultado = false;
                        this.iUltimoNumeroError = 50;
                        this.strUltimoMensajeError = ex.Message;
                        ProjectData.ClearProjectError();
                    }
                    return bResultado;
                }

                public bool BorrarFila(object nFila)
                {
                    bool bResultado = true;
                    try
                    {
                        ((ListEntry) this.GoogleFeedConsulta.Entries[Conversions.ToInteger(Operators.SubtractObject(nFila, 1))]).Delete();
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        bResultado = false;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        ProjectData.ClearProjectError();
                    }
                    return bResultado;
                }

                public bool Conectar(string strGmail, string strPassWord, string strDocumento)
                {
                    bool bResultado = false;
                    Exception miEx = null;
                    try
                    {
                        IEnumerator<AtomEntry> VB_t_ref_L0;
                        this.GoogleConexion = new SpreadsheetsService("SC-HOJA-1");
                        this.GoogleConexion.setUserCredentials(strGmail, strPassWord);
                        this.GoogleQueryDocumento = new SpreadsheetQuery();
                        this.GoogleFeedDocumento = this.GoogleConexion.Query(this.gGoogleQueryDocumento);
                        this.GoogleEntryDocumento = null;
                        try
                        {
                            VB_t_ref_L0 = this.GoogleFeedDocumento.Entries.GetEnumerator();
                            while (VB_t_ref_L0.MoveNext())
                            {
                                SpreadsheetEntry entry = (SpreadsheetEntry) VB_t_ref_L0.Current;
                                if (entry.Title.Text == strDocumento)
                                {
                                    this.GoogleEntryDocumento = entry;
                                    return true;
                                }
                            }
                            return bResultado;
                        }
                        finally
                        {
                            if (VB_t_ref_L0 != null)
                            {
                                VB_t_ref_L0.Dispose();
                            }
                        }
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        miEx = exception1;
                        this.iUltimoNumeroError = 1;
                        this.strUltimoMensajeError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                    return bResultado;
                }

                public bool conectarCelda(int nColumnaMin, int nColumnaMax, int nFilaMin, int nFilaMax)
                {
                    bool bResultado = false;
                    Exception miEx = null;
                    try
                    {
                        AtomLink cellFeedLink = this.GoogleEntryHoja.Links.FindService("http://schemas.google.com/spreadsheets/2006#cellsfeed", null);
                        this.GoogleQueryCelda = new CellQuery(cellFeedLink.HRef.ToString());
                        this.GoogleQueryCelda.MaximumColumn = (uint) nColumnaMin;
                        this.GoogleQueryCelda.MaximumRow = (uint) nFilaMax;
                        this.GoogleQueryCelda.MinimumColumn = (uint) nColumnaMin;
                        this.GoogleQueryCelda.MinimumRow = (uint) nFilaMin;
                        this.GoogleFeedCelda = this.GoogleConexion.Query(this.GoogleQueryCelda);
                        bResultado = true;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        miEx = exception1;
                        this.iUltimoNumeroError = 3;
                        this.strUltimoMensajeError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                    return bResultado;
                }

                public bool conectarConsulta(string strConsulta)
                {
                    bool bResultado = false;
                    try
                    {
                        AtomLink listfeedlink = this.GoogleEntryHoja.Links.FindService("http://schemas.google.com/spreadsheets/2006#listfeed", null);
                        this.GoogleQueryConsulta = new ListQuery(listfeedlink.HRef.ToString());
                        this.GoogleQueryConsulta.SpreadsheetQuery = strConsulta;
                        this.GoogleFeedConsulta = (ListFeed) this.GoogleEntryHoja.Service.Query(this.GoogleQueryConsulta);
                        bResultado = true;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception miEx = exception1;
                        this.strUltimoMensajeError = miEx.Message;
                        this.iUltimoNumeroError = 0x22b;
                        this.GoogleFeedConsulta = null;
                        ProjectData.ClearProjectError();
                    }
                    return bResultado;
                }

                public bool ConectarHoja(string strHoja)
                {
                    bool bResultado = false;
                    Exception miEx = null;
                    try
                    {
                        AtomLink Link = this.GoogleEntryDocumento.Links.FindService("http://schemas.google.com/spreadsheets/2006#worksheetsfeed", null);
                        this.GoogleQueryHoja = new WorksheetQuery(Link.HRef.ToString());
                        this.GoogleFeedHoja = this.GoogleConexion.Query(this.GoogleQueryHoja);
                        foreach (WorksheetEntry miHoja in this.GoogleFeedHoja.Entries)
                        {
                            if (miHoja.Title.Text == strHoja)
                            {
                                this.GoogleEntryHoja = miHoja;
                                bResultado = true;
                                break;
                            }
                        }
                        if (bResultado)
                        {
                            this.iContador = 0;
                            this.oLote = null;
                        }
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        miEx = exception1;
                        this.iUltimoNumeroError = 2;
                        this.strUltimoMensajeError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                    return bResultado;
                }

                public bool ModificarFila(object nFila)
                {
                    bool bResultado = true;
                    try
                    {
                        ((ListEntry) this.GoogleFeedConsulta.Entries[Conversions.ToInteger(Operators.SubtractObject(nFila, 1))]).Update();
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        bResultado = false;
                        this.iUltimoNumeroError = 0x37;
                        this.strUltimoMensajeError = ex.Message;
                        ProjectData.ClearProjectError();
                    }
                    return bResultado;
                }

                public bool ModificarValorColumna(int nfila, int ncolumna, string strValor)
                {
                    bool bResultado = true;
                    try
                    {
                        ListEntry worksheetrow = (ListEntry) this.GoogleFeedConsulta.Entries[nfila - 1];
                        ListEntry.Custom curElement = worksheetrow.Elements[ncolumna - 1];
                        curElement.Value = strValor;
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception ex = exception1;
                        bResultado = false;
                        this.iUltimoNumeroError = 50;
                        this.strUltimoMensajeError = ex.Message;
                        ProjectData.ClearProjectError();
                    }
                    return bResultado;
                }

                internal int this[bool bFilaONoFila]
                {
                    get
                    {
                        int CeldaCountConsulta;
                        try
                        {
                            if (bFilaONoFila)
                            {
                                return this.GoogleFeedConsulta.Entries.Count;
                            }
                            ListEntry worksheetrow = (ListEntry) this.GoogleFeedConsulta.Entries[0];
                            CeldaCountConsulta = worksheetrow.Elements.Count;
                        }
                        catch (Exception exception1)
                        {
                            ProjectData.SetProjectError(exception1);
                            Exception miEx = exception1;
                            CeldaCountConsulta = 0;
                            ProjectData.ClearProjectError();
                        }
                        return CeldaCountConsulta;
                    }
                    set
                    {
                    }
                }

                internal string this[object nFila, object nColumna]
                {
                    get
                    {
                        return this.GoogleFeedCelda[Conversions.ToUInteger(nFila), Conversions.ToUInteger(nColumna)].Value;
                    }
                    set
                    {
                        Exception miEx = null;
                        try
                        {
                            CellEntry miCelda = this.GoogleFeedCelda[Conversions.ToUInteger(nFila), Conversions.ToUInteger(nColumna)];
                            miCelda.Cell.InputValue = value;
                            this.iContador++;
                            miCelda.BatchData = new GDataBatchEntryData(this.iContador.ToString(), GDataBatchOperationType.update);
                            if (this.Lote == null)
                            {
                                this.oLote = new AtomFeed(this.GoogleFeedCelda);
                            }
                            this.oLote.Entries.Add(miCelda);
                        }
                        catch (Exception exception1)
                        {
                            ProjectData.SetProjectError(exception1);
                            miEx = exception1;
                            this.iUltimoNumeroError = 7;
                            this.strUltimoMensajeError = miEx.Message;
                            ProjectData.ClearProjectError();
                        }
                    }
                }

                //internal string this[object nFila, object nColumna]
                //{
                //    get
                //    {
                //        string CeldaValueconsulta;
                //        try
                //        {
                //            ListEntry worksheetrow = (ListEntry) this.GoogleFeedConsulta.Entries[Conversions.ToInteger(Operators.SubtractObject(nFila, 1))];
                //            ListEntry.Custom elemento = worksheetrow.Elements[Conversions.ToInteger(Operators.SubtractObject(nColumna, 1))];
                //            CeldaValueconsulta = elemento.Value;
                //        }
                //        catch (Exception exception1)
                //        {
                //            ProjectData.SetProjectError(exception1);
                //            Exception miEx = exception1;
                //            CeldaValueconsulta = "";
                //            ProjectData.ClearProjectError();
                //        }
                //        return CeldaValueconsulta;
                //    }
                //    set
                //    {
                //    }
                //}

                internal int Contador
                {
                    get
                    {
                        return this.iContador;
                    }
                    set
                    {
                        this.iContador = value;
                    }
                }

                private SpreadsheetsService GoogleConexion
                {
                    get
                    {
                        return this.gGoogleConexion;
                    }
                    set
                    {
                        this.gGoogleConexion = value;
                    }
                }

                private CellEntry GoogleEntryCelda
                {
                    get
                    {
                        return this.gGoogleEntryCelda;
                    }
                    set
                    {
                        this.gGoogleEntryCelda = value;
                    }
                }

                private ListEntry GoogleEntryConsulta
                {
                    get
                    {
                        return this.gGoogleEntryConsulta;
                    }
                    set
                    {
                        this.gGoogleEntryConsulta = value;
                    }
                }

                private SpreadsheetEntry GoogleEntryDocumento
                {
                    get
                    {
                        return this.gGoogleEntryDocumento;
                    }
                    set
                    {
                        this.gGoogleEntryDocumento = value;
                    }
                }

                private WorksheetEntry GoogleEntryHoja
                {
                    get
                    {
                        return this.gGoogleEntryHoja;
                    }
                    set
                    {
                        this.gGoogleEntryHoja = value;
                    }
                }

                private CellFeed GoogleFeedCelda
                {
                    get
                    {
                        return this.gGoogleFeedCelda;
                    }
                    set
                    {
                        this.gGoogleFeedCelda = value;
                    }
                }

                private ListFeed GoogleFeedConsulta
                {
                    get
                    {
                        return this.gGoogleFeedConsulta;
                    }
                    set
                    {
                        this.gGoogleFeedConsulta = value;
                    }
                }

                private SpreadsheetFeed GoogleFeedDocumento
                {
                    get
                    {
                        return this.gGoogleFeedDocumento;
                    }
                    set
                    {
                        this.gGoogleFeedDocumento = value;
                    }
                }

                private WorksheetFeed GoogleFeedHoja
                {
                    get
                    {
                        return this.gGoogleFeedHoja;
                    }
                    set
                    {
                        this.gGoogleFeedHoja = value;
                    }
                }

                private ListEntry GoogleNuevaFila
                {
                    get
                    {
                        return this.gGoogleNuevaFila;
                    }
                    set
                    {
                        this.gGoogleNuevaFila = value;
                    }
                }

                private CellQuery GoogleQueryCelda
                {
                    get
                    {
                        return this.gGoogleQueryCelda;
                    }
                    set
                    {
                        this.gGoogleQueryCelda = value;
                    }
                }

                private ListQuery GoogleQueryConsulta
                {
                    get
                    {
                        return this.gGoogleQueryConsulta;
                    }
                    set
                    {
                        this.gGoogleQueryConsulta = value;
                    }
                }

                private SpreadsheetQuery GoogleQueryDocumento
                {
                    get
                    {
                        return this.gGoogleQueryDocumento;
                    }
                    set
                    {
                        this.gGoogleQueryDocumento = value;
                    }
                }

                private WorksheetQuery GoogleQueryHoja
                {
                    get
                    {
                        return this.gGoogleQueryHoja;
                    }
                    set
                    {
                        this.gGoogleQueryHoja = value;
                    }
                }

                internal AtomFeed Lote
                {
                    get
                    {
                        return this.oLote;
                    }
                    set
                    {
                        this.oLote = value;
                    }
                }

                internal string UltimoMensajeError
                {
                    get
                    {
                        return this.strUltimoMensajeError;
                    }
                }

                internal int UltimoNumeroError
                {
                    get
                    {
                        return this.iUltimoNumeroError;
                    }
                }
            }

            internal class SCSeguridad
            {
                private int iUltimoNumeroError;
                private string strUltimoMensajeError;

                public bool Archivar(string texto, string sOutputFilename, string sKey)
                {
                    bool bResultado = true;
                    this.iUltimoNumeroError = 0;
                    this.strUltimoMensajeError = "";
                    try
                    {
                        FileStream fsEncrypted = new FileStream(sOutputFilename, FileMode.Create, FileAccess.Write);
                        DESCryptoServiceProvider DES = new DESCryptoServiceProvider();
                        DES.Key = Encoding.ASCII.GetBytes(sKey);
                        DES.IV = Encoding.ASCII.GetBytes(sKey);
                        string str = new ASCIIEncoding().GetString(DES.Key);
                        ICryptoTransform desencrypt = DES.CreateEncryptor();
                        CryptoStream cryptostream = new CryptoStream(fsEncrypted, desencrypt, CryptoStreamMode.Write);
                        byte[] bytearrayinput = new byte[(texto.Length - 1) + 1];
                        bytearrayinput = new ASCIIEncoding().GetBytes(texto);
                        cryptostream.Write(bytearrayinput, 0, bytearrayinput.Length);
                        cryptostream.Close();
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception miEx = exception1;
                        bResultado = false;
                        this.iUltimoNumeroError = 2;
                        this.strUltimoMensajeError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                    return bResultado;
                }

                public string ArmarClave()
                {
                    byte[] arreglo = new byte[0x401];
                    new Random().NextBytes(arreglo);
                    return Convert.ToBase64String(arreglo);
                }

                public string Comprimir(string texto, string sKey)
                {
                    string strResultado = "";
                    MemoryStream msSalida = new MemoryStream();
                    this.iUltimoNumeroError = 0;
                    this.strUltimoMensajeError = "";
                    try
                    {
                        DESCryptoServiceProvider DES = new DESCryptoServiceProvider();
                        DES.Key = Encoding.ASCII.GetBytes(sKey);
                        DES.IV = Encoding.ASCII.GetBytes(sKey);
                        string str = new ASCIIEncoding().GetString(DES.Key);
                        ICryptoTransform desencrypt = DES.CreateEncryptor();
                        CryptoStream cryptostream = new CryptoStream(msSalida, desencrypt, CryptoStreamMode.Write);
                        byte[] bytearrayinput = new byte[(texto.Length - 1) + 1];
                        bytearrayinput = new ASCIIEncoding().GetBytes(texto);
                        cryptostream.Write(bytearrayinput, 0, bytearrayinput.Length);
                        cryptostream.FlushFinalBlock();
                        msSalida.Position = 0L;
                        byte[] resultado = new byte[((int) (msSalida.Length - 1L)) + 1];
                        msSalida.Read(resultado, 0, (int) msSalida.Length);
                        strResultado = Convert.ToBase64String(resultado);
                        cryptostream.Close();
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception miEx = exception1;
                        this.iUltimoNumeroError = 2;
                        this.strUltimoMensajeError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                    return strResultado;
                }

                public string DesArchivar(string sInputFilename, string sKey)
                {
                    this.iUltimoNumeroError = 0;
                    this.strUltimoMensajeError = "";
                    string cResultado = "";
                    try
                    {
                        DESCryptoServiceProvider DES = new DESCryptoServiceProvider();
                        DES.Key = Encoding.ASCII.GetBytes(sKey);
                        DES.IV = Encoding.ASCII.GetBytes(sKey);
                        FileStream fsread = new FileStream(sInputFilename, FileMode.Open, FileAccess.Read);
                        ICryptoTransform desdecrypt = DES.CreateDecryptor();
                        CryptoStream cryptostreamDecr = new CryptoStream(fsread, desdecrypt, CryptoStreamMode.Read);
                        cResultado = new StreamReader(cryptostreamDecr).ReadToEnd();
                        cryptostreamDecr.Close();
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception miEx = exception1;
                        this.iUltimoNumeroError = 5;
                        this.strUltimoMensajeError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                    return cResultado;
                }

                public string DesComprimir(string texto, string sKey)
                {
                    this.iUltimoNumeroError = 0;
                    this.strUltimoMensajeError = "";
                    string cResultado = "";
                    try
                    {
                        DESCryptoServiceProvider DES = new DESCryptoServiceProvider();
                        DES.Key = Encoding.ASCII.GetBytes(sKey);
                        DES.IV = Encoding.ASCII.GetBytes(sKey);
                        MemoryStream msEntrada = new MemoryStream(Convert.FromBase64String(texto));
                        ICryptoTransform desdecrypt = DES.CreateDecryptor();
                        CryptoStream cryptostreamDecr = new CryptoStream(msEntrada, desdecrypt, CryptoStreamMode.Read);
                        cResultado = new StreamReader(cryptostreamDecr).ReadToEnd();
                        cryptostreamDecr.Close();
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception miEx = exception1;
                        this.iUltimoNumeroError = 5;
                        this.strUltimoMensajeError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                    return cResultado;
                }

                public string DesEmpaquetar(string ArchivoOrigen)
                {
                    string cResultado = "";
                    string cadena = "";
                    string sKey = "";
                    string sClave = "";
                    string texto = "";
                    this.iUltimoNumeroError = 0;
                    this.strUltimoMensajeError = "";
                    try
                    {
                        cadena = System.IO.File.ReadAllText(ArchivoOrigen);
                        texto = cadena.Substring(0, cadena.Length - 0x558);
                        sClave = cadena.Substring(cadena.Length - 0x558, 0x558);
                        sKey = this.GenerarClave(sClave);
                        cResultado = this.DesComprimir(texto, sKey);
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception miEx = exception1;
                        this.iUltimoNumeroError = 10;
                        this.strUltimoMensajeError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                    return cResultado;
                }

                public string DesEmpaquetarJ(string ArchivoOrigen)
                {
                    string cmiresultado = "";
                    int nlargohash = 0x2c;
                    int nlargofirma = 0x400;
                    this.iUltimoNumeroError = 0;
                    this.strUltimoMensajeError = "";
                    try
                    {
                        string strcadena = System.IO.File.ReadAllText(ArchivoOrigen);
                        string nlargo = Conversions.ToString(strcadena.Length);
                        string mifirma = strcadena.Substring((int) Math.Round((double) (Conversions.ToDouble(nlargo) - nlargofirma)), nlargofirma);
                        string mihashstr = strcadena.Substring((int) Math.Round((double) ((Conversions.ToDouble(nlargo) - nlargofirma) - nlargohash)), nlargohash);
                        byte[] cserializadobyte = Convert.FromBase64String(strcadena.Substring(0, (int) Math.Round((double) ((Conversions.ToDouble(nlargo) - nlargofirma) - nlargohash))));
                        cmiresultado = Encoding.ASCII.GetString(cserializadobyte);
                        string miclave = this.GenerarClave(mifirma);
                        ASCIIEncoding myEncoder = new ASCIIEncoding();
                        HMACSHA256 codificador = new HMACSHA256(myEncoder.GetBytes(miclave));
                        MemoryStream ms = new MemoryStream(myEncoder.GetBytes(cmiresultado));
                        if (Convert.ToBase64String(codificador.ComputeHash(ms)) == mihashstr)
                        {
                            return cmiresultado;
                        }
                        this.iUltimoNumeroError = 11;
                        this.strUltimoMensajeError = "licencia no valida 2";
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception miEx = exception1;
                        this.iUltimoNumeroError = 10;
                        this.strUltimoMensajeError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                    return "";
                }

                public string DesEmpaquetarString(string strTexto)
                {
                    string cResultado = "";
                    string cadena = "";
                    string sKey = "";
                    string sClave = "";
                    string texto = "";
                    this.iUltimoNumeroError = 0;
                    this.strUltimoMensajeError = "";
                    try
                    {
                        cadena = strTexto;
                        texto = cadena.Substring(0, cadena.Length - 0x558);
                        sClave = cadena.Substring(cadena.Length - 0x558, 0x558);
                        sKey = this.GenerarClave(sClave);
                        cResultado = this.DesComprimir(texto, sKey);
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception miEx = exception1;
                        this.iUltimoNumeroError = 10;
                        this.strUltimoMensajeError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                    return cResultado;
                }

                public bool Empaquetar(string texto, string ArchivoDestino)
                {
                    this.iUltimoNumeroError = 0;
                    this.strUltimoMensajeError = "";
                    bool bResultado = true;
                    string sKey = "";
                    string sClave = "";
                    try
                    {
                        sClave = this.ArmarClave();
                        sKey = this.GenerarClave(sClave);
                        string cadena = this.Comprimir(texto, sKey);
                        System.IO.File.WriteAllText(ArchivoDestino, cadena);
                        System.IO.File.AppendAllText(ArchivoDestino, sClave);
                    }
                    catch (Exception exception1)
                    {
                        ProjectData.SetProjectError(exception1);
                        Exception miEx = exception1;
                        bResultado = false;
                        this.iUltimoNumeroError = 20;
                        this.strUltimoMensajeError = miEx.Message;
                        ProjectData.ClearProjectError();
                    }
                    return bResultado;
                }

                public string GenerarClave(string strDatos)
                {
                    string cResultado = "";
                    int nIndex = 1;
                    do
                    {
                        cResultado = cResultado + strDatos.Substring((int) Math.Round(Math.Pow(2.0, (double) nIndex)), 1);
                        nIndex++;
                    }
                    while (nIndex <= 8);
                    return cResultado;
                }

                public string UltimoMensajeError
                {
                    get
                    {
                        return this.strUltimoMensajeError;
                    }
                }

                public int UltimoNumeroError
                {
                    get
                    {
                        return this.iUltimoNumeroError;
                    }
                }
            }
        }

        public class SCConexion
        {
            private string strDocumento;
            private string strHoja;
            private string strMail;
            private string strPassWord;

            public string Documento
            {
                get
                {
                    return this.strDocumento;
                }
                set
                {
                    this.strDocumento = value;
                }
            }

            public string Hoja
            {
                get
                {
                    return this.strHoja;
                }
                set
                {
                    this.strHoja = value;
                }
            }

            public string Mail
            {
                get
                {
                    return this.strMail;
                }
                set
                {
                    this.strMail = value;
                }
            }

            public string PassWord
            {
                get
                {
                    return this.strPassWord;
                }
                set
                {
                    this.strPassWord = value;
                }
            }
        }

        public class SClicencia
        {
            private DateTime dFecha;
            private DateTime dHasta;
            private int iLimite;
            private int iUsado;
            private int iValor;
            private string strCodigo;
            private string strDatos;

            public string Codigo
            {
                get
                {
                    return this.strCodigo;
                }
                set
                {
                    this.strCodigo = value;
                }
            }

            public string Datos
            {
                get
                {
                    return this.strDatos;
                }
                set
                {
                    this.strDatos = value;
                }
            }

            public DateTime Fecha
            {
                get
                {
                    return this.dFecha;
                }
                set
                {
                    this.dFecha = value;
                }
            }

            public DateTime Hasta
            {
                get
                {
                    return this.dHasta;
                }
                set
                {
                    this.dHasta = value;
                }
            }

            public int Limite
            {
                get
                {
                    return this.iLimite;
                }
                set
                {
                    this.iLimite = value;
                }
            }

            public int Usado
            {
                get
                {
                    return this.iUsado;
                }
                set
                {
                    this.iUsado = value;
                }
            }

            public int valor
            {
                get
                {
                    return this.iValor;
                }
                set
                {
                    this.iValor = value;
                }
            }
        }

        public class SCLicenciaJava
        {
            private int nLimite;
            private int nUsado;
            private int nValor;
            private string strcodigo;
            private string strcreacion;
            private string strDatos;
            private string strFecha;
            private string strfirma;
            private string strHasta;
            private string strmiDato;
            private string strmotor;
            private string strscript;
            private string strsource;
            private string strversion;

            public string codigo
            {
                get
                {
                    return this.strcodigo;
                }
                set
                {
                    this.strcodigo = value;
                }
            }

            public string creacion
            {
                get
                {
                    return this.strcreacion;
                }
                set
                {
                    this.strcreacion = value;
                }
            }

            public string datos
            {
                get
                {
                    return this.strDatos;
                }
                set
                {
                    this.strDatos = value;
                }
            }

            public string fecha
            {
                get
                {
                    return this.strFecha;
                }
                set
                {
                    this.strFecha = value;
                }
            }

            public string firma
            {
                get
                {
                    return this.strfirma;
                }
                set
                {
                    this.strfirma = value;
                }
            }

            public string hasta
            {
                get
                {
                    return this.strHasta;
                }
                set
                {
                    this.strHasta = value;
                }
            }

            public int limite
            {
                get
                {
                    return this.nLimite;
                }
                set
                {
                    this.nLimite = value;
                }
            }

            public string midato
            {
                get
                {
                    return this.strmiDato;
                }
                set
                {
                    this.strmiDato = value;
                }
            }

            public string motor
            {
                get
                {
                    return this.strmotor;
                }
                set
                {
                    this.strmotor = value;
                }
            }

            public string script
            {
                get
                {
                    return this.strscript;
                }
                set
                {
                    this.strscript = value;
                }
            }

            public string source
            {
                get
                {
                    return this.strsource;
                }
                set
                {
                    this.strsource = value;
                }
            }

            public int usado
            {
                get
                {
                    return this.nUsado;
                }
                set
                {
                    this.nUsado = value;
                }
            }

            public int valor
            {
                get
                {
                    return this.nValor;
                }
                set
                {
                    this.nValor = value;
                }
            }

            public string version
            {
                get
                {
                    return this.strversion;
                }
                set
                {
                    this.strversion = value;
                }
            }
        }

        public class SCPermisos
        {
            private int ilimite;
            private int iusado;
            private int iValor;
            private string strCodigo;
            private string strFecha;
            private string strHasta;

            public string Codigo
            {
                get
                {
                    return this.strCodigo;
                }
                set
                {
                    this.strCodigo = value;
                }
            }

            public string Fecha
            {
                get
                {
                    return this.strFecha;
                }
                set
                {
                    this.strFecha = value;
                }
            }

            public string Hasta
            {
                get
                {
                    return this.strHasta;
                }
                set
                {
                    this.strHasta = value;
                }
            }

            public int Limite
            {
                get
                {
                    return this.ilimite;
                }
                set
                {
                    this.ilimite = value;
                }
            }

            public int Usado
            {
                get
                {
                    return this.iusado;
                }
                set
                {
                    this.iusado = value;
                }
            }

            public int Valor
            {
                get
                {
                    return this.iValor;
                }
                set
                {
                    this.iValor = value;
                }
            }
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct sItem
        {
            public string poliza;
            public string endoso;
            public string ds;
            public double qty;
            public double precio_uni;
            public double imp_bonif;
            public double imp_total;
            public int iva_id;
            public double imp_valor_aseg;
            public string imp_moneda_vaseg;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct sMoneda
        {
            public string id;
            public string ds;
            public string Vig_Desde;
            public string Vig_hasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct sTipo_cbtes
        {
            public int id;
            public string ds;
            public string Vig_Desde;
            public string Vig_hasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct sTipoDoc
        {
            public int id;
            public string ds;
            public string Vig_Desde;
            public string Vig_hasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct sTipoIva
        {
            public int id;
            public string ds;
            public string Vig_Desde;
            public string Vig_hasta;
        }

        public enum TipoComprobante
        {
            AjusteDecrementoCreditoFiscal = 0x5f,
            AjusteDecrementoDebitoFiscal = 0x5d,
            AjusteIncrementoCreditoFiscal = 0x5e,
            AjusteIncrementoDebitoFiscal = 0x5c,
            CierreZ = 80,
            CuentaVentaLiquidoProductoA = 60,
            CuentaVentaLiquidoProductoB = 0x3d,
            CuentaVentaLiquidoProductoC = 0x3e,
            DocumentoAduanero = 14,
            FacturaA = 1,
            FacturaB = 6,
            FacturaC = 11,
            FacturaCompraBiendeUso = 30,
            FacturaEmportacion = 0x13,
            FacturaExportacion855 = 0x16,
            FacturaServicioPublico = 0x5b,
            LiquidacionA = 0x3f,
            LiquidacionB = 0x40,
            LiquidacionC = 0x41,
            NotaCreditoA = 3,
            NotaCreditoB = 8,
            NotaCreditoC = 13,
            NotaCreditoEquivalente3419 = 0x26,
            NotaCreditoExterior = 0x15,
            NotaDebitoA = 2,
            NotaDebitoB = 7,
            NotaDebitoC = 12,
            NotaDebitoEquivalente3419 = 0x25,
            NotaDebitoExterior = 20,
            NotaVentaContado = 5,
            NotaVentaContadoB = 10,
            NotaVentaContadoC = 0x10,
            ReciboA = 4,
            ReciboB = 9,
            ReciboC = 15,
            TiquetFacturaA = 0x51,
            TiquetFacturaB = 0x52
        }

        public enum TipoDocumento
        {
            CDI = 0x57,
            CIExtranjera = 0x5b,
            CUIL = 0x56,
            CUIT = 80,
            DNI = 0x60,
            LC = 90,
            LE = 0x59,
            Pasaporte = 0x5e,
            SinIdentificacionGlobalDiario = 0x63
        }

        public enum TipoReponsable
        {
            ClienteExterior = 9,
            ConsumidorFinal = 5,
            Exento = 4,
            Importador = 8,
            Liberado = 10,
            Monotributo = 6,
            NoResponsable = 3,
            ResponsableInscripto = 1,
            ResponsableInscriptoPercepcion = 11,
            ResponsableNoInscripto = 2,
            SinCategoria = 7
        }

        public enum Unidad
        {
            bonificacion = 0x63,
            cm = 20,
            cm3 = 0x1b,
            Gr = 14,
            horma = 0x3f,
            Kg = 1,
            Km = 0x11,
            KW = 6,
            L = 5,
            M2 = 3,
            M3 = 3,
            mm = 15,
            mm3 = 0x10,
            Mt = 2,
            otras = 0x62,
            pack = 0x3e,
            U = 7
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct xCmps_asoc
        {
            public int cbte_tipo;
            public int cbte_punto_vta;
            public long cbte_nro;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct xIdioma
        {
            public string idi_id;
            public string idi_ds;
            public string idi_Vig_Desde;
            public string idi_Vig_hasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct xIncotermss
        {
            public string inc_id;
            public string inc_ds;
            public string inc_Vig_Desde;
            public string inc_Vig_hasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct xItem
        {
            public string pro_codigo;
            public string pro_ds;
            public double pro_qty;
            public int pro_umed;
            public double pro_precio_uni;
            public double pro_precio_item;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct xMoneda
        {
            public string id;
            public string ds;
            public string Vig_Desde;
            public string Vig_hasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct xPais
        {
            public string codigo;
            public string ds;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct xPaisCuit
        {
            public string cuit;
            public string ds;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct xPermisos
        {
            public string id_permiso;
            public int dst_merc;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct xPtoVenta
        {
            public int pvo_nro;
            public string pvo_bloqueado;
            public string pvo_fchbaja;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct xTipo_cbtes
        {
            public int id;
            public string ds;
            public string Vig_Desde;
            public string Vig_hasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct xTipo_expos
        {
            public string tex_id;
            public string tex_ds;
            public string tex_Vig_Desde;
            public string tex_Vig_hasta;
        }

        [StructLayout(LayoutKind.Sequential)]
        internal struct xUMed
        {
            public int id;
            public string ds;
            public string Vig_Desde;
            public string Vig_hasta;
        }
    }
}

